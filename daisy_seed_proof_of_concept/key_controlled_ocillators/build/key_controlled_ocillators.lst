ARM GAS  C:\Users\jpmaitre\AppData\Local\Temp\ccYI9wQo.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 28, 1
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 2
  10              		.eabi_attribute 34, 1
  11              		.eabi_attribute 18, 4
  12              		.file	"key_controlled_ocillators.cpp"
  13              		.text
  14              	.Ltext0:
  15              		.cfi_sections	.debug_frame
  16              		.section	.text._ZN5daisy9DaisySeedD2Ev,"axG",%progbits,_ZN5daisy9DaisySeedD5Ev,comdat
  17              		.align	1
  18              		.p2align 2,,3
  19              		.weak	_ZN5daisy9DaisySeedD2Ev
  20              		.arch armv7e-m
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv5-d16
  26              	_ZN5daisy9DaisySeedD2Ev:
  27              	.LVL0:
  28              	.LFB4676:
  29              		.file 1 "c:\\dev\\daisy_seed\\libdaisy\\src\\daisy_seed.h"
   1:c:\dev\daisy_seed\libdaisy\src\daisy_seed.h **** #pragma once
   2:c:\dev\daisy_seed\libdaisy\src\daisy_seed.h **** #ifndef DSY_SEED_H
   3:c:\dev\daisy_seed\libdaisy\src\daisy_seed.h **** #define DSY_SEED_H
   4:c:\dev\daisy_seed\libdaisy\src\daisy_seed.h **** 
   5:c:\dev\daisy_seed\libdaisy\src\daisy_seed.h **** #include "daisy.h"
   6:c:\dev\daisy_seed\libdaisy\src\daisy_seed.h **** 
   7:c:\dev\daisy_seed\libdaisy\src\daisy_seed.h **** //Uncomment this out if you're still using the rev2 hardware
   8:c:\dev\daisy_seed\libdaisy\src\daisy_seed.h **** //#define SEED_REV2
   9:c:\dev\daisy_seed\libdaisy\src\daisy_seed.h **** 
  10:c:\dev\daisy_seed\libdaisy\src\daisy_seed.h **** namespace daisy
  11:c:\dev\daisy_seed\libdaisy\src\daisy_seed.h **** {
  12:c:\dev\daisy_seed\libdaisy\src\daisy_seed.h **** /**
  13:c:\dev\daisy_seed\libdaisy\src\daisy_seed.h ****    @brief This is the higher-level interface for the Daisy board. \n 
  14:c:\dev\daisy_seed\libdaisy\src\daisy_seed.h ****     All basic peripheral configuration/initialization is setup here. \n
  15:c:\dev\daisy_seed\libdaisy\src\daisy_seed.h **** 
  16:c:\dev\daisy_seed\libdaisy\src\daisy_seed.h ****    @ingroup boards
  17:c:\dev\daisy_seed\libdaisy\src\daisy_seed.h **** */
  18:c:\dev\daisy_seed\libdaisy\src\daisy_seed.h **** class DaisySeed
  19:c:\dev\daisy_seed\libdaisy\src\daisy_seed.h **** {
  20:c:\dev\daisy_seed\libdaisy\src\daisy_seed.h ****   public:
  21:c:\dev\daisy_seed\libdaisy\src\daisy_seed.h ****     DaisySeed() {}
  22:c:\dev\daisy_seed\libdaisy\src\daisy_seed.h ****     ~DaisySeed() {}
  30              		.loc 1 22 5 view -0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		@ link register save eliminated.
  35              	.LBB118:
  36              	.LBI118:
ARM GAS  C:\Users\jpmaitre\AppData\Local\Temp\ccYI9wQo.s 			page 2


  37              		.file 2 "c:\\dev\\daisy_seed\\libdaisy\\src\\sys/system.h"
   1:c:\dev\daisy_seed\libdaisy\src\sys\system.h **** #ifndef DSY_SYSTEM_H
   2:c:\dev\daisy_seed\libdaisy\src\sys\system.h **** #define DSY_SYSTEM_H
   3:c:\dev\daisy_seed\libdaisy\src\sys\system.h **** 
   4:c:\dev\daisy_seed\libdaisy\src\sys\system.h **** #ifndef UNIT_TEST // for unit tests, a dummy implementation is provided below
   5:c:\dev\daisy_seed\libdaisy\src\sys\system.h **** 
   6:c:\dev\daisy_seed\libdaisy\src\sys\system.h **** #include <cstdint>
   7:c:\dev\daisy_seed\libdaisy\src\sys\system.h **** #include "per/tim.h"
   8:c:\dev\daisy_seed\libdaisy\src\sys\system.h **** 
   9:c:\dev\daisy_seed\libdaisy\src\sys\system.h **** namespace daisy
  10:c:\dev\daisy_seed\libdaisy\src\sys\system.h **** {
  11:c:\dev\daisy_seed\libdaisy\src\sys\system.h **** /** A handle for interacting with the Core System.
  12:c:\dev\daisy_seed\libdaisy\src\sys\system.h ****  ** This includes the Clock tree, MPU, global DMA initialization,
  13:c:\dev\daisy_seed\libdaisy\src\sys\system.h ****  ** cache handling, and any other necessary global initiailzation
  14:c:\dev\daisy_seed\libdaisy\src\sys\system.h ****  **
  15:c:\dev\daisy_seed\libdaisy\src\sys\system.h ****  ** @author shensley
  16:c:\dev\daisy_seed\libdaisy\src\sys\system.h ****  ** @ingroup system
  17:c:\dev\daisy_seed\libdaisy\src\sys\system.h ****  */
  18:c:\dev\daisy_seed\libdaisy\src\sys\system.h **** class System
  19:c:\dev\daisy_seed\libdaisy\src\sys\system.h **** {
  20:c:\dev\daisy_seed\libdaisy\src\sys\system.h ****   public:
  21:c:\dev\daisy_seed\libdaisy\src\sys\system.h ****     /** Contains settings for initializing the System */
  22:c:\dev\daisy_seed\libdaisy\src\sys\system.h ****     struct Config
  23:c:\dev\daisy_seed\libdaisy\src\sys\system.h ****     {
  24:c:\dev\daisy_seed\libdaisy\src\sys\system.h ****         /** Specifies the system clock frequency that feeds APB/AHB clocks, etc. */
  25:c:\dev\daisy_seed\libdaisy\src\sys\system.h ****         enum class SysClkFreq
  26:c:\dev\daisy_seed\libdaisy\src\sys\system.h ****         {
  27:c:\dev\daisy_seed\libdaisy\src\sys\system.h ****             FREQ_400MHZ,
  28:c:\dev\daisy_seed\libdaisy\src\sys\system.h ****             FREQ_480MHZ,
  29:c:\dev\daisy_seed\libdaisy\src\sys\system.h ****         };
  30:c:\dev\daisy_seed\libdaisy\src\sys\system.h **** 
  31:c:\dev\daisy_seed\libdaisy\src\sys\system.h ****         /** Method to call on the struct to set to defaults
  32:c:\dev\daisy_seed\libdaisy\src\sys\system.h ****          ** CPU Freq set to 400MHz
  33:c:\dev\daisy_seed\libdaisy\src\sys\system.h ****          ** Cache Enabled
  34:c:\dev\daisy_seed\libdaisy\src\sys\system.h ****          ** */
  35:c:\dev\daisy_seed\libdaisy\src\sys\system.h ****         void Defaults()
  36:c:\dev\daisy_seed\libdaisy\src\sys\system.h ****         {
  37:c:\dev\daisy_seed\libdaisy\src\sys\system.h ****             cpu_freq    = SysClkFreq::FREQ_400MHZ;
  38:c:\dev\daisy_seed\libdaisy\src\sys\system.h ****             use_dcache  = true;
  39:c:\dev\daisy_seed\libdaisy\src\sys\system.h ****             use_icache  = true;
  40:c:\dev\daisy_seed\libdaisy\src\sys\system.h ****             skip_clocks = false;
  41:c:\dev\daisy_seed\libdaisy\src\sys\system.h ****         }
  42:c:\dev\daisy_seed\libdaisy\src\sys\system.h **** 
  43:c:\dev\daisy_seed\libdaisy\src\sys\system.h ****         /** Method to call on the struct to set to boost mode:
  44:c:\dev\daisy_seed\libdaisy\src\sys\system.h ****          ** CPU Freq set to 480MHz
  45:c:\dev\daisy_seed\libdaisy\src\sys\system.h ****          ** Cache Enabled
  46:c:\dev\daisy_seed\libdaisy\src\sys\system.h ****          ** */
  47:c:\dev\daisy_seed\libdaisy\src\sys\system.h ****         void Boost()
  48:c:\dev\daisy_seed\libdaisy\src\sys\system.h ****         {
  49:c:\dev\daisy_seed\libdaisy\src\sys\system.h ****             cpu_freq    = SysClkFreq::FREQ_480MHZ;
  50:c:\dev\daisy_seed\libdaisy\src\sys\system.h ****             use_dcache  = true;
  51:c:\dev\daisy_seed\libdaisy\src\sys\system.h ****             use_icache  = true;
  52:c:\dev\daisy_seed\libdaisy\src\sys\system.h ****             skip_clocks = false;
  53:c:\dev\daisy_seed\libdaisy\src\sys\system.h ****         }
  54:c:\dev\daisy_seed\libdaisy\src\sys\system.h **** 
  55:c:\dev\daisy_seed\libdaisy\src\sys\system.h ****         SysClkFreq cpu_freq;
  56:c:\dev\daisy_seed\libdaisy\src\sys\system.h ****         bool       use_dcache;
ARM GAS  C:\Users\jpmaitre\AppData\Local\Temp\ccYI9wQo.s 			page 3


  57:c:\dev\daisy_seed\libdaisy\src\sys\system.h ****         bool       use_icache;
  58:c:\dev\daisy_seed\libdaisy\src\sys\system.h ****         bool       skip_clocks;
  59:c:\dev\daisy_seed\libdaisy\src\sys\system.h ****     };
  60:c:\dev\daisy_seed\libdaisy\src\sys\system.h **** 
  61:c:\dev\daisy_seed\libdaisy\src\sys\system.h ****     /** Describes the different regions of memory available to the Daisy */
  62:c:\dev\daisy_seed\libdaisy\src\sys\system.h ****     enum MemoryRegion
  63:c:\dev\daisy_seed\libdaisy\src\sys\system.h ****     {
  64:c:\dev\daisy_seed\libdaisy\src\sys\system.h ****         INTERNAL_FLASH = 0,
  65:c:\dev\daisy_seed\libdaisy\src\sys\system.h ****         ITCMRAM,
  66:c:\dev\daisy_seed\libdaisy\src\sys\system.h ****         DTCMRAM,
  67:c:\dev\daisy_seed\libdaisy\src\sys\system.h ****         SRAM_D1,
  68:c:\dev\daisy_seed\libdaisy\src\sys\system.h ****         SRAM_D2,
  69:c:\dev\daisy_seed\libdaisy\src\sys\system.h ****         SRAM_D3,
  70:c:\dev\daisy_seed\libdaisy\src\sys\system.h ****         SDRAM,
  71:c:\dev\daisy_seed\libdaisy\src\sys\system.h ****         QSPI,
  72:c:\dev\daisy_seed\libdaisy\src\sys\system.h ****         INVALID_ADDRESS,
  73:c:\dev\daisy_seed\libdaisy\src\sys\system.h ****     };
  74:c:\dev\daisy_seed\libdaisy\src\sys\system.h **** 
  75:c:\dev\daisy_seed\libdaisy\src\sys\system.h ****     /** Bootloader struct for controlling bootloading parameters */
  76:c:\dev\daisy_seed\libdaisy\src\sys\system.h ****     struct BootInfo
  77:c:\dev\daisy_seed\libdaisy\src\sys\system.h ****     {
  78:c:\dev\daisy_seed\libdaisy\src\sys\system.h ****         enum class Type : uint32_t
  79:c:\dev\daisy_seed\libdaisy\src\sys\system.h ****         {
  80:c:\dev\daisy_seed\libdaisy\src\sys\system.h ****             INVALID      = 0x00000000,
  81:c:\dev\daisy_seed\libdaisy\src\sys\system.h ****             JUMP         = 0xDEADBEEF,
  82:c:\dev\daisy_seed\libdaisy\src\sys\system.h ****             SKIP_TIMEOUT = 0x5AFEB007,
  83:c:\dev\daisy_seed\libdaisy\src\sys\system.h ****             INF_TIMEOUT  = 0xB0074EFA,
  84:c:\dev\daisy_seed\libdaisy\src\sys\system.h ****         } status;
  85:c:\dev\daisy_seed\libdaisy\src\sys\system.h ****         uint32_t data;
  86:c:\dev\daisy_seed\libdaisy\src\sys\system.h ****         enum class Version : uint32_t
  87:c:\dev\daisy_seed\libdaisy\src\sys\system.h ****         {
  88:c:\dev\daisy_seed\libdaisy\src\sys\system.h ****             LT_v6_0 = 0, // Less than v6.0
  89:c:\dev\daisy_seed\libdaisy\src\sys\system.h ****             NONE,        // No bootloader present
  90:c:\dev\daisy_seed\libdaisy\src\sys\system.h ****             v6_0,        // v6.0
  91:c:\dev\daisy_seed\libdaisy\src\sys\system.h ****             v6_1,        // v6.1 or greater
  92:c:\dev\daisy_seed\libdaisy\src\sys\system.h ****             LAST
  93:c:\dev\daisy_seed\libdaisy\src\sys\system.h ****         } version;
  94:c:\dev\daisy_seed\libdaisy\src\sys\system.h ****     };
  95:c:\dev\daisy_seed\libdaisy\src\sys\system.h **** 
  96:c:\dev\daisy_seed\libdaisy\src\sys\system.h ****     System() {}
  97:c:\dev\daisy_seed\libdaisy\src\sys\system.h ****     ~System() {}
  38              		.loc 2 97 5 view .LVU1
  39              		.loc 2 97 5 is_stmt 0 view .LVU2
  40              	.LBE118:
  41              	.LBB119:
  42              	.LBI119:
  43              		.file 3 "c:\\dev\\daisy_seed\\libdaisy\\src\\hid\\usb.h"
   1:c:\dev\daisy_seed\libdaisy\src\hid\usb.h **** #pragma once
   2:c:\dev\daisy_seed\libdaisy\src\hid\usb.h **** #ifndef DSY_HID_USB_H
   3:c:\dev\daisy_seed\libdaisy\src\hid\usb.h **** #define DSY_HID_USB_H
   4:c:\dev\daisy_seed\libdaisy\src\hid\usb.h **** #include <stdint.h>
   5:c:\dev\daisy_seed\libdaisy\src\hid\usb.h **** #include <stdlib.h>
   6:c:\dev\daisy_seed\libdaisy\src\hid\usb.h **** 
   7:c:\dev\daisy_seed\libdaisy\src\hid\usb.h **** namespace daisy
   8:c:\dev\daisy_seed\libdaisy\src\hid\usb.h **** /** @addtogroup human_interface
   9:c:\dev\daisy_seed\libdaisy\src\hid\usb.h ****     @{
  10:c:\dev\daisy_seed\libdaisy\src\hid\usb.h **** */
ARM GAS  C:\Users\jpmaitre\AppData\Local\Temp\ccYI9wQo.s 			page 4


  11:c:\dev\daisy_seed\libdaisy\src\hid\usb.h **** 
  12:c:\dev\daisy_seed\libdaisy\src\hid\usb.h **** {
  13:c:\dev\daisy_seed\libdaisy\src\hid\usb.h **** /** 
  14:c:\dev\daisy_seed\libdaisy\src\hid\usb.h ****     @brief Interface for initializing and using the USB Peripherals on the daisy
  15:c:\dev\daisy_seed\libdaisy\src\hid\usb.h ****     @author Stephen Hensley
  16:c:\dev\daisy_seed\libdaisy\src\hid\usb.h ****     @date December 2019
  17:c:\dev\daisy_seed\libdaisy\src\hid\usb.h **** */
  18:c:\dev\daisy_seed\libdaisy\src\hid\usb.h **** class UsbHandle
  19:c:\dev\daisy_seed\libdaisy\src\hid\usb.h **** {
  20:c:\dev\daisy_seed\libdaisy\src\hid\usb.h ****   public:
  21:c:\dev\daisy_seed\libdaisy\src\hid\usb.h ****     /** Return values for USBHandle Functions */
  22:c:\dev\daisy_seed\libdaisy\src\hid\usb.h ****     enum class Result
  23:c:\dev\daisy_seed\libdaisy\src\hid\usb.h ****     {
  24:c:\dev\daisy_seed\libdaisy\src\hid\usb.h ****         OK,
  25:c:\dev\daisy_seed\libdaisy\src\hid\usb.h ****         ERR,
  26:c:\dev\daisy_seed\libdaisy\src\hid\usb.h ****     };
  27:c:\dev\daisy_seed\libdaisy\src\hid\usb.h **** 
  28:c:\dev\daisy_seed\libdaisy\src\hid\usb.h ****     /** Specified which of the two USB Peripherals to initialize. */
  29:c:\dev\daisy_seed\libdaisy\src\hid\usb.h ****     enum UsbPeriph
  30:c:\dev\daisy_seed\libdaisy\src\hid\usb.h ****     {
  31:c:\dev\daisy_seed\libdaisy\src\hid\usb.h ****         FS_INTERNAL, /**< Internal pin */
  32:c:\dev\daisy_seed\libdaisy\src\hid\usb.h ****         FS_EXTERNAL, /**< FS External D+ pin is Pin 38 (GPIO32). FS External D- pin is Pin 37 (GPIO
  33:c:\dev\daisy_seed\libdaisy\src\hid\usb.h ****         FS_BOTH,     /**< Both */
  34:c:\dev\daisy_seed\libdaisy\src\hid\usb.h ****     };
  35:c:\dev\daisy_seed\libdaisy\src\hid\usb.h **** 
  36:c:\dev\daisy_seed\libdaisy\src\hid\usb.h **** 
  37:c:\dev\daisy_seed\libdaisy\src\hid\usb.h ****     /** Function called upon reception of a buffer */
  38:c:\dev\daisy_seed\libdaisy\src\hid\usb.h ****     typedef void (*ReceiveCallback)(uint8_t* buff, uint32_t* len);
  39:c:\dev\daisy_seed\libdaisy\src\hid\usb.h **** 
  40:c:\dev\daisy_seed\libdaisy\src\hid\usb.h ****     UsbHandle() {}
  41:c:\dev\daisy_seed\libdaisy\src\hid\usb.h **** 
  42:c:\dev\daisy_seed\libdaisy\src\hid\usb.h ****     ~UsbHandle() {}
  44              		.loc 3 42 5 is_stmt 1 view .LVU3
  45              		.loc 3 42 5 is_stmt 0 view .LVU4
  46              	.LBE119:
  47              	.LBB120:
  48              	.LBI120:
  49              		.file 4 "c:\\dev\\daisy_seed\\libdaisy\\src\\per/adc.h"
   1:c:\dev\daisy_seed\libdaisy\src\per\adc.h **** #pragma once
   2:c:\dev\daisy_seed\libdaisy\src\per\adc.h **** #ifndef DSY_ADC_H
   3:c:\dev\daisy_seed\libdaisy\src\per\adc.h **** #define DSY_ADC_H /**< Macro */
   4:c:\dev\daisy_seed\libdaisy\src\per\adc.h **** #include <stdint.h>
   5:c:\dev\daisy_seed\libdaisy\src\per\adc.h **** #include <stdlib.h>
   6:c:\dev\daisy_seed\libdaisy\src\per\adc.h **** #include "daisy_core.h"
   7:c:\dev\daisy_seed\libdaisy\src\per\adc.h **** #include "per/gpio.h"
   8:c:\dev\daisy_seed\libdaisy\src\per\adc.h **** 
   9:c:\dev\daisy_seed\libdaisy\src\per\adc.h **** #define DSY_ADC_MAX_CHANNELS 16 /**< Maximum number of ADC channels */
  10:c:\dev\daisy_seed\libdaisy\src\per\adc.h **** 
  11:c:\dev\daisy_seed\libdaisy\src\per\adc.h **** namespace daisy
  12:c:\dev\daisy_seed\libdaisy\src\per\adc.h **** {
  13:c:\dev\daisy_seed\libdaisy\src\per\adc.h **** /** @addtogroup per_analog
  14:c:\dev\daisy_seed\libdaisy\src\per\adc.h ****     @{
  15:c:\dev\daisy_seed\libdaisy\src\per\adc.h **** */
  16:c:\dev\daisy_seed\libdaisy\src\per\adc.h **** 
  17:c:\dev\daisy_seed\libdaisy\src\per\adc.h **** /* While there may not be many configuration options here,
  18:c:\dev\daisy_seed\libdaisy\src\per\adc.h **** using a struct like this allows us to add more configuration
  19:c:\dev\daisy_seed\libdaisy\src\per\adc.h **** later without breaking existing functionality.
ARM GAS  C:\Users\jpmaitre\AppData\Local\Temp\ccYI9wQo.s 			page 5


  20:c:\dev\daisy_seed\libdaisy\src\per\adc.h **** */
  21:c:\dev\daisy_seed\libdaisy\src\per\adc.h **** 
  22:c:\dev\daisy_seed\libdaisy\src\per\adc.h **** /** @brief   Configuration Structure for an ADC Channel 
  23:c:\dev\daisy_seed\libdaisy\src\per\adc.h ****  *  @details This can be used to configure a a single input, 
  24:c:\dev\daisy_seed\libdaisy\src\per\adc.h ****  *           or a multiplexed input, allowing up to 8 inputs on 
  25:c:\dev\daisy_seed\libdaisy\src\per\adc.h ****  *           one channel.
  26:c:\dev\daisy_seed\libdaisy\src\per\adc.h ****  *  @note    Sharing data lines to multiple muxes _is_ possible, but
  27:c:\dev\daisy_seed\libdaisy\src\per\adc.h ****  *           each channel sharing data lines must be set to the maximum
  28:c:\dev\daisy_seed\libdaisy\src\per\adc.h ****  *           number of channels, even if some multiplexers have fewer
  29:c:\dev\daisy_seed\libdaisy\src\per\adc.h ****  *           inputs connected.
  30:c:\dev\daisy_seed\libdaisy\src\per\adc.h **** */
  31:c:\dev\daisy_seed\libdaisy\src\per\adc.h **** struct AdcChannelConfig
  32:c:\dev\daisy_seed\libdaisy\src\per\adc.h **** {
  33:c:\dev\daisy_seed\libdaisy\src\per\adc.h ****     /** Which pin to use for multiplexing */
  34:c:\dev\daisy_seed\libdaisy\src\per\adc.h ****     enum MuxPin
  35:c:\dev\daisy_seed\libdaisy\src\per\adc.h ****     {
  36:c:\dev\daisy_seed\libdaisy\src\per\adc.h ****         MUX_SEL_0,    /**< & */
  37:c:\dev\daisy_seed\libdaisy\src\per\adc.h ****         MUX_SEL_1,    /**< & */
  38:c:\dev\daisy_seed\libdaisy\src\per\adc.h ****         MUX_SEL_2,    /**< & */
  39:c:\dev\daisy_seed\libdaisy\src\per\adc.h ****         MUX_SEL_LAST, /**< & */
  40:c:\dev\daisy_seed\libdaisy\src\per\adc.h ****     };
  41:c:\dev\daisy_seed\libdaisy\src\per\adc.h **** 
  42:c:\dev\daisy_seed\libdaisy\src\per\adc.h ****     /** \brief per channel conversion speed added to fixed time based on bitdepth, etc. */
  43:c:\dev\daisy_seed\libdaisy\src\per\adc.h ****     enum ConversionSpeed
  44:c:\dev\daisy_seed\libdaisy\src\per\adc.h ****     {
  45:c:\dev\daisy_seed\libdaisy\src\per\adc.h ****         SPEED_1CYCLES_5,
  46:c:\dev\daisy_seed\libdaisy\src\per\adc.h ****         SPEED_2CYCLES_5,
  47:c:\dev\daisy_seed\libdaisy\src\per\adc.h ****         SPEED_8CYCLES_5,
  48:c:\dev\daisy_seed\libdaisy\src\per\adc.h ****         SPEED_16CYCLES_5,
  49:c:\dev\daisy_seed\libdaisy\src\per\adc.h ****         SPEED_32CYCLES_5,
  50:c:\dev\daisy_seed\libdaisy\src\per\adc.h ****         SPEED_64CYCLES_5,
  51:c:\dev\daisy_seed\libdaisy\src\per\adc.h ****         SPEED_387CYCLES_5,
  52:c:\dev\daisy_seed\libdaisy\src\per\adc.h ****         SPEED_810CYCLES_5,
  53:c:\dev\daisy_seed\libdaisy\src\per\adc.h ****     };
  54:c:\dev\daisy_seed\libdaisy\src\per\adc.h **** 
  55:c:\dev\daisy_seed\libdaisy\src\per\adc.h ****     /** Initializes a single ADC pin as an ADC. 
  56:c:\dev\daisy_seed\libdaisy\src\per\adc.h ****     \param pin Pin to init.
  57:c:\dev\daisy_seed\libdaisy\src\per\adc.h ****     \param speed conversion speed for this pin defaults to 8.5 cycles
  58:c:\dev\daisy_seed\libdaisy\src\per\adc.h ****      */
  59:c:\dev\daisy_seed\libdaisy\src\per\adc.h ****     void InitSingle(dsy_gpio_pin pin, ConversionSpeed speed = SPEED_8CYCLES_5);
  60:c:\dev\daisy_seed\libdaisy\src\per\adc.h **** 
  61:c:\dev\daisy_seed\libdaisy\src\per\adc.h ****     /** 
  62:c:\dev\daisy_seed\libdaisy\src\per\adc.h ****     Initializes a single ADC pin as a Multiplexed ADC.
  63:c:\dev\daisy_seed\libdaisy\src\per\adc.h ****     Requires a CD405X Multiplexer connected to the pin.
  64:c:\dev\daisy_seed\libdaisy\src\per\adc.h ****     You only need to supply the mux pins that are required,
  65:c:\dev\daisy_seed\libdaisy\src\per\adc.h ****     e.g. a 4052 mux would only require mux_0 and mux_1.
  66:c:\dev\daisy_seed\libdaisy\src\per\adc.h ****     Internal Callbacks handle the pin addressing.
  67:c:\dev\daisy_seed\libdaisy\src\per\adc.h ****     \param adc_pin &
  68:c:\dev\daisy_seed\libdaisy\src\per\adc.h ****     \param mux_channels must be 1-8
  69:c:\dev\daisy_seed\libdaisy\src\per\adc.h ****     \param mux_0 First mux pin
  70:c:\dev\daisy_seed\libdaisy\src\per\adc.h ****     \param mux_1 Second mux pin
  71:c:\dev\daisy_seed\libdaisy\src\per\adc.h ****     \param mux_2 Third mux pin
  72:c:\dev\daisy_seed\libdaisy\src\per\adc.h ****     \param speed conversion speed for this pin defaults to 8.5 cycles
  73:c:\dev\daisy_seed\libdaisy\src\per\adc.h ****     */
  74:c:\dev\daisy_seed\libdaisy\src\per\adc.h ****     void InitMux(dsy_gpio_pin    adc_pin,
  75:c:\dev\daisy_seed\libdaisy\src\per\adc.h ****                  size_t          mux_channels,
  76:c:\dev\daisy_seed\libdaisy\src\per\adc.h ****                  dsy_gpio_pin    mux_0,
ARM GAS  C:\Users\jpmaitre\AppData\Local\Temp\ccYI9wQo.s 			page 6


  77:c:\dev\daisy_seed\libdaisy\src\per\adc.h ****                  dsy_gpio_pin    mux_1 = {DSY_GPIOX, 0},
  78:c:\dev\daisy_seed\libdaisy\src\per\adc.h ****                  dsy_gpio_pin    mux_2 = {DSY_GPIOX, 0},
  79:c:\dev\daisy_seed\libdaisy\src\per\adc.h ****                  ConversionSpeed speed = SPEED_8CYCLES_5);
  80:c:\dev\daisy_seed\libdaisy\src\per\adc.h **** 
  81:c:\dev\daisy_seed\libdaisy\src\per\adc.h ****     dsy_gpio        pin_;                   /**< & */
  82:c:\dev\daisy_seed\libdaisy\src\per\adc.h ****     dsy_gpio        mux_pin_[MUX_SEL_LAST]; /**< & */
  83:c:\dev\daisy_seed\libdaisy\src\per\adc.h ****     uint8_t         mux_channels_;          /**< & */
  84:c:\dev\daisy_seed\libdaisy\src\per\adc.h ****     ConversionSpeed speed_;
  85:c:\dev\daisy_seed\libdaisy\src\per\adc.h **** };
  86:c:\dev\daisy_seed\libdaisy\src\per\adc.h **** 
  87:c:\dev\daisy_seed\libdaisy\src\per\adc.h **** /**
  88:c:\dev\daisy_seed\libdaisy\src\per\adc.h ****    @brief Handler for analog to digital conversion
  89:c:\dev\daisy_seed\libdaisy\src\per\adc.h **** */
  90:c:\dev\daisy_seed\libdaisy\src\per\adc.h **** class AdcHandle
  91:c:\dev\daisy_seed\libdaisy\src\per\adc.h **** {
  92:c:\dev\daisy_seed\libdaisy\src\per\adc.h ****   public:
  93:c:\dev\daisy_seed\libdaisy\src\per\adc.h ****     /** Supported oversampling amounts */
  94:c:\dev\daisy_seed\libdaisy\src\per\adc.h ****     enum OverSampling
  95:c:\dev\daisy_seed\libdaisy\src\per\adc.h ****     {
  96:c:\dev\daisy_seed\libdaisy\src\per\adc.h ****         OVS_NONE, /**< & */
  97:c:\dev\daisy_seed\libdaisy\src\per\adc.h ****         OVS_4,    /**< & */
  98:c:\dev\daisy_seed\libdaisy\src\per\adc.h ****         OVS_8,    /**< & */
  99:c:\dev\daisy_seed\libdaisy\src\per\adc.h ****         OVS_16,   /**< & */
 100:c:\dev\daisy_seed\libdaisy\src\per\adc.h ****         OVS_32,   /**< & */
 101:c:\dev\daisy_seed\libdaisy\src\per\adc.h ****         OVS_64,   /**< & */
 102:c:\dev\daisy_seed\libdaisy\src\per\adc.h ****         OVS_128,  /**< & */
 103:c:\dev\daisy_seed\libdaisy\src\per\adc.h ****         OVS_256,  /**< & */
 104:c:\dev\daisy_seed\libdaisy\src\per\adc.h ****         OVS_512,  /**< & */
 105:c:\dev\daisy_seed\libdaisy\src\per\adc.h ****         OVS_1024, /**< & */
 106:c:\dev\daisy_seed\libdaisy\src\per\adc.h ****         OVS_LAST, /**< & */
 107:c:\dev\daisy_seed\libdaisy\src\per\adc.h ****     };
 108:c:\dev\daisy_seed\libdaisy\src\per\adc.h **** 
 109:c:\dev\daisy_seed\libdaisy\src\per\adc.h ****     AdcHandle() {}
 110:c:\dev\daisy_seed\libdaisy\src\per\adc.h ****     ~AdcHandle() {}
  50              		.loc 4 110 5 is_stmt 1 view .LVU5
  51              		.loc 4 110 5 is_stmt 0 view .LVU6
  52              	.LBE120:
  53              	.LBB121:
  54              	.LBI121:
  55              		.file 5 "c:\\dev\\daisy_seed\\libdaisy\\src\\hid/audio.h"
   1:c:\dev\daisy_seed\libdaisy\src\hid\audio.h **** #ifndef DSY_AUDIO_H
   2:c:\dev\daisy_seed\libdaisy\src\hid\audio.h **** #define DSY_AUDIO_H /**< & */
   3:c:\dev\daisy_seed\libdaisy\src\hid\audio.h **** 
   4:c:\dev\daisy_seed\libdaisy\src\hid\audio.h **** #include "per/sai.h"
   5:c:\dev\daisy_seed\libdaisy\src\hid\audio.h **** 
   6:c:\dev\daisy_seed\libdaisy\src\hid\audio.h **** namespace daisy
   7:c:\dev\daisy_seed\libdaisy\src\hid\audio.h **** {
   8:c:\dev\daisy_seed\libdaisy\src\hid\audio.h **** /** @brief Audio Engine Handle
   9:c:\dev\daisy_seed\libdaisy\src\hid\audio.h ****  *  @ingroup audio 
  10:c:\dev\daisy_seed\libdaisy\src\hid\audio.h ****  *  @details This class allows for higher level access to an audio engine.
  11:c:\dev\daisy_seed\libdaisy\src\hid\audio.h ****  *           If you're using a SOM like the DaisySeed or DaisyPatchSM (or any 
  12:c:\dev\daisy_seed\libdaisy\src\hid\audio.h ****  *            board that includes one of those objects) then the intialization
  13:c:\dev\daisy_seed\libdaisy\src\hid\audio.h ****  *            is already taken  care of.
  14:c:\dev\daisy_seed\libdaisy\src\hid\audio.h ****  *           If you're setting up your own custom hardware, or need to make changes
  15:c:\dev\daisy_seed\libdaisy\src\hid\audio.h ****  *           you will have to take the following steps:
  16:c:\dev\daisy_seed\libdaisy\src\hid\audio.h ****  *             1. Create and Initialize an SaiHandle or two depending on your requirements
  17:c:\dev\daisy_seed\libdaisy\src\hid\audio.h ****  *             2. Initialize the Audio Handle with the desired settings and the Initialized SaiHand
ARM GAS  C:\Users\jpmaitre\AppData\Local\Temp\ccYI9wQo.s 			page 7


  18:c:\dev\daisy_seed\libdaisy\src\hid\audio.h ****  *             3. If the connected codec requires special configuration or initialization, do so
  19:c:\dev\daisy_seed\libdaisy\src\hid\audio.h ****  *             4. Write a callback method using either the AudioCallback or the InterleavingAudioCa
  20:c:\dev\daisy_seed\libdaisy\src\hid\audio.h ****  *             5. Start the Audio using one of the StartAudio function
  21:c:\dev\daisy_seed\libdaisy\src\hid\audio.h ****  */
  22:c:\dev\daisy_seed\libdaisy\src\hid\audio.h **** class AudioHandle
  23:c:\dev\daisy_seed\libdaisy\src\hid\audio.h **** {
  24:c:\dev\daisy_seed\libdaisy\src\hid\audio.h ****   public:
  25:c:\dev\daisy_seed\libdaisy\src\hid\audio.h ****     /** Manually configurable details about the Audio Engine */
  26:c:\dev\daisy_seed\libdaisy\src\hid\audio.h ****     /** TODO: Figure out how to get samplerate in here. */
  27:c:\dev\daisy_seed\libdaisy\src\hid\audio.h ****     struct Config
  28:c:\dev\daisy_seed\libdaisy\src\hid\audio.h ****     {
  29:c:\dev\daisy_seed\libdaisy\src\hid\audio.h ****         /** number of samples to process per callback */
  30:c:\dev\daisy_seed\libdaisy\src\hid\audio.h ****         size_t blocksize;
  31:c:\dev\daisy_seed\libdaisy\src\hid\audio.h **** 
  32:c:\dev\daisy_seed\libdaisy\src\hid\audio.h ****         /**< Sample rate of audio */
  33:c:\dev\daisy_seed\libdaisy\src\hid\audio.h ****         SaiHandle::Config::SampleRate samplerate;
  34:c:\dev\daisy_seed\libdaisy\src\hid\audio.h **** 
  35:c:\dev\daisy_seed\libdaisy\src\hid\audio.h ****         /** factor for adjustment before and after callback for hardware that may have extra headro
  36:c:\dev\daisy_seed\libdaisy\src\hid\audio.h ****         float postgain;
  37:c:\dev\daisy_seed\libdaisy\src\hid\audio.h **** 
  38:c:\dev\daisy_seed\libdaisy\src\hid\audio.h ****         /** factor for additional one-sided compensation to audio path for hardware that may
  39:c:\dev\daisy_seed\libdaisy\src\hid\audio.h ****          *  have unequal input/output ranges
  40:c:\dev\daisy_seed\libdaisy\src\hid\audio.h ****          */
  41:c:\dev\daisy_seed\libdaisy\src\hid\audio.h ****         float output_compensation;
  42:c:\dev\daisy_seed\libdaisy\src\hid\audio.h **** 
  43:c:\dev\daisy_seed\libdaisy\src\hid\audio.h ****         /** Sets default values for config struct */
  44:c:\dev\daisy_seed\libdaisy\src\hid\audio.h ****         Config()
  45:c:\dev\daisy_seed\libdaisy\src\hid\audio.h ****         : blocksize(48),
  46:c:\dev\daisy_seed\libdaisy\src\hid\audio.h ****           samplerate(SaiHandle::Config::SampleRate::SAI_48KHZ),
  47:c:\dev\daisy_seed\libdaisy\src\hid\audio.h ****           postgain(1.f),
  48:c:\dev\daisy_seed\libdaisy\src\hid\audio.h ****           output_compensation(1.f)
  49:c:\dev\daisy_seed\libdaisy\src\hid\audio.h ****         {
  50:c:\dev\daisy_seed\libdaisy\src\hid\audio.h ****         }
  51:c:\dev\daisy_seed\libdaisy\src\hid\audio.h ****     };
  52:c:\dev\daisy_seed\libdaisy\src\hid\audio.h **** 
  53:c:\dev\daisy_seed\libdaisy\src\hid\audio.h ****     enum class Result
  54:c:\dev\daisy_seed\libdaisy\src\hid\audio.h ****     {
  55:c:\dev\daisy_seed\libdaisy\src\hid\audio.h ****         OK,
  56:c:\dev\daisy_seed\libdaisy\src\hid\audio.h ****         ERR,
  57:c:\dev\daisy_seed\libdaisy\src\hid\audio.h ****     };
  58:c:\dev\daisy_seed\libdaisy\src\hid\audio.h **** 
  59:c:\dev\daisy_seed\libdaisy\src\hid\audio.h ****     /** Non-Interleaving input buffer
  60:c:\dev\daisy_seed\libdaisy\src\hid\audio.h ****      * Buffer arranged by float[chn][sample] 
  61:c:\dev\daisy_seed\libdaisy\src\hid\audio.h ****      * const so that the user can't modify the input
  62:c:\dev\daisy_seed\libdaisy\src\hid\audio.h ****      */
  63:c:\dev\daisy_seed\libdaisy\src\hid\audio.h ****     typedef const float* const* InputBuffer;
  64:c:\dev\daisy_seed\libdaisy\src\hid\audio.h **** 
  65:c:\dev\daisy_seed\libdaisy\src\hid\audio.h ****     /** Non-Interleaving output buffer
  66:c:\dev\daisy_seed\libdaisy\src\hid\audio.h ****      * Arranged by float[chn][sample] 
  67:c:\dev\daisy_seed\libdaisy\src\hid\audio.h ****      */
  68:c:\dev\daisy_seed\libdaisy\src\hid\audio.h ****     typedef float** OutputBuffer;
  69:c:\dev\daisy_seed\libdaisy\src\hid\audio.h **** 
  70:c:\dev\daisy_seed\libdaisy\src\hid\audio.h ****     /** Type for a Non-Interleaving audio callback 
  71:c:\dev\daisy_seed\libdaisy\src\hid\audio.h ****      * Non-Interleaving audio callbacks in daisy will be of this type
  72:c:\dev\daisy_seed\libdaisy\src\hid\audio.h ****      */
  73:c:\dev\daisy_seed\libdaisy\src\hid\audio.h ****     typedef void (*AudioCallback)(InputBuffer  in,
  74:c:\dev\daisy_seed\libdaisy\src\hid\audio.h ****                                   OutputBuffer out,
ARM GAS  C:\Users\jpmaitre\AppData\Local\Temp\ccYI9wQo.s 			page 8


  75:c:\dev\daisy_seed\libdaisy\src\hid\audio.h ****                                   size_t       size);
  76:c:\dev\daisy_seed\libdaisy\src\hid\audio.h **** 
  77:c:\dev\daisy_seed\libdaisy\src\hid\audio.h ****     /** Interleaving Input buffer
  78:c:\dev\daisy_seed\libdaisy\src\hid\audio.h ****      ** audio is prepared as { L0, R0, L1, R1, . . . LN, RN }]
  79:c:\dev\daisy_seed\libdaisy\src\hid\audio.h ****      ** this is const, as the user shouldn't modify it
  80:c:\dev\daisy_seed\libdaisy\src\hid\audio.h ****     */
  81:c:\dev\daisy_seed\libdaisy\src\hid\audio.h ****     typedef const float* InterleavingInputBuffer;
  82:c:\dev\daisy_seed\libdaisy\src\hid\audio.h **** 
  83:c:\dev\daisy_seed\libdaisy\src\hid\audio.h ****     /** Interleaving Output buffer 
  84:c:\dev\daisy_seed\libdaisy\src\hid\audio.h ****      ** audio is prepared as { L0, R0, L1, R1, . . . LN, RN }
  85:c:\dev\daisy_seed\libdaisy\src\hid\audio.h ****     */
  86:c:\dev\daisy_seed\libdaisy\src\hid\audio.h ****     typedef float* InterleavingOutputBuffer;
  87:c:\dev\daisy_seed\libdaisy\src\hid\audio.h **** 
  88:c:\dev\daisy_seed\libdaisy\src\hid\audio.h ****     /** Interleaving Audio Callback 
  89:c:\dev\daisy_seed\libdaisy\src\hid\audio.h ****      * Interleaving audio callbacks in daisy must be of this type
  90:c:\dev\daisy_seed\libdaisy\src\hid\audio.h ****      */
  91:c:\dev\daisy_seed\libdaisy\src\hid\audio.h ****     typedef void (*InterleavingAudioCallback)(InterleavingInputBuffer  in,
  92:c:\dev\daisy_seed\libdaisy\src\hid\audio.h ****                                               InterleavingOutputBuffer out,
  93:c:\dev\daisy_seed\libdaisy\src\hid\audio.h ****                                               size_t                   size);
  94:c:\dev\daisy_seed\libdaisy\src\hid\audio.h **** 
  95:c:\dev\daisy_seed\libdaisy\src\hid\audio.h ****     AudioHandle() : pimpl_(nullptr) {}
  96:c:\dev\daisy_seed\libdaisy\src\hid\audio.h ****     ~AudioHandle() {}
  56              		.loc 5 96 5 is_stmt 1 view .LVU7
  57              		.loc 5 96 5 is_stmt 0 view .LVU8
  58              	.LBE121:
  59              		.loc 1 22 19 view .LVU9
  60 0000 7047     		bx	lr
  61              		.cfi_endproc
  62              	.LFE4676:
  64              		.weak	_ZN5daisy9DaisySeedD1Ev
  65              		.thumb_set _ZN5daisy9DaisySeedD1Ev,_ZN5daisy9DaisySeedD2Ev
  66 0002 00BF     		.section	.text.__tcf_0,"ax",%progbits
  67              		.align	1
  68              		.p2align 2,,3
  69              		.syntax unified
  70              		.thumb
  71              		.thumb_func
  72              		.fpu fpv5-d16
  74              	__tcf_0:
  75              	.LFB5254:
  76              		.file 6 "key_controlled_ocillators.cpp"
   1:key_controlled_ocillators.cpp **** #include "daisysp.h"
   2:key_controlled_ocillators.cpp **** #include "daisy_seed.h"
   3:key_controlled_ocillators.cpp **** 
   4:key_controlled_ocillators.cpp **** using namespace daisysp;
   5:key_controlled_ocillators.cpp **** using namespace daisy;
   6:key_controlled_ocillators.cpp **** 
   7:key_controlled_ocillators.cpp **** /* Constants */
   8:key_controlled_ocillators.cpp **** #define MAX_MESSAGE_SIZE 20
   9:key_controlled_ocillators.cpp **** #define NB_OSCILLATORS   6
  10:key_controlled_ocillators.cpp **** 
  11:key_controlled_ocillators.cpp **** /* Types */
  12:key_controlled_ocillators.cpp **** typedef enum {KEY_UP_MSG, KEY_DOWN_MSG} e_msg_type;
  13:key_controlled_ocillators.cpp **** 
  14:key_controlled_ocillators.cpp **** /* Module variables */ 
  15:key_controlled_ocillators.cpp **** static DaisySeed  hw;
  16:key_controlled_ocillators.cpp **** static Oscillator osc[NB_OSCILLATORS];
ARM GAS  C:\Users\jpmaitre\AppData\Local\Temp\ccYI9wQo.s 			page 9


  77              		.loc 6 16 19 is_stmt 1 view -0
  78              		.cfi_startproc
  79              		@ args = 0, pretend = 0, frame = 0
  80              		@ frame_needed = 0, uses_anonymous_args = 0
  81              		@ link register save eliminated.
  82              		.loc 6 16 19 is_stmt 0 view .LVU11
  83 0000 7047     		bx	lr
  84              		.cfi_endproc
  85              	.LFE5254:
  87 0002 00BF     		.section	.text._ZL13AudioCallbackPKfPfj,"ax",%progbits
  88              		.align	1
  89              		.p2align 2,,3
  90              		.syntax unified
  91              		.thumb
  92              		.thumb_func
  93              		.fpu fpv5-d16
  95              	_ZL13AudioCallbackPKfPfj:
  96              	.LVL1:
  97              	.LFB4681:
  17:key_controlled_ocillators.cpp **** 
  18:key_controlled_ocillators.cpp **** /* Audio callback function */
  19:key_controlled_ocillators.cpp **** static void AudioCallback(AudioHandle::InterleavingInputBuffer  in,
  20:key_controlled_ocillators.cpp ****                           AudioHandle::InterleavingOutputBuffer out,
  21:key_controlled_ocillators.cpp ****                           size_t                                size)
  22:key_controlled_ocillators.cpp **** {
  98              		.loc 6 22 1 is_stmt 1 view -0
  99              		.cfi_startproc
 100              		@ args = 0, pretend = 0, frame = 0
 101              		@ frame_needed = 0, uses_anonymous_args = 0
  23:key_controlled_ocillators.cpp ****     float sig;
 102              		.loc 6 23 5 view .LVU13
  24:key_controlled_ocillators.cpp **** 
  25:key_controlled_ocillators.cpp ****     for(size_t block_idx = 0; block_idx < size; block_idx += 2)
 103              		.loc 6 25 5 view .LVU14
 104              	.LBB122:
 105              		.loc 6 25 41 view .LVU15
 106 0000 22B3     		cbz	r2, .L14
 107 0002 013A     		subs	r2, r2, #1
 108              	.LVL2:
 109              		.loc 6 25 41 is_stmt 0 view .LVU16
 110              	.LBE122:
  22:key_controlled_ocillators.cpp ****     float sig;
 111              		.loc 6 22 1 view .LVU17
 112 0004 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 113              		.cfi_def_cfa_offset 24
 114              		.cfi_offset 4, -24
 115              		.cfi_offset 5, -20
 116              		.cfi_offset 6, -16
 117              		.cfi_offset 7, -12
 118              		.cfi_offset 8, -8
 119              		.cfi_offset 14, -4
 120 0008 0E46     		mov	r6, r1
 121              	.LBB126:
 122              		.loc 6 25 41 view .LVU18
 123 000a 0027     		movs	r7, #0
 124 000c 104D     		ldr	r5, .L18
 125 000e 4FEA5208 		lsr	r8, r2, #1
ARM GAS  C:\Users\jpmaitre\AppData\Local\Temp\ccYI9wQo.s 			page 10


 126              	.LBE126:
  22:key_controlled_ocillators.cpp ****     float sig;
 127              		.loc 6 22 1 view .LVU19
 128 0012 2DED028B 		vpush.64	{d8}
 129              		.cfi_def_cfa_offset 32
 130              		.cfi_offset 80, -32
 131              		.cfi_offset 81, -28
 132              	.LVL3:
 133              	.L7:
  22:key_controlled_ocillators.cpp ****     float sig;
 134              		.loc 6 22 1 view .LVU20
 135 0016 0F4C     		ldr	r4, .L18+4
 136              	.LBB127:
 137              	.LBB123:
  26:key_controlled_ocillators.cpp ****     {
  27:key_controlled_ocillators.cpp ****         sig = 0;
 138              		.loc 6 27 13 view .LVU21
 139 0018 9FED0F8A 		vldr.32	s16, .L18+8
 140              	.L6:
 141              	.LVL4:
 142              	.LBB124:
  28:key_controlled_ocillators.cpp ****         for(size_t osc_idx=0; osc_idx < NB_OSCILLATORS; osc_idx++)
  29:key_controlled_ocillators.cpp ****         {
  30:key_controlled_ocillators.cpp ****             sig += osc[osc_idx].Process();
 143              		.loc 6 30 13 is_stmt 1 discriminator 2 view .LVU22
 144              		.loc 6 30 40 is_stmt 0 discriminator 2 view .LVU23
 145 001c 2046     		mov	r0, r4
  28:key_controlled_ocillators.cpp ****         for(size_t osc_idx=0; osc_idx < NB_OSCILLATORS; osc_idx++)
 146              		.loc 6 28 39 discriminator 2 view .LVU24
 147 001e 2C34     		adds	r4, r4, #44
 148              		.loc 6 30 40 discriminator 2 view .LVU25
 149 0020 FFF7FEFF 		bl	_ZN7daisysp10Oscillator7ProcessEv
 150              	.LVL5:
 151              		.loc 6 30 17 discriminator 2 view .LVU26
 152 0024 38EE008A 		vadd.f32	s16, s16, s0
 153              	.LVL6:
  28:key_controlled_ocillators.cpp ****         for(size_t osc_idx=0; osc_idx < NB_OSCILLATORS; osc_idx++)
 154              		.loc 6 28 9 is_stmt 1 discriminator 2 view .LVU27
  28:key_controlled_ocillators.cpp ****         for(size_t osc_idx=0; osc_idx < NB_OSCILLATORS; osc_idx++)
 155              		.loc 6 28 39 discriminator 2 view .LVU28
 156 0028 AC42     		cmp	r4, r5
 157 002a F7D1     		bne	.L6
 158              	.LBE124:
  31:key_controlled_ocillators.cpp ****         }
  32:key_controlled_ocillators.cpp **** 
  33:key_controlled_ocillators.cpp ****         // left out
  34:key_controlled_ocillators.cpp ****         out[block_idx] = sig;
 159              		.loc 6 34 9 discriminator 2 view .LVU29
 160              	.LBE123:
  25:key_controlled_ocillators.cpp ****     {
 161              		.loc 6 25 41 is_stmt 0 discriminator 2 view .LVU30
 162 002c 4745     		cmp	r7, r8
 163              	.LBB125:
 164              		.loc 6 34 24 discriminator 2 view .LVU31
 165 002e 86ED008A 		vstr.32	s16, [r6]
  35:key_controlled_ocillators.cpp **** 
  36:key_controlled_ocillators.cpp ****         // right out
ARM GAS  C:\Users\jpmaitre\AppData\Local\Temp\ccYI9wQo.s 			page 11


  37:key_controlled_ocillators.cpp ****         out[block_idx + 1] = sig;
 166              		.loc 6 37 9 is_stmt 1 discriminator 2 view .LVU32
 167              		.loc 6 37 28 is_stmt 0 discriminator 2 view .LVU33
 168 0032 86ED018A 		vstr.32	s16, [r6, #4]
 169              	.LBE125:
  25:key_controlled_ocillators.cpp ****     {
 170              		.loc 6 25 5 is_stmt 1 discriminator 2 view .LVU34
 171              	.LVL7:
  25:key_controlled_ocillators.cpp ****     {
 172              		.loc 6 25 41 discriminator 2 view .LVU35
 173 0036 07F10103 		add	r3, r7, #1
 174 003a 06F10806 		add	r6, r6, #8
 175 003e 01D0     		beq	.L17
 176 0040 1F46     		mov	r7, r3
 177              	.LVL8:
  25:key_controlled_ocillators.cpp ****     {
 178              		.loc 6 25 41 is_stmt 0 discriminator 2 view .LVU36
 179 0042 E8E7     		b	.L7
 180              	.LVL9:
 181              	.L17:
  25:key_controlled_ocillators.cpp ****     {
 182              		.loc 6 25 41 discriminator 2 view .LVU37
 183              	.LBE127:
  38:key_controlled_ocillators.cpp ****     }
  39:key_controlled_ocillators.cpp **** }
 184              		.loc 6 39 1 view .LVU38
 185 0044 BDEC028B 		vldm	sp!, {d8}
 186              		.cfi_restore 80
 187              		.cfi_restore 81
 188              		.cfi_def_cfa_offset 24
 189              	.LVL10:
 190              		.loc 6 39 1 view .LVU39
 191 0048 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 192              	.LVL11:
 193              	.L14:
 194              		.cfi_def_cfa_offset 0
 195              		.cfi_restore 4
 196              		.cfi_restore 5
 197              		.cfi_restore 6
 198              		.cfi_restore 7
 199              		.cfi_restore 8
 200              		.cfi_restore 14
 201              		.loc 6 39 1 view .LVU40
 202 004c 7047     		bx	lr
 203              	.L19:
 204 004e 00BF     		.align	2
 205              	.L18:
 206 0050 08010000 		.word	.LANCHOR0+264
 207 0054 00000000 		.word	.LANCHOR0
 208 0058 00000000 		.word	0
 209              		.cfi_endproc
 210              	.LFE4681:
 212              		.section	.text._Z15initialize_uartPN5daisy11UartHandlerE,"ax",%progbits
 213              		.align	1
 214              		.p2align 2,,3
 215              		.global	_Z15initialize_uartPN5daisy11UartHandlerE
 216              		.syntax unified
ARM GAS  C:\Users\jpmaitre\AppData\Local\Temp\ccYI9wQo.s 			page 12


 217              		.thumb
 218              		.thumb_func
 219              		.fpu fpv5-d16
 221              	_Z15initialize_uartPN5daisy11UartHandlerE:
 222              	.LVL12:
 223              	.LFB4682:
  40:key_controlled_ocillators.cpp **** 
  41:key_controlled_ocillators.cpp **** /* Configure UART */
  42:key_controlled_ocillators.cpp **** void initialize_uart(UartHandler* p_uart)
  43:key_controlled_ocillators.cpp **** {
 224              		.loc 6 43 1 is_stmt 1 view -0
 225              		.cfi_startproc
 226              		@ args = 0, pretend = 0, frame = 32
 227              		@ frame_needed = 0, uses_anonymous_args = 0
  44:key_controlled_ocillators.cpp ****     UartHandler::Config config;
 228              		.loc 6 44 5 view .LVU42
  43:key_controlled_ocillators.cpp ****     UartHandler::Config config;
 229              		.loc 6 43 1 is_stmt 0 view .LVU43
 230 0000 10B5     		push	{r4, lr}
 231              		.cfi_def_cfa_offset 8
 232              		.cfi_offset 4, -8
 233              		.cfi_offset 14, -4
 234              	.LBB128:
 235              	.LBB129:
 236              	.LBB130:
 237              		.file 7 "c:\\dev\\daisy_seed\\libdaisy\\src\\per/uart.h"
   1:c:\dev\daisy_seed\libdaisy\src\per\uart.h **** /* 
   2:c:\dev\daisy_seed\libdaisy\src\per\uart.h **** TODO
   3:c:\dev\daisy_seed\libdaisy\src\per\uart.h **** - Overflow handling, etc. for Rx Queue.
   4:c:\dev\daisy_seed\libdaisy\src\per\uart.h **** */
   5:c:\dev\daisy_seed\libdaisy\src\per\uart.h **** 
   6:c:\dev\daisy_seed\libdaisy\src\per\uart.h **** #pragma once
   7:c:\dev\daisy_seed\libdaisy\src\per\uart.h **** #ifndef DSY_UART_H
   8:c:\dev\daisy_seed\libdaisy\src\per\uart.h **** #define DSY_UART_H /**< macro */
   9:c:\dev\daisy_seed\libdaisy\src\per\uart.h **** #include "daisy_core.h"
  10:c:\dev\daisy_seed\libdaisy\src\per\uart.h **** 
  11:c:\dev\daisy_seed\libdaisy\src\per\uart.h **** 
  12:c:\dev\daisy_seed\libdaisy\src\per\uart.h **** namespace daisy
  13:c:\dev\daisy_seed\libdaisy\src\per\uart.h **** {
  14:c:\dev\daisy_seed\libdaisy\src\per\uart.h **** /** @addtogroup serial
  15:c:\dev\daisy_seed\libdaisy\src\per\uart.h ****     @{
  16:c:\dev\daisy_seed\libdaisy\src\per\uart.h ****     */
  17:c:\dev\daisy_seed\libdaisy\src\per\uart.h **** 
  18:c:\dev\daisy_seed\libdaisy\src\per\uart.h **** /** 
  19:c:\dev\daisy_seed\libdaisy\src\per\uart.h ****     Uart Peripheral
  20:c:\dev\daisy_seed\libdaisy\src\per\uart.h ****     @author shensley
  21:c:\dev\daisy_seed\libdaisy\src\per\uart.h ****     @date March 2020
  22:c:\dev\daisy_seed\libdaisy\src\per\uart.h ****     */
  23:c:\dev\daisy_seed\libdaisy\src\per\uart.h **** class UartHandler
  24:c:\dev\daisy_seed\libdaisy\src\per\uart.h **** {
  25:c:\dev\daisy_seed\libdaisy\src\per\uart.h ****   public:
  26:c:\dev\daisy_seed\libdaisy\src\per\uart.h ****     struct Config
  27:c:\dev\daisy_seed\libdaisy\src\per\uart.h ****     {
  28:c:\dev\daisy_seed\libdaisy\src\per\uart.h ****         enum class Peripheral
  29:c:\dev\daisy_seed\libdaisy\src\per\uart.h ****         {
  30:c:\dev\daisy_seed\libdaisy\src\per\uart.h ****             USART_1,
  31:c:\dev\daisy_seed\libdaisy\src\per\uart.h ****             USART_2,
ARM GAS  C:\Users\jpmaitre\AppData\Local\Temp\ccYI9wQo.s 			page 13


  32:c:\dev\daisy_seed\libdaisy\src\per\uart.h ****             USART_3,
  33:c:\dev\daisy_seed\libdaisy\src\per\uart.h ****             UART_4,
  34:c:\dev\daisy_seed\libdaisy\src\per\uart.h ****             UART_5,
  35:c:\dev\daisy_seed\libdaisy\src\per\uart.h ****             USART_6,
  36:c:\dev\daisy_seed\libdaisy\src\per\uart.h ****             UART_7,
  37:c:\dev\daisy_seed\libdaisy\src\per\uart.h ****             UART_8,
  38:c:\dev\daisy_seed\libdaisy\src\per\uart.h ****             LPUART_1,
  39:c:\dev\daisy_seed\libdaisy\src\per\uart.h ****         };
  40:c:\dev\daisy_seed\libdaisy\src\per\uart.h **** 
  41:c:\dev\daisy_seed\libdaisy\src\per\uart.h ****         enum class StopBits
  42:c:\dev\daisy_seed\libdaisy\src\per\uart.h ****         {
  43:c:\dev\daisy_seed\libdaisy\src\per\uart.h ****             BITS_0_5,
  44:c:\dev\daisy_seed\libdaisy\src\per\uart.h ****             BITS_1,
  45:c:\dev\daisy_seed\libdaisy\src\per\uart.h ****             BITS_1_5,
  46:c:\dev\daisy_seed\libdaisy\src\per\uart.h ****             BITS_2,
  47:c:\dev\daisy_seed\libdaisy\src\per\uart.h ****         };
  48:c:\dev\daisy_seed\libdaisy\src\per\uart.h **** 
  49:c:\dev\daisy_seed\libdaisy\src\per\uart.h ****         enum class Parity
  50:c:\dev\daisy_seed\libdaisy\src\per\uart.h ****         {
  51:c:\dev\daisy_seed\libdaisy\src\per\uart.h ****             NONE,
  52:c:\dev\daisy_seed\libdaisy\src\per\uart.h ****             EVEN,
  53:c:\dev\daisy_seed\libdaisy\src\per\uart.h ****             ODD,
  54:c:\dev\daisy_seed\libdaisy\src\per\uart.h ****         };
  55:c:\dev\daisy_seed\libdaisy\src\per\uart.h **** 
  56:c:\dev\daisy_seed\libdaisy\src\per\uart.h ****         enum class Mode
  57:c:\dev\daisy_seed\libdaisy\src\per\uart.h ****         {
  58:c:\dev\daisy_seed\libdaisy\src\per\uart.h ****             RX,
  59:c:\dev\daisy_seed\libdaisy\src\per\uart.h ****             TX,
  60:c:\dev\daisy_seed\libdaisy\src\per\uart.h ****             TX_RX,
  61:c:\dev\daisy_seed\libdaisy\src\per\uart.h ****         };
  62:c:\dev\daisy_seed\libdaisy\src\per\uart.h **** 
  63:c:\dev\daisy_seed\libdaisy\src\per\uart.h ****         enum class WordLength
  64:c:\dev\daisy_seed\libdaisy\src\per\uart.h ****         {
  65:c:\dev\daisy_seed\libdaisy\src\per\uart.h ****             BITS_7,
  66:c:\dev\daisy_seed\libdaisy\src\per\uart.h ****             BITS_8,
  67:c:\dev\daisy_seed\libdaisy\src\per\uart.h ****             BITS_9,
  68:c:\dev\daisy_seed\libdaisy\src\per\uart.h ****         };
  69:c:\dev\daisy_seed\libdaisy\src\per\uart.h **** 
  70:c:\dev\daisy_seed\libdaisy\src\per\uart.h ****         struct
  71:c:\dev\daisy_seed\libdaisy\src\per\uart.h ****         {
  72:c:\dev\daisy_seed\libdaisy\src\per\uart.h ****             dsy_gpio_pin tx; /**< & */
  73:c:\dev\daisy_seed\libdaisy\src\per\uart.h ****             dsy_gpio_pin rx; /**< & */
  74:c:\dev\daisy_seed\libdaisy\src\per\uart.h ****         } pin_config;        /**< & */
  75:c:\dev\daisy_seed\libdaisy\src\per\uart.h **** 
  76:c:\dev\daisy_seed\libdaisy\src\per\uart.h ****         Config()
  77:c:\dev\daisy_seed\libdaisy\src\per\uart.h ****         {
  78:c:\dev\daisy_seed\libdaisy\src\per\uart.h ****             // user must init periph, pin_config, and mode
  79:c:\dev\daisy_seed\libdaisy\src\per\uart.h ****             stopbits   = StopBits::BITS_1;
 238              		.loc 7 79 24 view .LVU44
 239 0002 0121     		movs	r1, #1
 240              	.LBE130:
 241              	.LBE129:
 242              	.LBE128:
  43:key_controlled_ocillators.cpp ****     UartHandler::Config config;
 243              		.loc 6 43 1 view .LVU45
 244 0004 88B0     		sub	sp, sp, #32
 245              		.cfi_def_cfa_offset 40
ARM GAS  C:\Users\jpmaitre\AppData\Local\Temp\ccYI9wQo.s 			page 14


 246              	.LVL13:
 247              	.LBB137:
 248              	.LBI128:
  76:c:\dev\daisy_seed\libdaisy\src\per\uart.h ****         {
 249              		.loc 7 76 9 is_stmt 1 view .LVU46
 250              	.LBB134:
 251              	.LBB131:
 252              		.loc 7 79 13 view .LVU47
 253              	.LBE131:
 254              	.LBE134:
 255              	.LBE137:
  45:key_controlled_ocillators.cpp **** 
  46:key_controlled_ocillators.cpp ****     config.baudrate      = 115200;
  47:key_controlled_ocillators.cpp ****     config.periph        = UartHandler::Config::Peripheral::USART_1;
  48:key_controlled_ocillators.cpp ****     config.stopbits      = UartHandler::Config::StopBits::BITS_1;
  49:key_controlled_ocillators.cpp ****     config.parity        = UartHandler::Config::Parity::NONE;
  50:key_controlled_ocillators.cpp ****     config.mode          = UartHandler::Config::Mode::TX_RX;
  51:key_controlled_ocillators.cpp ****     config.wordlength    = UartHandler::Config::WordLength::BITS_8;
  52:key_controlled_ocillators.cpp ****     config.pin_config.rx = {DSY_GPIOB, 7};  // (USART_1 RX) Daisy pin 15
 256              		.loc 6 52 26 is_stmt 0 view .LVU48
 257 0006 0B4A     		ldr	r2, .L22
  46:key_controlled_ocillators.cpp ****     config.periph        = UartHandler::Config::Peripheral::USART_1;
 258              		.loc 6 46 26 view .LVU49
 259 0008 4FF4E134 		mov	r4, #115200
 260              	.LBB138:
 261              	.LBB135:
 262              	.LBB132:
 263              		.loc 7 79 24 view .LVU50
 264 000c 0391     		str	r1, [sp, #12]
  80:c:\dev\daisy_seed\libdaisy\src\per\uart.h ****             parity     = Parity::NONE;
 265              		.loc 7 80 13 is_stmt 1 view .LVU51
 266              		.loc 7 80 24 is_stmt 0 view .LVU52
 267 000e 0023     		movs	r3, #0
  81:c:\dev\daisy_seed\libdaisy\src\per\uart.h ****             wordlength = WordLength::BITS_8;
 268              		.loc 7 81 24 view .LVU53
 269 0010 0691     		str	r1, [sp, #24]
 270              	.LBE132:
 271              	.LBE135:
 272              	.LBE138:
 273              		.loc 6 52 26 view .LVU54
 274 0012 1188     		ldrh	r1, [r2]
  46:key_controlled_ocillators.cpp ****     config.periph        = UartHandler::Config::Peripheral::USART_1;
 275              		.loc 6 46 26 view .LVU55
 276 0014 0794     		str	r4, [sp, #28]
  50:key_controlled_ocillators.cpp ****     config.wordlength    = UartHandler::Config::WordLength::BITS_8;
 277              		.loc 6 50 26 view .LVU56
 278 0016 0224     		movs	r4, #2
  53:key_controlled_ocillators.cpp ****     config.pin_config.tx = {DSY_GPIOB, 6};  // (USART_1 TX) Daisy pin 14    
 279              		.loc 6 53 26 view .LVU57
 280 0018 9288     		ldrh	r2, [r2, #4]
  52:key_controlled_ocillators.cpp ****     config.pin_config.tx = {DSY_GPIOB, 6};  // (USART_1 TX) Daisy pin 14    
 281              		.loc 6 52 26 view .LVU58
 282 001a ADF80610 		strh	r1, [sp, #6]	@ movhi
  54:key_controlled_ocillators.cpp **** 
  55:key_controlled_ocillators.cpp ****     p_uart->Init(config);
 283              		.loc 6 55 17 view .LVU59
 284 001e 01A9     		add	r1, sp, #4
ARM GAS  C:\Users\jpmaitre\AppData\Local\Temp\ccYI9wQo.s 			page 15


 285              	.LVL14:
 286              	.LBB139:
 287              	.LBB136:
 288              	.LBB133:
  80:c:\dev\daisy_seed\libdaisy\src\per\uart.h ****             wordlength = WordLength::BITS_8;
 289              		.loc 7 80 24 view .LVU60
 290 0020 0493     		str	r3, [sp, #16]
 291              		.loc 7 81 13 is_stmt 1 view .LVU61
  82:c:\dev\daisy_seed\libdaisy\src\per\uart.h ****             baudrate   = 31250;
 292              		.loc 7 82 13 view .LVU62
 293              	.LVL15:
 294              		.loc 7 82 13 is_stmt 0 view .LVU63
 295              	.LBE133:
 296              	.LBE136:
 297              	.LBE139:
  46:key_controlled_ocillators.cpp ****     config.periph        = UartHandler::Config::Peripheral::USART_1;
 298              		.loc 6 46 5 is_stmt 1 view .LVU64
  47:key_controlled_ocillators.cpp ****     config.stopbits      = UartHandler::Config::StopBits::BITS_1;
 299              		.loc 6 47 5 view .LVU65
  47:key_controlled_ocillators.cpp ****     config.stopbits      = UartHandler::Config::StopBits::BITS_1;
 300              		.loc 6 47 26 is_stmt 0 view .LVU66
 301 0022 0293     		str	r3, [sp, #8]
  48:key_controlled_ocillators.cpp ****     config.parity        = UartHandler::Config::Parity::NONE;
 302              		.loc 6 48 5 is_stmt 1 view .LVU67
  49:key_controlled_ocillators.cpp ****     config.mode          = UartHandler::Config::Mode::TX_RX;
 303              		.loc 6 49 5 view .LVU68
  50:key_controlled_ocillators.cpp ****     config.wordlength    = UartHandler::Config::WordLength::BITS_8;
 304              		.loc 6 50 5 view .LVU69
  50:key_controlled_ocillators.cpp ****     config.wordlength    = UartHandler::Config::WordLength::BITS_8;
 305              		.loc 6 50 26 is_stmt 0 view .LVU70
 306 0024 0594     		str	r4, [sp, #20]
  51:key_controlled_ocillators.cpp ****     config.pin_config.rx = {DSY_GPIOB, 7};  // (USART_1 RX) Daisy pin 15
 307              		.loc 6 51 5 is_stmt 1 view .LVU71
  52:key_controlled_ocillators.cpp ****     config.pin_config.tx = {DSY_GPIOB, 6};  // (USART_1 TX) Daisy pin 14    
 308              		.loc 6 52 5 view .LVU72
  53:key_controlled_ocillators.cpp **** 
 309              		.loc 6 53 5 view .LVU73
  53:key_controlled_ocillators.cpp **** 
 310              		.loc 6 53 26 is_stmt 0 view .LVU74
 311 0026 ADF80420 		strh	r2, [sp, #4]	@ movhi
 312              		.loc 6 55 5 is_stmt 1 view .LVU75
 313              		.loc 6 55 17 is_stmt 0 view .LVU76
 314 002a FFF7FEFF 		bl	_ZN5daisy11UartHandler4InitERKNS0_6ConfigE
 315              	.LVL16:
  56:key_controlled_ocillators.cpp **** }
 316              		.loc 6 56 1 view .LVU77
 317 002e 08B0     		add	sp, sp, #32
 318              		.cfi_def_cfa_offset 8
 319              		@ sp needed
 320 0030 10BD     		pop	{r4, pc}
 321              	.L23:
 322 0032 00BF     		.align	2
 323              	.L22:
 324 0034 00000000 		.word	.LANCHOR1
 325              		.cfi_endproc
 326              	.LFE4682:
 328              		.section	.text._Z10flush_uartPN5daisy11UartHandlerE,"ax",%progbits
ARM GAS  C:\Users\jpmaitre\AppData\Local\Temp\ccYI9wQo.s 			page 16


 329              		.align	1
 330              		.p2align 2,,3
 331              		.global	_Z10flush_uartPN5daisy11UartHandlerE
 332              		.syntax unified
 333              		.thumb
 334              		.thumb_func
 335              		.fpu fpv5-d16
 337              	_Z10flush_uartPN5daisy11UartHandlerE:
 338              	.LVL17:
 339              	.LFB4683:
  57:key_controlled_ocillators.cpp **** 
  58:key_controlled_ocillators.cpp **** /* Flush UART */
  59:key_controlled_ocillators.cpp **** void flush_uart(UartHandler* p_uart)
  60:key_controlled_ocillators.cpp **** {
 340              		.loc 6 60 1 is_stmt 1 view -0
 341              		.cfi_startproc
 342              		@ args = 0, pretend = 0, frame = 8
 343              		@ frame_needed = 0, uses_anonymous_args = 0
  61:key_controlled_ocillators.cpp ****     enum UartHandler::Result result = UartHandler::Result::OK;
 344              		.loc 6 61 5 view .LVU79
  62:key_controlled_ocillators.cpp ****     uint8_t char_rec = 0;
 345              		.loc 6 62 5 view .LVU80
  60:key_controlled_ocillators.cpp ****     enum UartHandler::Result result = UartHandler::Result::OK;
 346              		.loc 6 60 1 is_stmt 0 view .LVU81
 347 0000 10B5     		push	{r4, lr}
 348              		.cfi_def_cfa_offset 8
 349              		.cfi_offset 4, -8
 350              		.cfi_offset 14, -4
 351              		.loc 6 62 13 view .LVU82
 352 0002 0023     		movs	r3, #0
  60:key_controlled_ocillators.cpp ****     enum UartHandler::Result result = UartHandler::Result::OK;
 353              		.loc 6 60 1 view .LVU83
 354 0004 82B0     		sub	sp, sp, #8
 355              		.cfi_def_cfa_offset 16
  60:key_controlled_ocillators.cpp ****     enum UartHandler::Result result = UartHandler::Result::OK;
 356              		.loc 6 60 1 view .LVU84
 357 0006 0446     		mov	r4, r0
 358              		.loc 6 62 13 view .LVU85
 359 0008 8DF80730 		strb	r3, [sp, #7]
  63:key_controlled_ocillators.cpp ****     
  64:key_controlled_ocillators.cpp ****     while(result == UartHandler::Result::OK)
 360              		.loc 6 64 5 is_stmt 1 view .LVU86
 361              		.loc 6 64 18 view .LVU87
 362              	.LVL18:
 363              	.L25:
  65:key_controlled_ocillators.cpp ****     {
  66:key_controlled_ocillators.cpp ****         result = p_uart->BlockingReceive(&char_rec, 1, 10);
 364              		.loc 6 66 9 view .LVU88
 365              		.loc 6 66 41 is_stmt 0 view .LVU89
 366 000c 0A23     		movs	r3, #10
 367 000e 0122     		movs	r2, #1
 368 0010 0DF10701 		add	r1, sp, #7
 369 0014 2046     		mov	r0, r4
 370 0016 FFF7FEFF 		bl	_ZN5daisy11UartHandler15BlockingReceiveEPhtm
 371              	.LVL19:
  64:key_controlled_ocillators.cpp ****     {
 372              		.loc 6 64 5 is_stmt 1 view .LVU90
ARM GAS  C:\Users\jpmaitre\AppData\Local\Temp\ccYI9wQo.s 			page 17


  64:key_controlled_ocillators.cpp ****     {
 373              		.loc 6 64 18 view .LVU91
 374 001a 0028     		cmp	r0, #0
 375 001c F6D0     		beq	.L25
  67:key_controlled_ocillators.cpp ****     }
  68:key_controlled_ocillators.cpp **** }
 376              		.loc 6 68 1 is_stmt 0 view .LVU92
 377 001e 02B0     		add	sp, sp, #8
 378              		.cfi_def_cfa_offset 8
 379              		@ sp needed
 380 0020 10BD     		pop	{r4, pc}
 381              		.loc 6 68 1 view .LVU93
 382              		.cfi_endproc
 383              	.LFE4683:
 385 0022 00BF     		.section	.text._Z19receive_msg_on_uartPN5daisy11UartHandlerEPc,"ax",%progbits
 386              		.align	1
 387              		.p2align 2,,3
 388              		.global	_Z19receive_msg_on_uartPN5daisy11UartHandlerEPc
 389              		.syntax unified
 390              		.thumb
 391              		.thumb_func
 392              		.fpu fpv5-d16
 394              	_Z19receive_msg_on_uartPN5daisy11UartHandlerEPc:
 395              	.LVL20:
 396              	.LFB4684:
  69:key_controlled_ocillators.cpp **** 
  70:key_controlled_ocillators.cpp **** /* Wait for a message on UART */
  71:key_controlled_ocillators.cpp **** int receive_msg_on_uart(UartHandler* p_uart, char msg_rec[MAX_MESSAGE_SIZE])
  72:key_controlled_ocillators.cpp **** {
 397              		.loc 6 72 1 is_stmt 1 view -0
 398              		.cfi_startproc
 399              		@ args = 0, pretend = 0, frame = 8
 400              		@ frame_needed = 0, uses_anonymous_args = 0
  73:key_controlled_ocillators.cpp ****     enum UartHandler::Result uart_result;
 401              		.loc 6 73 5 view .LVU95
  74:key_controlled_ocillators.cpp ****     uint8_t char_rec = 0;
 402              		.loc 6 74 5 view .LVU96
  72:key_controlled_ocillators.cpp ****     enum UartHandler::Result uart_result;
 403              		.loc 6 72 1 is_stmt 0 view .LVU97
 404 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 405              		.cfi_def_cfa_offset 20
 406              		.cfi_offset 4, -20
 407              		.cfi_offset 5, -16
 408              		.cfi_offset 6, -12
 409              		.cfi_offset 7, -8
 410              		.cfi_offset 14, -4
 411              		.loc 6 74 13 view .LVU98
 412 0002 0023     		movs	r3, #0
  72:key_controlled_ocillators.cpp ****     enum UartHandler::Result uart_result;
 413              		.loc 6 72 1 view .LVU99
 414 0004 83B0     		sub	sp, sp, #12
 415              		.cfi_def_cfa_offset 32
  72:key_controlled_ocillators.cpp ****     enum UartHandler::Result uart_result;
 416              		.loc 6 72 1 view .LVU100
 417 0006 0546     		mov	r5, r0
 418 0008 0E46     		mov	r6, r1
 419              		.loc 6 74 13 view .LVU101
ARM GAS  C:\Users\jpmaitre\AppData\Local\Temp\ccYI9wQo.s 			page 18


 420 000a 8DF80730 		strb	r3, [sp, #7]
  75:key_controlled_ocillators.cpp ****     uint8_t char_idx = 0;
 421              		.loc 6 75 5 is_stmt 1 view .LVU102
 422              	.LVL21:
  76:key_controlled_ocillators.cpp ****     int result = 0;
 423              		.loc 6 76 5 view .LVU103
 424              	.L41:
  77:key_controlled_ocillators.cpp **** 
  78:key_controlled_ocillators.cpp ****     // Wait for the start of the message (character 'S').
  79:key_controlled_ocillators.cpp ****     while(1) 
 425              		.loc 6 79 5 view .LVU104
  80:key_controlled_ocillators.cpp ****     {
  81:key_controlled_ocillators.cpp ****         uart_result = p_uart->BlockingReceive(&char_rec, 1, 0);
 426              		.loc 6 81 9 view .LVU105
 427              		.loc 6 81 46 is_stmt 0 view .LVU106
 428 000e 0023     		movs	r3, #0
 429 0010 0122     		movs	r2, #1
 430 0012 0DF10701 		add	r1, sp, #7
 431 0016 2846     		mov	r0, r5
 432 0018 FFF7FEFF 		bl	_ZN5daisy11UartHandler15BlockingReceiveEPhtm
 433              	.LVL22:
  82:key_controlled_ocillators.cpp ****         if ((uart_result == UartHandler::Result::OK) && (char_rec == 'S'))
 434              		.loc 6 82 9 is_stmt 1 view .LVU107
 435 001c 0028     		cmp	r0, #0
 436 001e F6D1     		bne	.L41
 437              		.loc 6 82 67 is_stmt 0 discriminator 1 view .LVU108
 438 0020 9DF807C0 		ldrb	ip, [sp, #7]	@ zero_extendqisi2
 439              		.loc 6 82 54 discriminator 1 view .LVU109
 440 0024 BCF1530F 		cmp	ip, #83
 441 0028 F1D1     		bne	.L41
  75:key_controlled_ocillators.cpp ****     int result = 0;
 442              		.loc 6 75 13 view .LVU110
 443 002a 0446     		mov	r4, r0
 444              	.LVL23:
 445              	.L31:
  83:key_controlled_ocillators.cpp ****         {
  84:key_controlled_ocillators.cpp ****             break;
  85:key_controlled_ocillators.cpp ****         }
  86:key_controlled_ocillators.cpp ****     }
  87:key_controlled_ocillators.cpp **** 
  88:key_controlled_ocillators.cpp ****     // Receive characters until the end of message (character 0x0a).
  89:key_controlled_ocillators.cpp ****     while( (char_rec != 0x0a) || (char_idx == MAX_MESSAGE_SIZE))
 446              		.loc 6 89 31 view .LVU111
 447 002c B4F11407 		subs	r7, r4, #20
 448 0030 18BF     		it	ne
 449 0032 0127     		movne	r7, #1
 450              	.L35:
 451              		.loc 6 89 5 is_stmt 1 view .LVU112
 452              		.loc 6 89 31 view .LVU113
  90:key_controlled_ocillators.cpp ****     {
  91:key_controlled_ocillators.cpp ****         uart_result = p_uart->BlockingReceive(&char_rec, 1, 0);
 453              		.loc 6 91 9 view .LVU114
  89:key_controlled_ocillators.cpp ****     {
 454              		.loc 6 89 31 is_stmt 0 view .LVU115
 455 0034 BCF10A0F 		cmp	ip, #10
 456              		.loc 6 91 46 view .LVU116
 457 0038 4FF00003 		mov	r3, #0
ARM GAS  C:\Users\jpmaitre\AppData\Local\Temp\ccYI9wQo.s 			page 19


 458 003c 4FF00102 		mov	r2, #1
 459 0040 0DF10701 		add	r1, sp, #7
 460 0044 2846     		mov	r0, r5
 461              	.LVL24:
  89:key_controlled_ocillators.cpp ****     {
 462              		.loc 6 89 31 view .LVU117
 463 0046 00D1     		bne	.L38
 464              	.LVL25:
  89:key_controlled_ocillators.cpp ****     {
 465              		.loc 6 89 31 view .LVU118
 466 0048 67B9     		cbnz	r7, .L32
 467              	.L38:
 468              		.loc 6 91 46 view .LVU119
 469 004a FFF7FEFF 		bl	_ZN5daisy11UartHandler15BlockingReceiveEPhtm
 470              	.LVL26:
  92:key_controlled_ocillators.cpp ****         if (uart_result == UartHandler::Result::OK)
 471              		.loc 6 92 9 is_stmt 1 view .LVU120
  93:key_controlled_ocillators.cpp ****         {
  94:key_controlled_ocillators.cpp ****             msg_rec[char_idx] = char_rec;
 472              		.loc 6 94 31 is_stmt 0 view .LVU121
 473 004e 9DF807C0 		ldrb	ip, [sp, #7]	@ zero_extendqisi2
  92:key_controlled_ocillators.cpp ****         if (uart_result == UartHandler::Result::OK)
 474              		.loc 6 92 9 view .LVU122
 475 0052 0028     		cmp	r0, #0
 476 0054 EED1     		bne	.L35
 477              		.loc 6 94 13 is_stmt 1 view .LVU123
  95:key_controlled_ocillators.cpp ****             if (char_idx < MAX_MESSAGE_SIZE)
 478              		.loc 6 95 13 is_stmt 0 view .LVU124
 479 0056 132C     		cmp	r4, #19
  94:key_controlled_ocillators.cpp ****             if (char_idx < MAX_MESSAGE_SIZE)
 480              		.loc 6 94 31 view .LVU125
 481 0058 06F804C0 		strb	ip, [r6, r4]
 482              		.loc 6 95 13 is_stmt 1 view .LVU126
 483 005c E6D8     		bhi	.L31
  96:key_controlled_ocillators.cpp ****             {
  97:key_controlled_ocillators.cpp ****                 char_idx++;
 484              		.loc 6 97 17 view .LVU127
 485              		.loc 6 97 25 is_stmt 0 view .LVU128
 486 005e 0134     		adds	r4, r4, #1
 487 0060 E4B2     		uxtb	r4, r4
 488              	.LVL27:
 489              		.loc 6 97 25 view .LVU129
 490 0062 E3E7     		b	.L31
 491              	.LVL28:
 492              	.L32:
  98:key_controlled_ocillators.cpp ****             }
  99:key_controlled_ocillators.cpp ****         } 
 100:key_controlled_ocillators.cpp ****     }
 101:key_controlled_ocillators.cpp ****     
 102:key_controlled_ocillators.cpp ****     if (char_idx == MAX_MESSAGE_SIZE)
 493              		.loc 6 102 5 is_stmt 1 view .LVU130
 103:key_controlled_ocillators.cpp ****     {
 104:key_controlled_ocillators.cpp ****         hw.PrintLine("Error: Message too long received");
 105:key_controlled_ocillators.cpp ****         result = -1;
 106:key_controlled_ocillators.cpp ****     }
 107:key_controlled_ocillators.cpp ****     
 108:key_controlled_ocillators.cpp ****     msg_rec[char_idx] = 0; // Null terminated string
ARM GAS  C:\Users\jpmaitre\AppData\Local\Temp\ccYI9wQo.s 			page 20


 494              		.loc 6 108 5 view .LVU131
 495              		.loc 6 108 23 is_stmt 0 view .LVU132
 496 0064 0020     		movs	r0, #0
 497              	.LVL29:
 498              		.loc 6 108 23 view .LVU133
 499 0066 3055     		strb	r0, [r6, r4]
 109:key_controlled_ocillators.cpp **** 
 110:key_controlled_ocillators.cpp ****     return result;
 500              		.loc 6 110 5 is_stmt 1 view .LVU134
 111:key_controlled_ocillators.cpp **** }
 501              		.loc 6 111 1 is_stmt 0 view .LVU135
 502 0068 03B0     		add	sp, sp, #12
 503              		.cfi_def_cfa_offset 20
 504              		@ sp needed
 505 006a F0BD     		pop	{r4, r5, r6, r7, pc}
 506              		.loc 6 111 1 view .LVU136
 507              		.cfi_endproc
 508              	.LFE4684:
 510              		.section	.rodata._Z20analyze_msg_receivedPcPtP10e_msg_typePm.str1.4,"aMS",%progbits,1
 511              		.align	2
 512              	.LC2:
 513 0000 256400   		.ascii	"%d\000"
 514 0003 00       		.align	2
 515              	.LC3:
 516 0004 4572726F 		.ascii	"Error: Problem to convert key_index received\000"
 516      723A2050 
 516      726F626C 
 516      656D2074 
 516      6F20636F 
 517 0031 000000   		.align	2
 518              	.LC4:
 519 0034 256C6400 		.ascii	"%ld\000"
 520              		.align	2
 521              	.LC5:
 522 0038 4572726F 		.ascii	"Error: Problem to convert time received\000"
 522      723A2050 
 522      726F626C 
 522      656D2074 
 522      6F20636F 
 523              		.align	2
 524              	.LC6:
 525 0060 4572726F 		.ascii	"Error: Unknown message received\000"
 525      723A2055 
 525      6E6B6E6F 
 525      776E206D 
 525      65737361 
 526              		.section	.text._Z20analyze_msg_receivedPcPtP10e_msg_typePm,"ax",%progbits
 527              		.align	1
 528              		.p2align 2,,3
 529              		.global	_Z20analyze_msg_receivedPcPtP10e_msg_typePm
 530              		.syntax unified
 531              		.thumb
 532              		.thumb_func
 533              		.fpu fpv5-d16
 535              	_Z20analyze_msg_receivedPcPtP10e_msg_typePm:
 536              	.LVL30:
 537              	.LFB4685:
ARM GAS  C:\Users\jpmaitre\AppData\Local\Temp\ccYI9wQo.s 			page 21


 112:key_controlled_ocillators.cpp **** 
 113:key_controlled_ocillators.cpp **** int analyze_msg_received(char msg_rec[MAX_MESSAGE_SIZE], uint16_t *p_key_index, e_msg_type *p_msg_t
 114:key_controlled_ocillators.cpp **** {
 538              		.loc 6 114 1 is_stmt 1 view -0
 539              		.cfi_startproc
 540              		@ args = 0, pretend = 0, frame = 32
 541              		@ frame_needed = 0, uses_anonymous_args = 0
 115:key_controlled_ocillators.cpp ****     int result = 0;
 542              		.loc 6 115 5 view .LVU138
 116:key_controlled_ocillators.cpp ****     int result_2 = 0;
 543              		.loc 6 116 5 view .LVU139
 117:key_controlled_ocillators.cpp ****     uint8_t msg_len = strlen(msg_rec) - 2; // Remove the 2 end of message characters (0x0d and 0x0a
 544              		.loc 6 117 5 view .LVU140
 114:key_controlled_ocillators.cpp ****     int result = 0;
 545              		.loc 6 114 1 is_stmt 0 view .LVU141
 546 0000 2DE9F043 		push	{r4, r5, r6, r7, r8, r9, lr}
 547              		.cfi_def_cfa_offset 28
 548              		.cfi_offset 4, -28
 549              		.cfi_offset 5, -24
 550              		.cfi_offset 6, -20
 551              		.cfi_offset 7, -16
 552              		.cfi_offset 8, -12
 553              		.cfi_offset 9, -8
 554              		.cfi_offset 14, -4
 555 0004 0746     		mov	r7, r0
 556 0006 1E46     		mov	r6, r3
 118:key_controlled_ocillators.cpp ****     char temp_str[MAX_MESSAGE_SIZE];
 119:key_controlled_ocillators.cpp ****     int temp_int;
 120:key_controlled_ocillators.cpp ****     uint32_t time;
 121:key_controlled_ocillators.cpp ****     uint16_t key_index;
 122:key_controlled_ocillators.cpp ****     
 123:key_controlled_ocillators.cpp ****     *p_time = 0;
 557              		.loc 6 123 13 view .LVU142
 558 0008 0025     		movs	r5, #0
 114:key_controlled_ocillators.cpp ****     int result = 0;
 559              		.loc 6 114 1 view .LVU143
 560 000a 89B0     		sub	sp, sp, #36
 561              		.cfi_def_cfa_offset 64
 114:key_controlled_ocillators.cpp ****     int result = 0;
 562              		.loc 6 114 1 view .LVU144
 563 000c 8846     		mov	r8, r1
 564 000e 9146     		mov	r9, r2
 117:key_controlled_ocillators.cpp ****     char temp_str[MAX_MESSAGE_SIZE];
 565              		.loc 6 117 29 view .LVU145
 566 0010 FFF7FEFF 		bl	strlen
 567              	.LVL31:
 118:key_controlled_ocillators.cpp ****     char temp_str[MAX_MESSAGE_SIZE];
 568              		.loc 6 118 5 is_stmt 1 view .LVU146
 119:key_controlled_ocillators.cpp ****     uint32_t time;
 569              		.loc 6 119 5 view .LVU147
 120:key_controlled_ocillators.cpp ****     uint16_t key_index;
 570              		.loc 6 120 5 view .LVU148
 121:key_controlled_ocillators.cpp ****     
 571              		.loc 6 121 5 view .LVU149
 572              		.loc 6 123 5 view .LVU150
 573              		.loc 6 123 13 is_stmt 0 view .LVU151
 574 0014 3560     		str	r5, [r6]
ARM GAS  C:\Users\jpmaitre\AppData\Local\Temp\ccYI9wQo.s 			page 22


 124:key_controlled_ocillators.cpp **** 
 125:key_controlled_ocillators.cpp ****     if (msg_rec[0] == 'D')
 575              		.loc 6 125 5 is_stmt 1 view .LVU152
 576              		.loc 6 125 18 is_stmt 0 view .LVU153
 577 0016 97F800C0 		ldrb	ip, [r7]	@ zero_extendqisi2
 578              		.loc 6 125 5 view .LVU154
 579 001a BCF1440F 		cmp	ip, #68
 580 001e 20D0     		beq	.L57
 126:key_controlled_ocillators.cpp ****     {
 127:key_controlled_ocillators.cpp ****         // Message type
 128:key_controlled_ocillators.cpp ****         *p_msg_type = KEY_DOWN_MSG;
 129:key_controlled_ocillators.cpp **** 
 130:key_controlled_ocillators.cpp ****         // key_index
 131:key_controlled_ocillators.cpp ****         strncpy(temp_str, &msg_rec[2], 2);
 132:key_controlled_ocillators.cpp ****         temp_str[2] = 0;
 133:key_controlled_ocillators.cpp ****         result_2 = sscanf(temp_str, "%d", &temp_int);
 134:key_controlled_ocillators.cpp ****         key_index = temp_int;
 135:key_controlled_ocillators.cpp ****         if (result_2 != 1)
 136:key_controlled_ocillators.cpp ****         {
 137:key_controlled_ocillators.cpp ****             hw.PrintLine("Error: Problem to convert key_index received");
 138:key_controlled_ocillators.cpp ****             result = -1;
 139:key_controlled_ocillators.cpp ****         }
 140:key_controlled_ocillators.cpp ****         *p_key_index = key_index;
 141:key_controlled_ocillators.cpp ****         
 142:key_controlled_ocillators.cpp ****         // time
 143:key_controlled_ocillators.cpp ****         strncpy(temp_str, &msg_rec[4], msg_len - 4);
 144:key_controlled_ocillators.cpp ****         temp_str[msg_len] = 0;
 145:key_controlled_ocillators.cpp ****         result_2 = sscanf(temp_str, "%ld", &time);
 146:key_controlled_ocillators.cpp ****         if (result_2 != 1)
 147:key_controlled_ocillators.cpp ****         {
 148:key_controlled_ocillators.cpp ****             hw.PrintLine("Error: Problem to convert time received");
 149:key_controlled_ocillators.cpp ****             result = -1;
 150:key_controlled_ocillators.cpp ****         }
 151:key_controlled_ocillators.cpp ****         *p_time = time;
 152:key_controlled_ocillators.cpp ****     }
 153:key_controlled_ocillators.cpp ****     else if (msg_rec[0] == 'U')
 581              		.loc 6 153 10 is_stmt 1 view .LVU155
 582 0020 BCF1550F 		cmp	ip, #85
 583 0024 58D1     		bne	.L49
 154:key_controlled_ocillators.cpp ****     {
 155:key_controlled_ocillators.cpp ****         // Message type
 156:key_controlled_ocillators.cpp ****         *p_msg_type = KEY_UP_MSG;
 584              		.loc 6 156 9 view .LVU156
 157:key_controlled_ocillators.cpp **** 
 158:key_controlled_ocillators.cpp ****         // key_index
 159:key_controlled_ocillators.cpp ****         strncpy(temp_str, &msg_rec[2], 2);
 585              		.loc 6 159 16 is_stmt 0 view .LVU157
 586 0026 B91C     		adds	r1, r7, #2
 587 0028 0222     		movs	r2, #2
 588 002a 03A8     		add	r0, sp, #12
 589              	.LVL32:
 156:key_controlled_ocillators.cpp **** 
 590              		.loc 6 156 21 view .LVU158
 591 002c 89F80050 		strb	r5, [r9]
 592              		.loc 6 159 9 is_stmt 1 view .LVU159
 593              		.loc 6 159 16 is_stmt 0 view .LVU160
 594 0030 FFF7FEFF 		bl	strncpy
ARM GAS  C:\Users\jpmaitre\AppData\Local\Temp\ccYI9wQo.s 			page 23


 595              	.LVL33:
 160:key_controlled_ocillators.cpp ****         temp_str[2] = 0;
 596              		.loc 6 160 9 is_stmt 1 view .LVU161
 161:key_controlled_ocillators.cpp ****         result_2 = sscanf(temp_str, "%d", &temp_int);
 597              		.loc 6 161 26 is_stmt 0 view .LVU162
 598 0034 01AA     		add	r2, sp, #4
 599 0036 2B49     		ldr	r1, .L61
 600 0038 03A8     		add	r0, sp, #12
 160:key_controlled_ocillators.cpp ****         temp_str[2] = 0;
 601              		.loc 6 160 21 view .LVU163
 602 003a 8DF80E50 		strb	r5, [sp, #14]
 603              		.loc 6 161 9 is_stmt 1 view .LVU164
 604              		.loc 6 161 26 is_stmt 0 view .LVU165
 605 003e FFF7FEFF 		bl	sscanf
 606              	.LVL34:
 162:key_controlled_ocillators.cpp ****         key_index = temp_int;
 607              		.loc 6 162 9 is_stmt 1 view .LVU166
 163:key_controlled_ocillators.cpp ****         if (result_2 != 1)
 608              		.loc 6 163 9 is_stmt 0 view .LVU167
 609 0042 0128     		cmp	r0, #1
 162:key_controlled_ocillators.cpp ****         key_index = temp_int;
 610              		.loc 6 162 19 view .LVU168
 611 0044 BDF80440 		ldrh	r4, [sp, #4]
 612              	.LVL35:
 613              		.loc 6 163 9 is_stmt 1 view .LVU169
 614 0048 05D1     		bne	.L58
 615              	.LVL36:
 616              	.L50:
 164:key_controlled_ocillators.cpp ****         {
 165:key_controlled_ocillators.cpp ****             hw.PrintLine("Error: Problem to convert key_index received");
 166:key_controlled_ocillators.cpp ****             result = -1;
 167:key_controlled_ocillators.cpp ****         }
 168:key_controlled_ocillators.cpp ****         *p_key_index = key_index;
 617              		.loc 6 168 9 view .LVU170
 618              		.loc 6 168 22 is_stmt 0 view .LVU171
 619 004a A8F80040 		strh	r4, [r8]	@ movhi
 620              	.LVL37:
 621              	.L44:
 169:key_controlled_ocillators.cpp ****     }
 170:key_controlled_ocillators.cpp ****     else
 171:key_controlled_ocillators.cpp ****     {
 172:key_controlled_ocillators.cpp ****         hw.PrintLine("Error: Unknown message received");
 173:key_controlled_ocillators.cpp ****         result = -1;
 174:key_controlled_ocillators.cpp ****     }
 175:key_controlled_ocillators.cpp **** 
 176:key_controlled_ocillators.cpp ****     return result;
 177:key_controlled_ocillators.cpp **** }
 622              		.loc 6 177 1 view .LVU172
 623 004e 2846     		mov	r0, r5
 624 0050 09B0     		add	sp, sp, #36
 625              		.cfi_remember_state
 626              		.cfi_def_cfa_offset 28
 627              		@ sp needed
 628 0052 BDE8F083 		pop	{r4, r5, r6, r7, r8, r9, pc}
 629              	.LVL38:
 630              	.L58:
 631              		.cfi_restore_state
ARM GAS  C:\Users\jpmaitre\AppData\Local\Temp\ccYI9wQo.s 			page 24


 165:key_controlled_ocillators.cpp ****             result = -1;
 632              		.loc 6 165 13 is_stmt 1 view .LVU173
 633              	.LBB140:
 634              	.LBI140:
  23:c:\dev\daisy_seed\libdaisy\src\daisy_seed.h **** 
  24:c:\dev\daisy_seed\libdaisy\src\daisy_seed.h ****     /** This function used to provide a pre-initialization configuraiton 
  25:c:\dev\daisy_seed\libdaisy\src\daisy_seed.h ****      *  it has since been deprecated, and does nothing.
  26:c:\dev\daisy_seed\libdaisy\src\daisy_seed.h ****      */
  27:c:\dev\daisy_seed\libdaisy\src\daisy_seed.h ****     void Configure();
  28:c:\dev\daisy_seed\libdaisy\src\daisy_seed.h **** 
  29:c:\dev\daisy_seed\libdaisy\src\daisy_seed.h ****     /** 
  30:c:\dev\daisy_seed\libdaisy\src\daisy_seed.h ****     Initializes the Daisy Seed and the following peripherals:
  31:c:\dev\daisy_seed\libdaisy\src\daisy_seed.h ****     SDRAM, QSPI, 24-bit 48kHz Audio via AK4556, Internal USB,
  32:c:\dev\daisy_seed\libdaisy\src\daisy_seed.h ****     as well as the built-in LED and Testpoint.
  33:c:\dev\daisy_seed\libdaisy\src\daisy_seed.h **** 
  34:c:\dev\daisy_seed\libdaisy\src\daisy_seed.h ****     ADCs, DACs, and other special peripherals (such as I2C, SPI, etc.)
  35:c:\dev\daisy_seed\libdaisy\src\daisy_seed.h ****     can be initialized using their specific initializers within libdaisy
  36:c:\dev\daisy_seed\libdaisy\src\daisy_seed.h ****     for a specific application.
  37:c:\dev\daisy_seed\libdaisy\src\daisy_seed.h ****     */
  38:c:\dev\daisy_seed\libdaisy\src\daisy_seed.h ****     void Init(bool boost = false);
  39:c:\dev\daisy_seed\libdaisy\src\daisy_seed.h **** 
  40:c:\dev\daisy_seed\libdaisy\src\daisy_seed.h ****     /** 
  41:c:\dev\daisy_seed\libdaisy\src\daisy_seed.h ****     Deinitializes all peripherals automatically handled by `Init`.
  42:c:\dev\daisy_seed\libdaisy\src\daisy_seed.h ****     */
  43:c:\dev\daisy_seed\libdaisy\src\daisy_seed.h ****     void DeInit();
  44:c:\dev\daisy_seed\libdaisy\src\daisy_seed.h **** 
  45:c:\dev\daisy_seed\libdaisy\src\daisy_seed.h ****     /** 
  46:c:\dev\daisy_seed\libdaisy\src\daisy_seed.h ****     Wait some ms before going on.
  47:c:\dev\daisy_seed\libdaisy\src\daisy_seed.h ****     \param del Delay time in ms.
  48:c:\dev\daisy_seed\libdaisy\src\daisy_seed.h ****     */
  49:c:\dev\daisy_seed\libdaisy\src\daisy_seed.h ****     void DelayMs(size_t del);
  50:c:\dev\daisy_seed\libdaisy\src\daisy_seed.h **** 
  51:c:\dev\daisy_seed\libdaisy\src\daisy_seed.h ****     /** 
  52:c:\dev\daisy_seed\libdaisy\src\daisy_seed.h ****     Returns the gpio_pin corresponding to the index 0-31.
  53:c:\dev\daisy_seed\libdaisy\src\daisy_seed.h ****     For the given GPIO on the Daisy Seed (labeled 1-32 in docs).
  54:c:\dev\daisy_seed\libdaisy\src\daisy_seed.h ****     */
  55:c:\dev\daisy_seed\libdaisy\src\daisy_seed.h ****     static dsy_gpio_pin GetPin(uint8_t pin_idx);
  56:c:\dev\daisy_seed\libdaisy\src\daisy_seed.h **** 
  57:c:\dev\daisy_seed\libdaisy\src\daisy_seed.h ****     /** Begins the audio for the seeds builtin audio.
  58:c:\dev\daisy_seed\libdaisy\src\daisy_seed.h ****     the specified callback will get called whenever
  59:c:\dev\daisy_seed\libdaisy\src\daisy_seed.h ****     new data is ready to be prepared.
  60:c:\dev\daisy_seed\libdaisy\src\daisy_seed.h ****     */
  61:c:\dev\daisy_seed\libdaisy\src\daisy_seed.h ****     void StartAudio(AudioHandle::InterleavingAudioCallback cb);
  62:c:\dev\daisy_seed\libdaisy\src\daisy_seed.h **** 
  63:c:\dev\daisy_seed\libdaisy\src\daisy_seed.h ****     /** Begins the audio for the seeds builtin audio.
  64:c:\dev\daisy_seed\libdaisy\src\daisy_seed.h ****     the specified callback will get called whenever
  65:c:\dev\daisy_seed\libdaisy\src\daisy_seed.h ****     new data is ready to be prepared.
  66:c:\dev\daisy_seed\libdaisy\src\daisy_seed.h ****     This will use the newer non-interleaved callback.
  67:c:\dev\daisy_seed\libdaisy\src\daisy_seed.h ****     */
  68:c:\dev\daisy_seed\libdaisy\src\daisy_seed.h ****     void StartAudio(AudioHandle::AudioCallback cb);
  69:c:\dev\daisy_seed\libdaisy\src\daisy_seed.h **** 
  70:c:\dev\daisy_seed\libdaisy\src\daisy_seed.h ****     /** Changes to a new interleaved callback
  71:c:\dev\daisy_seed\libdaisy\src\daisy_seed.h ****      */
  72:c:\dev\daisy_seed\libdaisy\src\daisy_seed.h ****     void ChangeAudioCallback(AudioHandle::InterleavingAudioCallback cb);
  73:c:\dev\daisy_seed\libdaisy\src\daisy_seed.h **** 
  74:c:\dev\daisy_seed\libdaisy\src\daisy_seed.h ****     /** Changes to a new multichannel callback
  75:c:\dev\daisy_seed\libdaisy\src\daisy_seed.h ****      */
ARM GAS  C:\Users\jpmaitre\AppData\Local\Temp\ccYI9wQo.s 			page 25


  76:c:\dev\daisy_seed\libdaisy\src\daisy_seed.h ****     void ChangeAudioCallback(AudioHandle::AudioCallback cb);
  77:c:\dev\daisy_seed\libdaisy\src\daisy_seed.h **** 
  78:c:\dev\daisy_seed\libdaisy\src\daisy_seed.h ****     /** Stops the audio if it is running. */
  79:c:\dev\daisy_seed\libdaisy\src\daisy_seed.h ****     void StopAudio();
  80:c:\dev\daisy_seed\libdaisy\src\daisy_seed.h **** 
  81:c:\dev\daisy_seed\libdaisy\src\daisy_seed.h ****     /** Updates the Audio Sample Rate, and reinitializes.
  82:c:\dev\daisy_seed\libdaisy\src\daisy_seed.h ****      ** Audio must be stopped for this to work.
  83:c:\dev\daisy_seed\libdaisy\src\daisy_seed.h ****      */
  84:c:\dev\daisy_seed\libdaisy\src\daisy_seed.h ****     void SetAudioSampleRate(SaiHandle::Config::SampleRate samplerate);
  85:c:\dev\daisy_seed\libdaisy\src\daisy_seed.h **** 
  86:c:\dev\daisy_seed\libdaisy\src\daisy_seed.h ****     /** Returns the audio sample rate in Hz as a floating point number.
  87:c:\dev\daisy_seed\libdaisy\src\daisy_seed.h ****      */
  88:c:\dev\daisy_seed\libdaisy\src\daisy_seed.h ****     float AudioSampleRate();
  89:c:\dev\daisy_seed\libdaisy\src\daisy_seed.h **** 
  90:c:\dev\daisy_seed\libdaisy\src\daisy_seed.h ****     /** Sets the number of samples processed per channel by the audio callback.
  91:c:\dev\daisy_seed\libdaisy\src\daisy_seed.h ****      */
  92:c:\dev\daisy_seed\libdaisy\src\daisy_seed.h ****     void SetAudioBlockSize(size_t blocksize);
  93:c:\dev\daisy_seed\libdaisy\src\daisy_seed.h **** 
  94:c:\dev\daisy_seed\libdaisy\src\daisy_seed.h ****     /** Returns the number of samples per channel in a block of audio. */
  95:c:\dev\daisy_seed\libdaisy\src\daisy_seed.h ****     size_t AudioBlockSize();
  96:c:\dev\daisy_seed\libdaisy\src\daisy_seed.h **** 
  97:c:\dev\daisy_seed\libdaisy\src\daisy_seed.h ****     /** Returns the rate in Hz that the Audio callback is called */
  98:c:\dev\daisy_seed\libdaisy\src\daisy_seed.h ****     float AudioCallbackRate() const;
  99:c:\dev\daisy_seed\libdaisy\src\daisy_seed.h **** 
 100:c:\dev\daisy_seed\libdaisy\src\daisy_seed.h ****     /** Returns the SAI Handle for the Daisy Seed 
 101:c:\dev\daisy_seed\libdaisy\src\daisy_seed.h ****      *  This can be useful when adding a secondary codec,
 102:c:\dev\daisy_seed\libdaisy\src\daisy_seed.h ****      *  the result of this function can be passed to the audio reinit 
 103:c:\dev\daisy_seed\libdaisy\src\daisy_seed.h ****      *  with an SAI2 configuration
 104:c:\dev\daisy_seed\libdaisy\src\daisy_seed.h ****      */
 105:c:\dev\daisy_seed\libdaisy\src\daisy_seed.h ****     const SaiHandle& AudioSaiHandle() const;
 106:c:\dev\daisy_seed\libdaisy\src\daisy_seed.h **** 
 107:c:\dev\daisy_seed\libdaisy\src\daisy_seed.h ****     /** Sets the state of the built in LED
 108:c:\dev\daisy_seed\libdaisy\src\daisy_seed.h ****      */
 109:c:\dev\daisy_seed\libdaisy\src\daisy_seed.h ****     void SetLed(bool state);
 110:c:\dev\daisy_seed\libdaisy\src\daisy_seed.h **** 
 111:c:\dev\daisy_seed\libdaisy\src\daisy_seed.h ****     /** Sets the state of the test point near pin 10
 112:c:\dev\daisy_seed\libdaisy\src\daisy_seed.h ****      */
 113:c:\dev\daisy_seed\libdaisy\src\daisy_seed.h ****     void SetTestPoint(bool state);
 114:c:\dev\daisy_seed\libdaisy\src\daisy_seed.h **** 
 115:c:\dev\daisy_seed\libdaisy\src\daisy_seed.h ****     /** Print formatted debug log message
 116:c:\dev\daisy_seed\libdaisy\src\daisy_seed.h ****      */
 117:c:\dev\daisy_seed\libdaisy\src\daisy_seed.h ****     template <typename... VA>
 118:c:\dev\daisy_seed\libdaisy\src\daisy_seed.h ****     static void Print(const char* format, VA... va)
 119:c:\dev\daisy_seed\libdaisy\src\daisy_seed.h ****     {
 120:c:\dev\daisy_seed\libdaisy\src\daisy_seed.h ****         Log::Print(format, va...);
 121:c:\dev\daisy_seed\libdaisy\src\daisy_seed.h ****     }
 122:c:\dev\daisy_seed\libdaisy\src\daisy_seed.h **** 
 123:c:\dev\daisy_seed\libdaisy\src\daisy_seed.h ****     /** Print formatted debug log message with automatic line termination
 124:c:\dev\daisy_seed\libdaisy\src\daisy_seed.h ****     */
 125:c:\dev\daisy_seed\libdaisy\src\daisy_seed.h ****     template <typename... VA>
 126:c:\dev\daisy_seed\libdaisy\src\daisy_seed.h ****     static void PrintLine(const char* format, VA... va)
 635              		.loc 1 126 17 view .LVU174
 636              	.LBB141:
 127:c:\dev\daisy_seed\libdaisy\src\daisy_seed.h ****     {
 128:c:\dev\daisy_seed\libdaisy\src\daisy_seed.h ****         Log::PrintLine(format, va...);
 637              		.loc 1 128 23 is_stmt 0 view .LVU175
 638 0056 2448     		ldr	r0, .L61+4
ARM GAS  C:\Users\jpmaitre\AppData\Local\Temp\ccYI9wQo.s 			page 26


 639              	.LVL39:
 640              		.loc 1 128 23 view .LVU176
 641              	.LBE141:
 642              	.LBE140:
 166:key_controlled_ocillators.cpp ****         }
 643              		.loc 6 166 20 view .LVU177
 644 0058 4FF0FF35 		mov	r5, #-1
 645              	.LBB143:
 646              	.LBB142:
 647              		.loc 1 128 23 view .LVU178
 648 005c FFF7FEFF 		bl	_ZN5daisy6LoggerILNS_17LoggerDestinationE1EE9PrintLineEPKcz
 649              	.LVL40:
 650              		.loc 1 128 23 view .LVU179
 651              	.LBE142:
 652              	.LBE143:
 166:key_controlled_ocillators.cpp ****         }
 653              		.loc 6 166 13 is_stmt 1 view .LVU180
 166:key_controlled_ocillators.cpp ****         }
 654              		.loc 6 166 13 is_stmt 0 view .LVU181
 655 0060 F3E7     		b	.L50
 656              	.LVL41:
 657              	.L57:
 128:key_controlled_ocillators.cpp **** 
 658              		.loc 6 128 9 is_stmt 1 view .LVU182
 128:key_controlled_ocillators.cpp **** 
 659              		.loc 6 128 21 is_stmt 0 view .LVU183
 660 0062 0123     		movs	r3, #1
 131:key_controlled_ocillators.cpp ****         temp_str[2] = 0;
 661              		.loc 6 131 16 view .LVU184
 662 0064 0222     		movs	r2, #2
 663 0066 0446     		mov	r4, r0
 664 0068 03A8     		add	r0, sp, #12
 665              	.LVL42:
 131:key_controlled_ocillators.cpp ****         temp_str[2] = 0;
 666              		.loc 6 131 16 view .LVU185
 667 006a B918     		adds	r1, r7, r2
 128:key_controlled_ocillators.cpp **** 
 668              		.loc 6 128 21 view .LVU186
 669 006c 89F80030 		strb	r3, [r9]
 131:key_controlled_ocillators.cpp ****         temp_str[2] = 0;
 670              		.loc 6 131 9 is_stmt 1 view .LVU187
 131:key_controlled_ocillators.cpp ****         temp_str[2] = 0;
 671              		.loc 6 131 16 is_stmt 0 view .LVU188
 672 0070 FFF7FEFF 		bl	strncpy
 673              	.LVL43:
 132:key_controlled_ocillators.cpp ****         result_2 = sscanf(temp_str, "%d", &temp_int);
 674              		.loc 6 132 9 is_stmt 1 view .LVU189
 133:key_controlled_ocillators.cpp ****         key_index = temp_int;
 675              		.loc 6 133 26 is_stmt 0 view .LVU190
 676 0074 01AA     		add	r2, sp, #4
 677 0076 1B49     		ldr	r1, .L61
 678 0078 03A8     		add	r0, sp, #12
 132:key_controlled_ocillators.cpp ****         result_2 = sscanf(temp_str, "%d", &temp_int);
 679              		.loc 6 132 21 view .LVU191
 680 007a 8DF80E50 		strb	r5, [sp, #14]
 133:key_controlled_ocillators.cpp ****         key_index = temp_int;
 681              		.loc 6 133 9 is_stmt 1 view .LVU192
ARM GAS  C:\Users\jpmaitre\AppData\Local\Temp\ccYI9wQo.s 			page 27


 133:key_controlled_ocillators.cpp ****         key_index = temp_int;
 682              		.loc 6 133 26 is_stmt 0 view .LVU193
 683 007e FFF7FEFF 		bl	sscanf
 684              	.LVL44:
 134:key_controlled_ocillators.cpp ****         if (result_2 != 1)
 685              		.loc 6 134 9 is_stmt 1 view .LVU194
 135:key_controlled_ocillators.cpp ****         {
 686              		.loc 6 135 9 is_stmt 0 view .LVU195
 687 0082 0128     		cmp	r0, #1
 134:key_controlled_ocillators.cpp ****         if (result_2 != 1)
 688              		.loc 6 134 19 view .LVU196
 689 0084 BDF80490 		ldrh	r9, [sp, #4]
 690              	.LVL45:
 135:key_controlled_ocillators.cpp ****         {
 691              		.loc 6 135 9 is_stmt 1 view .LVU197
 692 0088 20D1     		bne	.L59
 693              	.LVL46:
 694              	.L46:
 140:key_controlled_ocillators.cpp ****         
 695              		.loc 6 140 9 view .LVU198
 117:key_controlled_ocillators.cpp ****     char temp_str[MAX_MESSAGE_SIZE];
 696              		.loc 6 117 13 is_stmt 0 view .LVU199
 697 008a 023C     		subs	r4, r4, #2
 143:key_controlled_ocillators.cpp ****         temp_str[msg_len] = 0;
 698              		.loc 6 143 16 view .LVU200
 699 008c 391D     		adds	r1, r7, #4
 700 008e 03A8     		add	r0, sp, #12
 140:key_controlled_ocillators.cpp ****         
 701              		.loc 6 140 22 view .LVU201
 702 0090 A8F80090 		strh	r9, [r8]	@ movhi
 143:key_controlled_ocillators.cpp ****         temp_str[msg_len] = 0;
 703              		.loc 6 143 9 is_stmt 1 view .LVU202
 143:key_controlled_ocillators.cpp ****         temp_str[msg_len] = 0;
 704              		.loc 6 143 40 is_stmt 0 view .LVU203
 705 0094 E4B2     		uxtb	r4, r4
 143:key_controlled_ocillators.cpp ****         temp_str[msg_len] = 0;
 706              		.loc 6 143 16 view .LVU204
 707 0096 221F     		subs	r2, r4, #4
 708 0098 FFF7FEFF 		bl	strncpy
 709              	.LVL47:
 144:key_controlled_ocillators.cpp ****         result_2 = sscanf(temp_str, "%ld", &time);
 710              		.loc 6 144 9 is_stmt 1 view .LVU205
 144:key_controlled_ocillators.cpp ****         result_2 = sscanf(temp_str, "%ld", &time);
 711              		.loc 6 144 27 is_stmt 0 view .LVU206
 712 009c 08AB     		add	r3, sp, #32
 145:key_controlled_ocillators.cpp ****         if (result_2 != 1)
 713              		.loc 6 145 26 view .LVU207
 714 009e 03A8     		add	r0, sp, #12
 715 00a0 02AA     		add	r2, sp, #8
 144:key_controlled_ocillators.cpp ****         result_2 = sscanf(temp_str, "%ld", &time);
 716              		.loc 6 144 27 view .LVU208
 717 00a2 1C44     		add	r4, r4, r3
 718 00a4 0023     		movs	r3, #0
 145:key_controlled_ocillators.cpp ****         if (result_2 != 1)
 719              		.loc 6 145 26 view .LVU209
 720 00a6 1149     		ldr	r1, .L61+8
 144:key_controlled_ocillators.cpp ****         result_2 = sscanf(temp_str, "%ld", &time);
ARM GAS  C:\Users\jpmaitre\AppData\Local\Temp\ccYI9wQo.s 			page 28


 721              		.loc 6 144 27 view .LVU210
 722 00a8 04F8143C 		strb	r3, [r4, #-20]
 145:key_controlled_ocillators.cpp ****         if (result_2 != 1)
 723              		.loc 6 145 9 is_stmt 1 view .LVU211
 145:key_controlled_ocillators.cpp ****         if (result_2 != 1)
 724              		.loc 6 145 26 is_stmt 0 view .LVU212
 725 00ac FFF7FEFF 		bl	sscanf
 726              	.LVL48:
 146:key_controlled_ocillators.cpp ****         {
 727              		.loc 6 146 9 is_stmt 1 view .LVU213
 728 00b0 0128     		cmp	r0, #1
 729 00b2 05D1     		bne	.L60
 730              	.LVL49:
 731              	.L47:
 151:key_controlled_ocillators.cpp ****     }
 732              		.loc 6 151 9 view .LVU214
 151:key_controlled_ocillators.cpp ****     }
 733              		.loc 6 151 17 is_stmt 0 view .LVU215
 734 00b4 029B     		ldr	r3, [sp, #8]
 735              		.loc 6 177 1 view .LVU216
 736 00b6 2846     		mov	r0, r5
 151:key_controlled_ocillators.cpp ****     }
 737              		.loc 6 151 17 view .LVU217
 738 00b8 3360     		str	r3, [r6]
 739              		.loc 6 177 1 view .LVU218
 740 00ba 09B0     		add	sp, sp, #36
 741              		.cfi_remember_state
 742              		.cfi_def_cfa_offset 28
 743              		@ sp needed
 744 00bc BDE8F083 		pop	{r4, r5, r6, r7, r8, r9, pc}
 745              	.LVL50:
 746              	.L60:
 747              		.cfi_restore_state
 148:key_controlled_ocillators.cpp ****             result = -1;
 748              		.loc 6 148 13 is_stmt 1 view .LVU219
 749              	.LBB144:
 750              	.LBI144:
 126:c:\dev\daisy_seed\libdaisy\src\daisy_seed.h ****     {
 751              		.loc 1 126 17 view .LVU220
 752              	.LBB145:
 753              		.loc 1 128 23 is_stmt 0 view .LVU221
 754 00c0 0B48     		ldr	r0, .L61+12
 755              	.LVL51:
 756              		.loc 1 128 23 view .LVU222
 757              	.LBE145:
 758              	.LBE144:
 149:key_controlled_ocillators.cpp ****         }
 759              		.loc 6 149 20 view .LVU223
 760 00c2 4FF0FF35 		mov	r5, #-1
 761              	.LVL52:
 762              	.LBB147:
 763              	.LBB146:
 764              		.loc 1 128 23 view .LVU224
 765 00c6 FFF7FEFF 		bl	_ZN5daisy6LoggerILNS_17LoggerDestinationE1EE9PrintLineEPKcz
 766              	.LVL53:
 767              		.loc 1 128 23 view .LVU225
 768              	.LBE146:
ARM GAS  C:\Users\jpmaitre\AppData\Local\Temp\ccYI9wQo.s 			page 29


 769              	.LBE147:
 149:key_controlled_ocillators.cpp ****         }
 770              		.loc 6 149 13 is_stmt 1 view .LVU226
 149:key_controlled_ocillators.cpp ****         }
 771              		.loc 6 149 13 is_stmt 0 view .LVU227
 772 00ca F3E7     		b	.L47
 773              	.LVL54:
 774              	.L59:
 137:key_controlled_ocillators.cpp ****             result = -1;
 775              		.loc 6 137 13 is_stmt 1 view .LVU228
 776              	.LBB148:
 777              	.LBI148:
 126:c:\dev\daisy_seed\libdaisy\src\daisy_seed.h ****     {
 778              		.loc 1 126 17 view .LVU229
 779              	.LBB149:
 780              		.loc 1 128 23 is_stmt 0 view .LVU230
 781 00cc 0648     		ldr	r0, .L61+4
 782              	.LVL55:
 783              		.loc 1 128 23 view .LVU231
 784              	.LBE149:
 785              	.LBE148:
 138:key_controlled_ocillators.cpp ****         }
 786              		.loc 6 138 20 view .LVU232
 787 00ce 4FF0FF35 		mov	r5, #-1
 788              	.LBB151:
 789              	.LBB150:
 790              		.loc 1 128 23 view .LVU233
 791 00d2 FFF7FEFF 		bl	_ZN5daisy6LoggerILNS_17LoggerDestinationE1EE9PrintLineEPKcz
 792              	.LVL56:
 793              		.loc 1 128 23 view .LVU234
 794              	.LBE150:
 795              	.LBE151:
 138:key_controlled_ocillators.cpp ****         }
 796              		.loc 6 138 13 is_stmt 1 view .LVU235
 138:key_controlled_ocillators.cpp ****         }
 797              		.loc 6 138 13 is_stmt 0 view .LVU236
 798 00d6 D8E7     		b	.L46
 799              	.LVL57:
 800              	.L49:
 172:key_controlled_ocillators.cpp ****         result = -1;
 801              		.loc 6 172 9 is_stmt 1 view .LVU237
 802              	.LBB152:
 803              	.LBI152:
 126:c:\dev\daisy_seed\libdaisy\src\daisy_seed.h ****     {
 804              		.loc 1 126 17 view .LVU238
 805              	.LBB153:
 806              		.loc 1 128 23 is_stmt 0 view .LVU239
 807 00d8 0648     		ldr	r0, .L61+16
 808              	.LVL58:
 809              		.loc 1 128 23 view .LVU240
 810              	.LBE153:
 811              	.LBE152:
 173:key_controlled_ocillators.cpp ****     }
 812              		.loc 6 173 16 view .LVU241
 813 00da 4FF0FF35 		mov	r5, #-1
 814              	.LBB155:
 815              	.LBB154:
ARM GAS  C:\Users\jpmaitre\AppData\Local\Temp\ccYI9wQo.s 			page 30


 816              		.loc 1 128 23 view .LVU242
 817 00de FFF7FEFF 		bl	_ZN5daisy6LoggerILNS_17LoggerDestinationE1EE9PrintLineEPKcz
 818              	.LVL59:
 819              		.loc 1 128 23 view .LVU243
 820              	.LBE154:
 821              	.LBE155:
 173:key_controlled_ocillators.cpp ****     }
 822              		.loc 6 173 9 is_stmt 1 view .LVU244
 176:key_controlled_ocillators.cpp **** }
 823              		.loc 6 176 5 view .LVU245
 176:key_controlled_ocillators.cpp **** }
 824              		.loc 6 176 12 is_stmt 0 view .LVU246
 825 00e2 B4E7     		b	.L44
 826              	.L62:
 827              		.align	2
 828              	.L61:
 829 00e4 00000000 		.word	.LC2
 830 00e8 04000000 		.word	.LC3
 831 00ec 34000000 		.word	.LC4
 832 00f0 38000000 		.word	.LC5
 833 00f4 60000000 		.word	.LC6
 834              		.cfi_endproc
 835              	.LFE4685:
 837              		.section	.text._Z21compute_amplificationm,"ax",%progbits
 838              		.align	1
 839              		.p2align 2,,3
 840              		.global	_Z21compute_amplificationm
 841              		.syntax unified
 842              		.thumb
 843              		.thumb_func
 844              		.fpu fpv5-d16
 846              	_Z21compute_amplificationm:
 847              	.LVL60:
 848              	.LFB4686:
 178:key_controlled_ocillators.cpp **** 
 179:key_controlled_ocillators.cpp **** /* Compute the amplification factor which depends on the attack_time
 180:key_controlled_ocillators.cpp ****    We compute a linear function such as: 
 181:key_controlled_ocillators.cpp ****    - For time = 300 -> amp_factor = 1/6 (for 6 keys)
 182:key_controlled_ocillators.cpp ****    - For time = 10000 -> amp_factor = 0.
 183:key_controlled_ocillators.cpp ****    Thus, the linear function is: 
 184:key_controlled_ocillators.cpp ****    amp_factor = (1/6) . (-1.03e-4.time + 1.03)
 185:key_controlled_ocillators.cpp **** */
 186:key_controlled_ocillators.cpp **** float compute_amplification( uint32_t attack_time)
 187:key_controlled_ocillators.cpp **** {
 849              		.loc 6 187 1 is_stmt 1 view -0
 850              		.cfi_startproc
 851              		@ args = 0, pretend = 0, frame = 0
 852              		@ frame_needed = 0, uses_anonymous_args = 0
 853              		@ link register save eliminated.
 188:key_controlled_ocillators.cpp ****     float amp_factor;
 854              		.loc 6 188 5 view .LVU248
 189:key_controlled_ocillators.cpp ****     
 190:key_controlled_ocillators.cpp ****     amp_factor = -1.03e-4 * (float)attack_time + 1.03;
 855              		.loc 6 190 5 view .LVU249
 856              		.loc 6 190 29 is_stmt 0 view .LVU250
 857 0000 06EE900A 		vmov	s13, r0	@ int
 191:key_controlled_ocillators.cpp ****     
ARM GAS  C:\Users\jpmaitre\AppData\Local\Temp\ccYI9wQo.s 			page 31


 192:key_controlled_ocillators.cpp ****     if (amp_factor > 1.0f)
 858              		.loc 6 192 5 view .LVU251
 859 0004 F7EE005A 		vmov.f32	s11, #1.0e+0
 190:key_controlled_ocillators.cpp ****     
 860              		.loc 6 190 29 view .LVU252
 861 0008 B8EE666A 		vcvt.f32.u32	s12, s13
 190:key_controlled_ocillators.cpp ****     
 862              		.loc 6 190 48 view .LVU253
 863 000c 9FED104B 		vldr.64	d4, .L68
 864 0010 9FED117B 		vldr.64	d7, .L68+8
 190:key_controlled_ocillators.cpp ****     
 865              		.loc 6 190 29 view .LVU254
 866 0014 B7EEC66A 		vcvt.f64.f32	d6, s12
 190:key_controlled_ocillators.cpp ****     
 867              		.loc 6 190 48 view .LVU255
 868 0018 A6EE047B 		vfma.f64	d7, d6, d4
 190:key_controlled_ocillators.cpp ****     
 869              		.loc 6 190 16 view .LVU256
 870 001c B7EEC77B 		vcvt.f32.f64	s14, d7
 871              	.LVL61:
 872              		.loc 6 192 5 is_stmt 1 view .LVU257
 873 0020 B4EEE57A 		vcmpe.f32	s14, s11
 874 0024 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 875 0028 02DD     		ble	.L67
 876 002a 9FED0D0A 		vldr.32	s0, .L68+16
 877 002e 7047     		bx	lr
 878              	.L67:
 193:key_controlled_ocillators.cpp ****     {
 194:key_controlled_ocillators.cpp ****         amp_factor = 1.0f;
 195:key_controlled_ocillators.cpp ****     }
 196:key_controlled_ocillators.cpp ****     else if (amp_factor < 0.1f)
 879              		.loc 6 196 10 view .LVU258
 880 0030 DFED0C7A 		vldr.32	s15, .L68+20
 881 0034 B4EEE77A 		vcmpe.f32	s14, s15
 882 0038 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 883 003c 04D4     		bmi	.L66
 197:key_controlled_ocillators.cpp ****     {
 198:key_controlled_ocillators.cpp ****     amp_factor = 0.1f;
 199:key_controlled_ocillators.cpp ****     }
 200:key_controlled_ocillators.cpp **** 
 201:key_controlled_ocillators.cpp ****     amp_factor = amp_factor * 1.0f / 6.0f;
 884              		.loc 6 201 16 is_stmt 0 view .LVU259
 885 003e F1EE087A 		vmov.f32	s15, #6.0e+0
 886 0042 87EE270A 		vdiv.f32	s0, s14, s15
 887 0046 7047     		bx	lr
 888              	.L66:
 889 0048 9FED070A 		vldr.32	s0, .L68+24
 890              	.LVL62:
 891              		.loc 6 201 5 is_stmt 1 view .LVU260
 202:key_controlled_ocillators.cpp ****                                        
 203:key_controlled_ocillators.cpp ****     return amp_factor;
 892              		.loc 6 203 5 view .LVU261
 204:key_controlled_ocillators.cpp **** }
 893              		.loc 6 204 1 is_stmt 0 view .LVU262
 894 004c 7047     		bx	lr
 895              	.L69:
 896 004e 00BF     		.align	3
ARM GAS  C:\Users\jpmaitre\AppData\Local\Temp\ccYI9wQo.s 			page 32


 897              	.L68:
 898 0050 4FCAA486 		.word	-2036020657
 899 0054 36001BBF 		.word	-1088749514
 900 0058 7B14AE47 		.word	1202590843
 901 005c E17AF03F 		.word	1072724705
 902 0060 ABAA2A3E 		.word	1042983595
 903 0064 CDCCCC3D 		.word	1036831949
 904 0068 8988883C 		.word	1015580809
 905              		.cfi_endproc
 906              	.LFE4686:
 908              		.section	.rodata.main.str1.4,"aMS",%progbits,1
 909              		.align	2
 910              	.LC7:
 911 0000 6B65795F 		.ascii	"key_index=%d, msg_type=%d, attack_time=%ld\000"
 911      696E6465 
 911      783D2564 
 911      2C206D73 
 911      675F7479 
 912 002b 00       		.align	2
 913              	.LC8:
 914 002c 616D705F 		.ascii	"amp_factor=%c%d.%03d\000"
 914      66616374 
 914      6F723D25 
 914      6325642E 
 914      25303364 
 915              		.section	.text.startup.main,"ax",%progbits
 916              		.align	1
 917              		.p2align 2,,3
 918              		.global	main
 919              		.syntax unified
 920              		.thumb
 921              		.thumb_func
 922              		.fpu fpv5-d16
 924              	main:
 925              	.LFB4687:
 205:key_controlled_ocillators.cpp **** 
 206:key_controlled_ocillators.cpp **** int main(void)
 207:key_controlled_ocillators.cpp **** {
 926              		.loc 6 207 1 is_stmt 1 view -0
 927              		.cfi_startproc
 928              		@ args = 0, pretend = 0, frame = 32
 929              		@ frame_needed = 0, uses_anonymous_args = 0
 208:key_controlled_ocillators.cpp ****     float sample_rate;
 930              		.loc 6 208 5 view .LVU264
 209:key_controlled_ocillators.cpp ****     char msg_rec[MAX_MESSAGE_SIZE];
 931              		.loc 6 209 5 view .LVU265
 210:key_controlled_ocillators.cpp ****     int result = 0;
 932              		.loc 6 210 5 view .LVU266
 933              	.LVL63:
 211:key_controlled_ocillators.cpp ****     uint16_t key_index;
 934              		.loc 6 211 5 view .LVU267
 212:key_controlled_ocillators.cpp ****     e_msg_type msg_type;
 935              		.loc 6 212 5 view .LVU268
 213:key_controlled_ocillators.cpp ****     uint32_t attack_time;
 936              		.loc 6 213 5 view .LVU269
 214:key_controlled_ocillators.cpp **** 
 215:key_controlled_ocillators.cpp ****     // Initialize hardware
ARM GAS  C:\Users\jpmaitre\AppData\Local\Temp\ccYI9wQo.s 			page 33


 216:key_controlled_ocillators.cpp ****     hw.Configure();
 937              		.loc 6 216 5 view .LVU270
 207:key_controlled_ocillators.cpp ****     float sample_rate;
 938              		.loc 6 207 1 is_stmt 0 view .LVU271
 939 0000 2DE9F043 		push	{r4, r5, r6, r7, r8, r9, lr}
 940              		.cfi_def_cfa_offset 28
 941              		.cfi_offset 4, -28
 942              		.cfi_offset 5, -24
 943              		.cfi_offset 6, -20
 944              		.cfi_offset 7, -16
 945              		.cfi_offset 8, -12
 946              		.cfi_offset 9, -8
 947              		.cfi_offset 14, -4
 948              		.loc 6 216 17 view .LVU272
 949 0004 7248     		ldr	r0, .L93+24
 950              	.LBB182:
 951              	.LBB183:
 952              	.LBB184:
 953              		.file 8 "c:\\dev\\daisy_seed\\daisysp\\source\\synthesis\\oscillator.h"
   1:c:\dev\daisy_seed\daisysp\source\synthesis\oscillator.h **** /*
   2:c:\dev\daisy_seed\daisysp\source\synthesis\oscillator.h **** Copyright (c) 2020 Electrosmith, Corp
   3:c:\dev\daisy_seed\daisysp\source\synthesis\oscillator.h **** 
   4:c:\dev\daisy_seed\daisysp\source\synthesis\oscillator.h **** Use of this source code is governed by an MIT-style
   5:c:\dev\daisy_seed\daisysp\source\synthesis\oscillator.h **** license that can be found in the LICENSE file or at
   6:c:\dev\daisy_seed\daisysp\source\synthesis\oscillator.h **** https://opensource.org/licenses/MIT.
   7:c:\dev\daisy_seed\daisysp\source\synthesis\oscillator.h **** */
   8:c:\dev\daisy_seed\daisysp\source\synthesis\oscillator.h **** 
   9:c:\dev\daisy_seed\daisysp\source\synthesis\oscillator.h **** #pragma once
  10:c:\dev\daisy_seed\daisysp\source\synthesis\oscillator.h **** #ifndef DSY_OSCILLATOR_H
  11:c:\dev\daisy_seed\daisysp\source\synthesis\oscillator.h **** #define DSY_OSCILLATOR_H
  12:c:\dev\daisy_seed\daisysp\source\synthesis\oscillator.h **** #include <stdint.h>
  13:c:\dev\daisy_seed\daisysp\source\synthesis\oscillator.h **** #include "Utility/dsp.h"
  14:c:\dev\daisy_seed\daisysp\source\synthesis\oscillator.h **** #ifdef __cplusplus
  15:c:\dev\daisy_seed\daisysp\source\synthesis\oscillator.h **** 
  16:c:\dev\daisy_seed\daisysp\source\synthesis\oscillator.h **** namespace daisysp
  17:c:\dev\daisy_seed\daisysp\source\synthesis\oscillator.h **** {
  18:c:\dev\daisy_seed\daisysp\source\synthesis\oscillator.h **** /** Synthesis of several waveforms, including polyBLEP bandlimited waveforms.
  19:c:\dev\daisy_seed\daisysp\source\synthesis\oscillator.h **** */
  20:c:\dev\daisy_seed\daisysp\source\synthesis\oscillator.h **** class Oscillator
  21:c:\dev\daisy_seed\daisysp\source\synthesis\oscillator.h **** {
  22:c:\dev\daisy_seed\daisysp\source\synthesis\oscillator.h ****   public:
  23:c:\dev\daisy_seed\daisysp\source\synthesis\oscillator.h ****     Oscillator() {}
  24:c:\dev\daisy_seed\daisysp\source\synthesis\oscillator.h ****     ~Oscillator() {}
  25:c:\dev\daisy_seed\daisysp\source\synthesis\oscillator.h ****     /** Choices for output waveforms, POLYBLEP are appropriately labeled. Others are naive forms.
  26:c:\dev\daisy_seed\daisysp\source\synthesis\oscillator.h ****     */
  27:c:\dev\daisy_seed\daisysp\source\synthesis\oscillator.h ****     enum
  28:c:\dev\daisy_seed\daisysp\source\synthesis\oscillator.h ****     {
  29:c:\dev\daisy_seed\daisysp\source\synthesis\oscillator.h ****         WAVE_SIN,
  30:c:\dev\daisy_seed\daisysp\source\synthesis\oscillator.h ****         WAVE_TRI,
  31:c:\dev\daisy_seed\daisysp\source\synthesis\oscillator.h ****         WAVE_SAW,
  32:c:\dev\daisy_seed\daisysp\source\synthesis\oscillator.h ****         WAVE_RAMP,
  33:c:\dev\daisy_seed\daisysp\source\synthesis\oscillator.h ****         WAVE_SQUARE,
  34:c:\dev\daisy_seed\daisysp\source\synthesis\oscillator.h ****         WAVE_POLYBLEP_TRI,
  35:c:\dev\daisy_seed\daisysp\source\synthesis\oscillator.h ****         WAVE_POLYBLEP_SAW,
  36:c:\dev\daisy_seed\daisysp\source\synthesis\oscillator.h ****         WAVE_POLYBLEP_SQUARE,
  37:c:\dev\daisy_seed\daisysp\source\synthesis\oscillator.h ****         WAVE_LAST,
  38:c:\dev\daisy_seed\daisysp\source\synthesis\oscillator.h ****     };
ARM GAS  C:\Users\jpmaitre\AppData\Local\Temp\ccYI9wQo.s 			page 34


  39:c:\dev\daisy_seed\daisysp\source\synthesis\oscillator.h **** 
  40:c:\dev\daisy_seed\daisysp\source\synthesis\oscillator.h **** 
  41:c:\dev\daisy_seed\daisysp\source\synthesis\oscillator.h ****     /** Initializes the Oscillator
  42:c:\dev\daisy_seed\daisysp\source\synthesis\oscillator.h **** 
  43:c:\dev\daisy_seed\daisysp\source\synthesis\oscillator.h ****         \param sample_rate - sample rate of the audio engine being run, and the frequency that the 
  44:c:\dev\daisy_seed\daisysp\source\synthesis\oscillator.h **** 
  45:c:\dev\daisy_seed\daisysp\source\synthesis\oscillator.h ****         Defaults:
  46:c:\dev\daisy_seed\daisysp\source\synthesis\oscillator.h ****         - freq_ = 100 Hz
  47:c:\dev\daisy_seed\daisysp\source\synthesis\oscillator.h ****         - amp_ = 0.5
  48:c:\dev\daisy_seed\daisysp\source\synthesis\oscillator.h ****         - waveform_ = sine wave.
  49:c:\dev\daisy_seed\daisysp\source\synthesis\oscillator.h ****     */
  50:c:\dev\daisy_seed\daisysp\source\synthesis\oscillator.h ****     void Init(float sample_rate)
  51:c:\dev\daisy_seed\daisysp\source\synthesis\oscillator.h ****     {
  52:c:\dev\daisy_seed\daisysp\source\synthesis\oscillator.h ****         sr_        = sample_rate;
  53:c:\dev\daisy_seed\daisysp\source\synthesis\oscillator.h ****         sr_recip_  = 1.0f / sample_rate;
 954              		.loc 8 53 27 view .LVU273
 955 0006 6E26     		movs	r6, #110
 956 0008 724D     		ldr	r5, .L93+28
 957              	.LBE184:
 958              	.LBE183:
 959              	.LBE182:
 207:key_controlled_ocillators.cpp ****     float sample_rate;
 960              		.loc 6 207 1 view .LVU274
 961 000a 2DED028B 		vpush.64	{d8}
 962              		.cfi_def_cfa_offset 36
 963              		.cfi_offset 80, -36
 964              		.cfi_offset 81, -32
 965 000e 89B0     		sub	sp, sp, #36
 966              		.cfi_def_cfa_offset 72
 967 0010 2C46     		mov	r4, r5
 968              		.loc 6 216 17 view .LVU275
 969 0012 FFF7FEFF 		bl	_ZN5daisy9DaisySeed9ConfigureEv
 970              	.LVL64:
 217:key_controlled_ocillators.cpp ****     hw.Init();
 971              		.loc 6 217 5 is_stmt 1 view .LVU276
 972              		.loc 6 217 12 is_stmt 0 view .LVU277
 973 0016 0021     		movs	r1, #0
 974 0018 6D48     		ldr	r0, .L93+24
 975 001a FFF7FEFF 		bl	_ZN5daisy9DaisySeed4InitEb
 976              	.LVL65:
 218:key_controlled_ocillators.cpp ****     hw.SetAudioBlockSize(4);
 977              		.loc 6 218 5 is_stmt 1 view .LVU278
 978              		.loc 6 218 25 is_stmt 0 view .LVU279
 979 001e 0421     		movs	r1, #4
 980 0020 6B48     		ldr	r0, .L93+24
 981 0022 FFF7FEFF 		bl	_ZN5daisy9DaisySeed17SetAudioBlockSizeEj
 982              	.LVL66:
 219:key_controlled_ocillators.cpp **** 
 220:key_controlled_ocillators.cpp ****     // Start message logging
 221:key_controlled_ocillators.cpp ****     hw.StartLog(false);
 983              		.loc 6 221 5 is_stmt 1 view .LVU280
 984              	.LBB211:
 985              	.LBI211:
 129:c:\dev\daisy_seed\libdaisy\src\daisy_seed.h ****     }
 130:c:\dev\daisy_seed\libdaisy\src\daisy_seed.h **** 
 131:c:\dev\daisy_seed\libdaisy\src\daisy_seed.h ****     /** Start the logging session. Optionally wait for terminal connection before proceeding.
 132:c:\dev\daisy_seed\libdaisy\src\daisy_seed.h ****     */
ARM GAS  C:\Users\jpmaitre\AppData\Local\Temp\ccYI9wQo.s 			page 35


 133:c:\dev\daisy_seed\libdaisy\src\daisy_seed.h ****     static void StartLog(bool wait_for_pc = false)
 986              		.loc 1 133 17 view .LVU281
 987              	.LBB212:
 134:c:\dev\daisy_seed\libdaisy\src\daisy_seed.h ****     {
 135:c:\dev\daisy_seed\libdaisy\src\daisy_seed.h ****         Log::StartLog(wait_for_pc);
 988              		.loc 1 135 9 view .LVU282
 989              		.loc 1 135 22 is_stmt 0 view .LVU283
 990 0026 0020     		movs	r0, #0
 991 0028 FFF7FEFF 		bl	_ZN5daisy6LoggerILNS_17LoggerDestinationE1EE8StartLogEb
 992              	.LVL67:
 993              		.loc 1 135 22 view .LVU284
 994              	.LBE212:
 995              	.LBE211:
 222:key_controlled_ocillators.cpp **** 
 223:key_controlled_ocillators.cpp ****     // Set oscillators parameters
 224:key_controlled_ocillators.cpp ****     sample_rate = hw.AudioSampleRate();
 996              		.loc 6 224 5 is_stmt 1 view .LVU285
 997              		.loc 6 224 37 is_stmt 0 view .LVU286
 998 002c 6848     		ldr	r0, .L93+24
 999 002e FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 1000              	.LVL68:
 1001              	.LBB213:
 1002              	.LBB192:
 1003              	.LBB185:
 1004              		.loc 8 53 27 view .LVU287
 1005 0032 F7EE007A 		vmov.f32	s15, #1.0e+0
 1006              	.LBE185:
 1007              	.LBE192:
 1008              	.LBE213:
 1009              		.loc 6 224 37 view .LVU288
 1010 0036 B0EE408A 		vmov.f32	s16, s0
 1011              	.LVL69:
 225:key_controlled_ocillators.cpp ****     for(size_t osc_idx=0; osc_idx < NB_OSCILLATORS; osc_idx++)
 1012              		.loc 6 225 5 is_stmt 1 view .LVU289
 1013              	.LBB214:
 1014              		.loc 6 225 35 view .LVU290
 1015              	.LBB193:
 1016              	.LBB186:
 1017              		.loc 8 53 27 is_stmt 0 view .LVU291
 1018 003a C7EE808A 		vdiv.f32	s17, s15, s0
 1019              	.LVL70:
 1020              	.L71:
 1021              		.loc 8 53 27 view .LVU292
 1022              	.LBE186:
 1023              	.LBE193:
 226:key_controlled_ocillators.cpp ****     {
 227:key_controlled_ocillators.cpp ****         osc[osc_idx].Init(sample_rate);
 1024              		.loc 6 227 9 is_stmt 1 discriminator 2 view .LVU293
 1025              	.LBB194:
 1026              	.LBI183:
  50:c:\dev\daisy_seed\daisysp\source\synthesis\oscillator.h ****     {
 1027              		.loc 8 50 10 discriminator 2 view .LVU294
 1028              	.LBB187:
  52:c:\dev\daisy_seed\daisysp\source\synthesis\oscillator.h ****         sr_recip_  = 1.0f / sample_rate;
 1029              		.loc 8 52 9 discriminator 2 view .LVU295
  54:c:\dev\daisy_seed\daisysp\source\synthesis\oscillator.h ****         freq_      = 100.0f;
  55:c:\dev\daisy_seed\daisysp\source\synthesis\oscillator.h ****         amp_       = 0.5f;
ARM GAS  C:\Users\jpmaitre\AppData\Local\Temp\ccYI9wQo.s 			page 36


 1030              		.loc 8 55 20 is_stmt 0 discriminator 2 view .LVU296
 1031 003e 4FF07C53 		mov	r3, #1056964608
  54:c:\dev\daisy_seed\daisysp\source\synthesis\oscillator.h ****         freq_      = 100.0f;
 1032              		.loc 8 54 20 discriminator 2 view .LVU297
 1033 0042 9FED650A 		vldr.32	s0, .L93+32
  56:c:\dev\daisy_seed\daisysp\source\synthesis\oscillator.h ****         pw_        = 0.5f;
  57:c:\dev\daisy_seed\daisysp\source\synthesis\oscillator.h ****         phase_     = 0.0f;
 1034              		.loc 8 57 20 discriminator 2 view .LVU298
 1035 0046 4FF00009 		mov	r9, #0
  58:c:\dev\daisy_seed\daisysp\source\synthesis\oscillator.h ****         phase_inc_ = CalcPhaseInc(freq_);
 1036              		.loc 8 58 34 discriminator 2 view .LVU299
 1037 004a 2046     		mov	r0, r4
  55:c:\dev\daisy_seed\daisysp\source\synthesis\oscillator.h ****         pw_        = 0.5f;
 1038              		.loc 8 55 20 discriminator 2 view .LVU300
 1039 004c 6360     		str	r3, [r4, #4]	@ float
  59:c:\dev\daisy_seed\daisysp\source\synthesis\oscillator.h ****         waveform_  = WAVE_SIN;
  60:c:\dev\daisy_seed\daisysp\source\synthesis\oscillator.h ****         eoc_       = true;
 1040              		.loc 8 60 20 discriminator 2 view .LVU301
 1041 004e 0127     		movs	r7, #1
  56:c:\dev\daisy_seed\daisysp\source\synthesis\oscillator.h ****         phase_     = 0.0f;
 1042              		.loc 8 56 20 discriminator 2 view .LVU302
 1043 0050 E360     		str	r3, [r4, #12]	@ float
  59:c:\dev\daisy_seed\daisysp\source\synthesis\oscillator.h ****         waveform_  = WAVE_SIN;
 1044              		.loc 8 59 20 discriminator 2 view .LVU303
 1045 0052 4FF00008 		mov	r8, #0
  52:c:\dev\daisy_seed\daisysp\source\synthesis\oscillator.h ****         sr_recip_  = 1.0f / sample_rate;
 1046              		.loc 8 52 20 discriminator 2 view .LVU304
 1047 0056 84ED048A 		vstr.32	s16, [r4, #16]
  53:c:\dev\daisy_seed\daisysp\source\synthesis\oscillator.h ****         freq_      = 100.0f;
 1048              		.loc 8 53 9 is_stmt 1 discriminator 2 view .LVU305
  53:c:\dev\daisy_seed\daisysp\source\synthesis\oscillator.h ****         freq_      = 100.0f;
 1049              		.loc 8 53 20 is_stmt 0 discriminator 2 view .LVU306
 1050 005a C4ED058A 		vstr.32	s17, [r4, #20]
  54:c:\dev\daisy_seed\daisysp\source\synthesis\oscillator.h ****         amp_       = 0.5f;
 1051              		.loc 8 54 9 is_stmt 1 discriminator 2 view .LVU307
  54:c:\dev\daisy_seed\daisysp\source\synthesis\oscillator.h ****         amp_       = 0.5f;
 1052              		.loc 8 54 20 is_stmt 0 discriminator 2 view .LVU308
 1053 005e 84ED020A 		vstr.32	s0, [r4, #8]
  55:c:\dev\daisy_seed\daisysp\source\synthesis\oscillator.h ****         pw_        = 0.5f;
 1054              		.loc 8 55 9 is_stmt 1 discriminator 2 view .LVU309
  56:c:\dev\daisy_seed\daisysp\source\synthesis\oscillator.h ****         phase_     = 0.0f;
 1055              		.loc 8 56 9 discriminator 2 view .LVU310
  57:c:\dev\daisy_seed\daisysp\source\synthesis\oscillator.h ****         phase_inc_ = CalcPhaseInc(freq_);
 1056              		.loc 8 57 9 discriminator 2 view .LVU311
  57:c:\dev\daisy_seed\daisysp\source\synthesis\oscillator.h ****         phase_inc_ = CalcPhaseInc(freq_);
 1057              		.loc 8 57 20 is_stmt 0 discriminator 2 view .LVU312
 1058 0062 C4F81890 		str	r9, [r4, #24]	@ float
  58:c:\dev\daisy_seed\daisysp\source\synthesis\oscillator.h ****         waveform_  = WAVE_SIN;
 1059              		.loc 8 58 9 is_stmt 1 discriminator 2 view .LVU313
  58:c:\dev\daisy_seed\daisysp\source\synthesis\oscillator.h ****         waveform_  = WAVE_SIN;
 1060              		.loc 8 58 34 is_stmt 0 discriminator 2 view .LVU314
 1061 0066 FFF7FEFF 		bl	_ZN7daisysp10Oscillator12CalcPhaseIncEf
 1062              	.LVL71:
 1063              	.LBE187:
 1064              	.LBE194:
 228:key_controlled_ocillators.cpp ****         osc[osc_idx].SetWaveform(Oscillator::WAVE_SIN);
 229:key_controlled_ocillators.cpp ****         osc[osc_idx].SetFreq(110 * (osc_idx + 1));
ARM GAS  C:\Users\jpmaitre\AppData\Local\Temp\ccYI9wQo.s 			page 37


 1065              		.loc 6 229 29 discriminator 2 view .LVU315
 1066 006a 07EE906A 		vmov	s15, r6	@ int
 1067              	.LBB195:
 1068              	.LBB188:
  58:c:\dev\daisy_seed\daisysp\source\synthesis\oscillator.h ****         waveform_  = WAVE_SIN;
 1069              		.loc 8 58 20 discriminator 2 view .LVU316
 1070 006e 84ED070A 		vstr.32	s0, [r4, #28]
  59:c:\dev\daisy_seed\daisysp\source\synthesis\oscillator.h ****         eoc_       = true;
 1071              		.loc 8 59 9 is_stmt 1 discriminator 2 view .LVU317
 1072              	.LBE188:
 1073              	.LBE195:
 1074              	.LBB196:
 1075              	.LBB197:
  61:c:\dev\daisy_seed\daisysp\source\synthesis\oscillator.h ****         eor_       = true;
  62:c:\dev\daisy_seed\daisysp\source\synthesis\oscillator.h ****     }
  63:c:\dev\daisy_seed\daisysp\source\synthesis\oscillator.h **** 
  64:c:\dev\daisy_seed\daisysp\source\synthesis\oscillator.h **** 
  65:c:\dev\daisy_seed\daisysp\source\synthesis\oscillator.h ****     /** Changes the frequency of the Oscillator, and recalculates phase increment.
  66:c:\dev\daisy_seed\daisysp\source\synthesis\oscillator.h ****     */
  67:c:\dev\daisy_seed\daisysp\source\synthesis\oscillator.h ****     inline void SetFreq(const float f)
  68:c:\dev\daisy_seed\daisysp\source\synthesis\oscillator.h ****     {
  69:c:\dev\daisy_seed\daisysp\source\synthesis\oscillator.h ****         freq_      = f;
  70:c:\dev\daisy_seed\daisysp\source\synthesis\oscillator.h ****         phase_inc_ = CalcPhaseInc(f);
 1076              		.loc 8 70 34 is_stmt 0 discriminator 2 view .LVU318
 1077 0072 2046     		mov	r0, r4
 1078              	.LBE197:
 1079              	.LBE196:
 1080              		.loc 6 229 29 discriminator 2 view .LVU319
 1081 0074 F8EEE77A 		vcvt.f32.s32	s15, s15
 1082              	.LBB201:
 1083              	.LBB189:
  59:c:\dev\daisy_seed\daisysp\source\synthesis\oscillator.h ****         eoc_       = true;
 1084              		.loc 8 59 20 discriminator 2 view .LVU320
 1085 0078 84F80080 		strb	r8, [r4]
  60:c:\dev\daisy_seed\daisysp\source\synthesis\oscillator.h ****         eor_       = true;
 1086              		.loc 8 60 9 is_stmt 1 discriminator 2 view .LVU321
  60:c:\dev\daisy_seed\daisysp\source\synthesis\oscillator.h ****         eor_       = true;
 1087              		.loc 8 60 20 is_stmt 0 discriminator 2 view .LVU322
 1088 007c 84F82970 		strb	r7, [r4, #41]
  61:c:\dev\daisy_seed\daisysp\source\synthesis\oscillator.h ****         eor_       = true;
 1089              		.loc 8 61 9 is_stmt 1 discriminator 2 view .LVU323
 1090              	.LBE189:
 1091              	.LBE201:
 225:key_controlled_ocillators.cpp ****     {
 1092              		.loc 6 225 35 is_stmt 0 discriminator 2 view .LVU324
 1093 0080 6E36     		adds	r6, r6, #110
 1094              	.LBB202:
 1095              	.LBB190:
  61:c:\dev\daisy_seed\daisysp\source\synthesis\oscillator.h ****         eor_       = true;
 1096              		.loc 8 61 20 discriminator 2 view .LVU325
 1097 0082 84F82870 		strb	r7, [r4, #40]
 1098              	.LVL72:
  61:c:\dev\daisy_seed\daisysp\source\synthesis\oscillator.h ****         eor_       = true;
 1099              		.loc 8 61 20 discriminator 2 view .LVU326
 1100              	.LBE190:
 1101              	.LBE202:
 228:key_controlled_ocillators.cpp ****         osc[osc_idx].SetFreq(110 * (osc_idx + 1));
ARM GAS  C:\Users\jpmaitre\AppData\Local\Temp\ccYI9wQo.s 			page 38


 1102              		.loc 6 228 9 is_stmt 1 discriminator 2 view .LVU327
 228:key_controlled_ocillators.cpp ****         osc[osc_idx].SetFreq(110 * (osc_idx + 1));
 1103              		.loc 6 228 9 is_stmt 0 discriminator 2 view .LVU328
 1104              	.LBE214:
  71:c:\dev\daisy_seed\daisysp\source\synthesis\oscillator.h ****     }
  72:c:\dev\daisy_seed\daisysp\source\synthesis\oscillator.h **** 
  73:c:\dev\daisy_seed\daisysp\source\synthesis\oscillator.h **** 
  74:c:\dev\daisy_seed\daisysp\source\synthesis\oscillator.h ****     /** Sets the amplitude of the waveform.
  75:c:\dev\daisy_seed\daisysp\source\synthesis\oscillator.h ****     */
  76:c:\dev\daisy_seed\daisysp\source\synthesis\oscillator.h ****     inline void SetAmp(const float a) { amp_ = a; }
  77:c:\dev\daisy_seed\daisysp\source\synthesis\oscillator.h ****     /** Sets the waveform to be synthesized by the Process() function.
  78:c:\dev\daisy_seed\daisysp\source\synthesis\oscillator.h ****     */
  79:c:\dev\daisy_seed\daisysp\source\synthesis\oscillator.h ****     inline void SetWaveform(const uint8_t wf)
  80:c:\dev\daisy_seed\daisysp\source\synthesis\oscillator.h ****     {
  81:c:\dev\daisy_seed\daisysp\source\synthesis\oscillator.h ****         waveform_ = wf < WAVE_LAST ? wf : WAVE_SIN;
 1105              		.loc 8 81 9 is_stmt 1 discriminator 2 view .LVU329
 1106              	.LBB215:
 1107              		.loc 6 229 9 discriminator 2 view .LVU330
 1108              	.LBB203:
 1109              	.LBI196:
  67:c:\dev\daisy_seed\daisysp\source\synthesis\oscillator.h ****     {
 1110              		.loc 8 67 17 discriminator 2 view .LVU331
 1111              	.LBB198:
  69:c:\dev\daisy_seed\daisysp\source\synthesis\oscillator.h ****         phase_inc_ = CalcPhaseInc(f);
 1112              		.loc 8 69 9 discriminator 2 view .LVU332
 1113              	.LBE198:
 1114              	.LBE203:
 225:key_controlled_ocillators.cpp ****     {
 1115              		.loc 6 225 35 is_stmt 0 discriminator 2 view .LVU333
 1116 0086 2C34     		adds	r4, r4, #44
 1117              	.LVL73:
 1118              	.LBB204:
 1119              	.LBB199:
  69:c:\dev\daisy_seed\daisysp\source\synthesis\oscillator.h ****         phase_inc_ = CalcPhaseInc(f);
 1120              		.loc 8 69 20 discriminator 2 view .LVU334
 1121 0088 44ED097A 		vstr.32	s15, [r4, #-36]
  70:c:\dev\daisy_seed\daisysp\source\synthesis\oscillator.h ****     }
 1122              		.loc 8 70 9 is_stmt 1 discriminator 2 view .LVU335
  70:c:\dev\daisy_seed\daisysp\source\synthesis\oscillator.h ****     }
 1123              		.loc 8 70 34 is_stmt 0 discriminator 2 view .LVU336
 1124 008c B0EE670A 		vmov.f32	s0, s15
 1125 0090 FFF7FEFF 		bl	_ZN7daisysp10Oscillator12CalcPhaseIncEf
 1126              	.LVL74:
  70:c:\dev\daisy_seed\daisysp\source\synthesis\oscillator.h ****     }
 1127              		.loc 8 70 34 discriminator 2 view .LVU337
 1128              	.LBE199:
 1129              	.LBE204:
 225:key_controlled_ocillators.cpp ****     {
 1130              		.loc 6 225 35 discriminator 2 view .LVU338
 1131 0094 40F20233 		movw	r3, #770
 1132              	.LBB205:
 1133              	.LBB206:
  76:c:\dev\daisy_seed\daisysp\source\synthesis\oscillator.h ****     /** Sets the waveform to be synthesized by the Process() function.
 1134              		.loc 8 76 46 discriminator 2 view .LVU339
 1135 0098 44F8289C 		str	r9, [r4, #-40]	@ float
 1136              	.LBE206:
 1137              	.LBE205:
ARM GAS  C:\Users\jpmaitre\AppData\Local\Temp\ccYI9wQo.s 			page 39


 225:key_controlled_ocillators.cpp ****     {
 1138              		.loc 6 225 35 discriminator 2 view .LVU340
 1139 009c 9E42     		cmp	r6, r3
 1140              	.LBB208:
 1141              	.LBB200:
  70:c:\dev\daisy_seed\daisysp\source\synthesis\oscillator.h ****     }
 1142              		.loc 8 70 20 discriminator 2 view .LVU341
 1143 009e 04ED040A 		vstr.32	s0, [r4, #-16]
 1144              	.LVL75:
  70:c:\dev\daisy_seed\daisysp\source\synthesis\oscillator.h ****     }
 1145              		.loc 8 70 20 discriminator 2 view .LVU342
 1146              	.LBE200:
 1147              	.LBE208:
 230:key_controlled_ocillators.cpp ****         osc[osc_idx].SetAmp(0);
 1148              		.loc 6 230 9 is_stmt 1 discriminator 2 view .LVU343
 1149              	.LBB209:
 1150              	.LBI205:
  76:c:\dev\daisy_seed\daisysp\source\synthesis\oscillator.h ****     /** Sets the waveform to be synthesized by the Process() function.
 1151              		.loc 8 76 17 discriminator 2 view .LVU344
 1152              	.LBB207:
  76:c:\dev\daisy_seed\daisysp\source\synthesis\oscillator.h ****     /** Sets the waveform to be synthesized by the Process() function.
 1153              		.loc 8 76 41 discriminator 2 view .LVU345
  76:c:\dev\daisy_seed\daisysp\source\synthesis\oscillator.h ****     /** Sets the waveform to be synthesized by the Process() function.
 1154              		.loc 8 76 41 is_stmt 0 discriminator 2 view .LVU346
 1155              	.LBE207:
 1156              	.LBE209:
 225:key_controlled_ocillators.cpp ****     {
 1157              		.loc 6 225 5 is_stmt 1 discriminator 2 view .LVU347
 225:key_controlled_ocillators.cpp ****     {
 1158              		.loc 6 225 35 discriminator 2 view .LVU348
 1159 00a2 CCD1     		bne	.L71
 1160              	.LBE215:
 231:key_controlled_ocillators.cpp ****     }
 232:key_controlled_ocillators.cpp **** 
 233:key_controlled_ocillators.cpp ****     // Start callback
 234:key_controlled_ocillators.cpp ****     hw.StartAudio(AudioCallback);
 1161              		.loc 6 234 5 view .LVU349
 1162              		.loc 6 234 18 is_stmt 0 view .LVU350
 1163 00a4 4D49     		ldr	r1, .L93+36
 1164 00a6 4A48     		ldr	r0, .L93+24
 1165 00a8 FFF7FEFF 		bl	_ZN5daisy9DaisySeed10StartAudioEPFvPKfPfjE
 1166              	.LVL76:
 235:key_controlled_ocillators.cpp **** 
 236:key_controlled_ocillators.cpp ****     // Initialize UART
 237:key_controlled_ocillators.cpp ****     UartHandler uart;
 1167              		.loc 6 237 5 is_stmt 1 view .LVU351
 1168              	.LBB216:
 1169              	.LBI216:
  83:c:\dev\daisy_seed\libdaisy\src\per\uart.h ****         }
  84:c:\dev\daisy_seed\libdaisy\src\per\uart.h **** 
  85:c:\dev\daisy_seed\libdaisy\src\per\uart.h ****         Peripheral periph;
  86:c:\dev\daisy_seed\libdaisy\src\per\uart.h ****         StopBits   stopbits;
  87:c:\dev\daisy_seed\libdaisy\src\per\uart.h ****         Parity     parity;
  88:c:\dev\daisy_seed\libdaisy\src\per\uart.h ****         Mode       mode;
  89:c:\dev\daisy_seed\libdaisy\src\per\uart.h ****         WordLength wordlength;
  90:c:\dev\daisy_seed\libdaisy\src\per\uart.h ****         uint32_t   baudrate;
  91:c:\dev\daisy_seed\libdaisy\src\per\uart.h ****     };
ARM GAS  C:\Users\jpmaitre\AppData\Local\Temp\ccYI9wQo.s 			page 40


  92:c:\dev\daisy_seed\libdaisy\src\per\uart.h **** 
  93:c:\dev\daisy_seed\libdaisy\src\per\uart.h **** 
  94:c:\dev\daisy_seed\libdaisy\src\per\uart.h ****     UartHandler() : pimpl_(nullptr) {}
 1170              		.loc 7 94 5 view .LVU352
 1171              	.LBE216:
 238:key_controlled_ocillators.cpp ****     initialize_uart(&uart);
 1172              		.loc 6 238 20 is_stmt 0 view .LVU353
 1173 00ac 02A8     		add	r0, sp, #8
 1174              	.LVL77:
 1175              	.LBB219:
 1176              	.LBB217:
 1177              	.LBB218:
 1178              		.loc 7 94 35 view .LVU354
 1179 00ae CDF80880 		str	r8, [sp, #8]
 1180              	.LVL78:
 1181              		.loc 7 94 35 view .LVU355
 1182              	.LBE218:
 1183              	.LBE217:
 1184              	.LBE219:
 1185              		.loc 6 238 5 is_stmt 1 view .LVU356
 1186              		.loc 6 238 20 is_stmt 0 view .LVU357
 1187 00b2 FFF7FEFF 		bl	_Z15initialize_uartPN5daisy11UartHandlerE
 1188              	.LVL79:
 239:key_controlled_ocillators.cpp ****     flush_uart(&uart);
 1189              		.loc 6 239 5 is_stmt 1 view .LVU358
 1190              		.loc 6 239 15 is_stmt 0 view .LVU359
 1191 00b6 02A8     		add	r0, sp, #8
 1192 00b8 FFF7FEFF 		bl	_Z10flush_uartPN5daisy11UartHandlerE
 1193              	.LVL80:
 240:key_controlled_ocillators.cpp **** 
 241:key_controlled_ocillators.cpp ****     // Switch on the right LED
 242:key_controlled_ocillators.cpp ****     hw.SetLed(true);
 1194              		.loc 6 242 5 is_stmt 1 view .LVU360
 1195              		.loc 6 242 14 is_stmt 0 view .LVU361
 1196 00bc 3946     		mov	r1, r7
 1197 00be 4448     		ldr	r0, .L93+24
 1198 00c0 FFF7FEFF 		bl	_ZN5daisy9DaisySeed6SetLedEb
 1199              	.LVL81:
 1200              	.L73:
 243:key_controlled_ocillators.cpp **** 
 244:key_controlled_ocillators.cpp ****     // Receive messages from UART
 245:key_controlled_ocillators.cpp ****     float amp_factor;
 1201              		.loc 6 245 5 is_stmt 1 view .LVU362
 246:key_controlled_ocillators.cpp ****     while(1)
 1202              		.loc 6 246 5 view .LVU363
 247:key_controlled_ocillators.cpp ****     {
 248:key_controlled_ocillators.cpp ****         result = receive_msg_on_uart(&uart, msg_rec);
 1203              		.loc 6 248 9 view .LVU364
 1204              		.loc 6 248 37 is_stmt 0 view .LVU365
 1205 00c4 03A9     		add	r1, sp, #12
 1206 00c6 02A8     		add	r0, sp, #8
 1207 00c8 FFF7FEFF 		bl	_Z19receive_msg_on_uartPN5daisy11UartHandlerEPc
 1208              	.LVL82:
 249:key_controlled_ocillators.cpp ****         if (result == 0)
 1209              		.loc 6 249 9 is_stmt 1 view .LVU366
 1210 00cc 0028     		cmp	r0, #0
 1211 00ce F9D1     		bne	.L73
ARM GAS  C:\Users\jpmaitre\AppData\Local\Temp\ccYI9wQo.s 			page 41


 250:key_controlled_ocillators.cpp ****         {   
 251:key_controlled_ocillators.cpp ****             result = analyze_msg_received(msg_rec, &key_index, &msg_type, &attack_time);
 1212              		.loc 6 251 13 view .LVU367
 1213              		.loc 6 251 42 is_stmt 0 view .LVU368
 1214 00d0 01AB     		add	r3, sp, #4
 1215 00d2 0DF10102 		add	r2, sp, #1
 1216 00d6 0DF10201 		add	r1, sp, #2
 1217 00da 03A8     		add	r0, sp, #12
 1218              	.LVL83:
 1219              		.loc 6 251 42 view .LVU369
 1220 00dc FFF7FEFF 		bl	_Z20analyze_msg_receivedPcPtP10e_msg_typePm
 1221              	.LVL84:
 252:key_controlled_ocillators.cpp ****             if (result == 0)
 1222              		.loc 6 252 13 is_stmt 1 view .LVU370
 1223 00e0 0446     		mov	r4, r0
 1224 00e2 0028     		cmp	r0, #0
 1225 00e4 EED1     		bne	.L73
 253:key_controlled_ocillators.cpp ****             {
 254:key_controlled_ocillators.cpp ****                 hw.PrintLine("key_index=%d, msg_type=%d, attack_time=%ld", key_index, msg_type, att
 1226              		.loc 6 254 17 view .LVU371
 1227              	.LVL85:
 1228              	.LBB220:
 1229              	.LBI220:
 126:c:\dev\daisy_seed\libdaisy\src\daisy_seed.h ****     {
 1230              		.loc 1 126 17 view .LVU372
 1231              	.LBB221:
 128:c:\dev\daisy_seed\libdaisy\src\daisy_seed.h ****     }
 1232              		.loc 1 128 23 is_stmt 0 view .LVU373
 1233 00e6 019B     		ldr	r3, [sp, #4]
 1234 00e8 9DF80120 		ldrb	r2, [sp, #1]	@ zero_extendqisi2
 1235 00ec BDF80210 		ldrh	r1, [sp, #2]
 1236 00f0 3B48     		ldr	r0, .L93+40
 1237              	.LVL86:
 128:c:\dev\daisy_seed\libdaisy\src\daisy_seed.h ****     }
 1238              		.loc 1 128 23 view .LVU374
 1239 00f2 FFF7FEFF 		bl	_ZN5daisy6LoggerILNS_17LoggerDestinationE1EE9PrintLineEPKcz
 1240              	.LVL87:
 128:c:\dev\daisy_seed\libdaisy\src\daisy_seed.h ****     }
 1241              		.loc 1 128 23 view .LVU375
 1242              	.LBE221:
 1243              	.LBE220:
 255:key_controlled_ocillators.cpp **** 
 256:key_controlled_ocillators.cpp ****                 if (msg_type == KEY_DOWN_MSG) 
 1244              		.loc 6 256 17 is_stmt 1 view .LVU376
 1245              		.loc 6 256 30 is_stmt 0 view .LVU377
 1246 00f6 9DF80130 		ldrb	r3, [sp, #1]	@ zero_extendqisi2
 1247              		.loc 6 256 17 view .LVU378
 1248 00fa 012B     		cmp	r3, #1
 1249 00fc 09D0     		beq	.L90
 257:key_controlled_ocillators.cpp ****                 {
 258:key_controlled_ocillators.cpp ****                     amp_factor = compute_amplification(attack_time);
 259:key_controlled_ocillators.cpp **** 
 260:key_controlled_ocillators.cpp ****                     hw.PrintLine("amp_factor=" FLT_FMT3, FLT_VAR3(amp_factor));
 261:key_controlled_ocillators.cpp **** 
 262:key_controlled_ocillators.cpp ****                     osc[key_index].SetAmp(amp_factor);
 263:key_controlled_ocillators.cpp ****                 } 
 264:key_controlled_ocillators.cpp ****                 else if (msg_type == KEY_UP_MSG) 
ARM GAS  C:\Users\jpmaitre\AppData\Local\Temp\ccYI9wQo.s 			page 42


 1250              		.loc 6 264 22 is_stmt 1 view .LVU379
 1251 00fe 002B     		cmp	r3, #0
 1252 0100 E0D1     		bne	.L73
 265:key_controlled_ocillators.cpp ****                 {
 266:key_controlled_ocillators.cpp ****                     osc[key_index].SetAmp(0.0f);
 1253              		.loc 6 266 21 view .LVU380
 1254              	.LVL88:
 1255              	.LBB222:
 1256              	.LBI222:
  76:c:\dev\daisy_seed\daisysp\source\synthesis\oscillator.h ****     /** Sets the waveform to be synthesized by the Process() function.
 1257              		.loc 8 76 17 view .LVU381
 1258              	.LBB223:
  76:c:\dev\daisy_seed\daisysp\source\synthesis\oscillator.h ****     /** Sets the waveform to be synthesized by the Process() function.
 1259              		.loc 8 76 41 view .LVU382
 1260              	.LBE223:
 1261              	.LBE222:
 1262              		.loc 6 266 25 is_stmt 0 view .LVU383
 1263 0102 BDF80230 		ldrh	r3, [sp, #2]
 1264              	.LBB225:
 1265              	.LBB224:
  76:c:\dev\daisy_seed\daisysp\source\synthesis\oscillator.h ****     /** Sets the waveform to be synthesized by the Process() function.
 1266              		.loc 8 76 46 view .LVU384
 1267 0106 2C21     		movs	r1, #44
 1268 0108 0022     		movs	r2, #0
 1269 010a 01FB0353 		mla	r3, r1, r3, r5
 1270 010e 5A60     		str	r2, [r3, #4]	@ float
  76:c:\dev\daisy_seed\daisysp\source\synthesis\oscillator.h ****     /** Sets the waveform to be synthesized by the Process() function.
 1271              		.loc 8 76 51 view .LVU385
 1272 0110 D8E7     		b	.L73
 1273              	.LVL89:
 1274              	.L90:
  76:c:\dev\daisy_seed\daisysp\source\synthesis\oscillator.h ****     /** Sets the waveform to be synthesized by the Process() function.
 1275              		.loc 8 76 51 view .LVU386
 1276              	.LBE224:
 1277              	.LBE225:
 258:key_controlled_ocillators.cpp **** 
 1278              		.loc 6 258 21 is_stmt 1 view .LVU387
 1279              	.LBB226:
 1280              	.LBI226:
 186:key_controlled_ocillators.cpp **** {
 1281              		.loc 6 186 7 view .LVU388
 1282              	.LBB227:
 188:key_controlled_ocillators.cpp ****     
 1283              		.loc 6 188 5 view .LVU389
 190:key_controlled_ocillators.cpp ****     
 1284              		.loc 6 190 5 view .LVU390
 190:key_controlled_ocillators.cpp ****     
 1285              		.loc 6 190 29 is_stmt 0 view .LVU391
 1286 0112 DDED016A 		vldr.32	s13, [sp, #4]	@ int
 192:key_controlled_ocillators.cpp ****     {
 1287              		.loc 6 192 5 view .LVU392
 1288 0116 F7EE005A 		vmov.f32	s11, #1.0e+0
 190:key_controlled_ocillators.cpp ****     
 1289              		.loc 6 190 29 view .LVU393
 1290 011a B8EE666A 		vcvt.f32.u32	s12, s13
 190:key_controlled_ocillators.cpp ****     
 1291              		.loc 6 190 48 view .LVU394
ARM GAS  C:\Users\jpmaitre\AppData\Local\Temp\ccYI9wQo.s 			page 43


 1292 011e 9FED264B 		vldr.64	d4, .L93
 1293 0122 9FED277B 		vldr.64	d7, .L93+8
 190:key_controlled_ocillators.cpp ****     
 1294              		.loc 6 190 29 view .LVU395
 1295 0126 B7EEC66A 		vcvt.f64.f32	d6, s12
 190:key_controlled_ocillators.cpp ****     
 1296              		.loc 6 190 48 view .LVU396
 1297 012a A6EE047B 		vfma.f64	d7, d6, d4
 190:key_controlled_ocillators.cpp ****     
 1298              		.loc 6 190 16 view .LVU397
 1299 012e B7EEC77B 		vcvt.f32.f64	s14, d7
 1300              	.LVL90:
 192:key_controlled_ocillators.cpp ****     {
 1301              		.loc 6 192 5 is_stmt 1 view .LVU398
 1302 0132 B4EEE57A 		vcmpe.f32	s14, s11
 1303 0136 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1304 013a 0FDD     		ble	.L91
 1305 013c A623     		movs	r3, #166
 1306 013e 9FED298A 		vldr.32	s16, .L93+44
 1307              	.L76:
 1308              	.LVL91:
 201:key_controlled_ocillators.cpp ****                                        
 1309              		.loc 6 201 5 view .LVU399
 203:key_controlled_ocillators.cpp **** }
 1310              		.loc 6 203 5 view .LVU400
 203:key_controlled_ocillators.cpp **** }
 1311              		.loc 6 203 5 is_stmt 0 view .LVU401
 1312              	.LBE227:
 1313              	.LBE226:
 260:key_controlled_ocillators.cpp **** 
 1314              		.loc 6 260 21 is_stmt 1 view .LVU402
 1315              	.LBB230:
 1316              	.LBB210:
 1317              	.LBB191:
  53:c:\dev\daisy_seed\daisysp\source\synthesis\oscillator.h ****         freq_      = 100.0f;
 1318              		.loc 8 53 27 is_stmt 0 view .LVU403
 1319 0142 2021     		movs	r1, #32
 1320              	.LVL92:
 1321              	.L79:
  53:c:\dev\daisy_seed\daisysp\source\synthesis\oscillator.h ****         freq_      = 100.0f;
 1322              		.loc 8 53 27 view .LVU404
 1323              	.LBE191:
 1324              	.LBE210:
 1325              	.LBE230:
 1326              	.LBB231:
 1327              	.LBI231:
 1328              		.file 9 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\std_abs.h"
   1:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** // -*- C++ -*- C library enhancements header.
   2:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** 
   3:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** // Copyright (C) 2016-2020 Free Software Foundation, Inc.
   4:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** //
   5:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** // software; you can redistribute it and/or modify it under the
   7:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** // terms of the GNU General Public License as published by the
   8:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** // Free Software Foundation; either version 3, or (at your option)
   9:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** // any later version.
  10:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** 
ARM GAS  C:\Users\jpmaitre\AppData\Local\Temp\ccYI9wQo.s 			page 44


  11:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** // This library is distributed in the hope that it will be useful,
  12:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** // GNU General Public License for more details.
  15:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** 
  16:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** // permissions described in the GCC Runtime Library Exception, version
  18:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** // 3.1, as published by the Free Software Foundation.
  19:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** 
  20:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** // You should have received a copy of the GNU General Public License and
  21:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** // <http://www.gnu.org/licenses/>.
  24:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** 
  25:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** /** @file include/bits/std_abs.h
  26:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h ****  *  This is an internal header file, included by other library headers.
  27:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h ****  *  Do not attempt to use it directly. @headername{cmath, cstdlib}
  28:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h ****  */
  29:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** 
  30:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** #ifndef _GLIBCXX_BITS_STD_ABS_H
  31:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** #define _GLIBCXX_BITS_STD_ABS_H
  32:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** 
  33:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** #pragma GCC system_header
  34:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** 
  35:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** #include <bits/c++config.h>
  36:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** 
  37:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** #define _GLIBCXX_INCLUDE_NEXT_C_HEADERS
  38:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** #include_next <stdlib.h>
  39:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** #ifdef __CORRECT_ISO_CPP_MATH_H_PROTO
  40:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** # include_next <math.h>
  41:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** #endif
  42:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** #undef _GLIBCXX_INCLUDE_NEXT_C_HEADERS
  43:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** 
  44:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** #undef abs
  45:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** 
  46:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** extern "C++"
  47:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** {
  48:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** namespace std _GLIBCXX_VISIBILITY(default)
  49:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** {
  50:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  51:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** 
  52:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h ****   using ::abs;
  53:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** 
  54:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** #ifndef __CORRECT_ISO_CPP_STDLIB_H_PROTO
  55:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h ****   inline long
  56:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h ****   abs(long __i) { return __builtin_labs(__i); }
  57:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** #endif
  58:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** 
  59:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** #ifdef _GLIBCXX_USE_LONG_LONG
  60:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h ****   inline long long
  61:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h ****   abs(long long __x) { return __builtin_llabs (__x); }
  62:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** #endif
  63:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** 
  64:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** // _GLIBCXX_RESOLVE_LIB_DEFECTS
  65:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** // 2192. Validity and return type of std::abs(0u) is unclear
  66:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** // 2294. <cstdlib> should declare abs(double)
  67:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** // 2735. std::abs(short), std::abs(signed char) and others should return int
ARM GAS  C:\Users\jpmaitre\AppData\Local\Temp\ccYI9wQo.s 			page 45


  68:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** 
  69:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
  70:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h ****   inline _GLIBCXX_CONSTEXPR double
  71:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h ****   abs(double __x)
  72:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h ****   { return __builtin_fabs(__x); }
  73:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** 
  74:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h ****   inline _GLIBCXX_CONSTEXPR float
  75:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h ****   abs(float __x)
 1329              		.loc 9 75 3 is_stmt 1 discriminator 4 view .LVU405
 1330              	.LBB232:
  76:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h ****   { return __builtin_fabsf(__x); }
 1331              		.loc 9 76 5 discriminator 4 view .LVU406
 1332              		.loc 9 76 5 is_stmt 0 discriminator 4 view .LVU407
 1333              	.LBE232:
 1334              	.LBE231:
 1335              		.loc 9 76 5 is_stmt 1 discriminator 4 view .LVU408
 1336              		.loc 9 76 5 discriminator 4 view .LVU409
 1337              	.LBB234:
 1338              	.LBI234:
 126:c:\dev\daisy_seed\libdaisy\src\daisy_seed.h ****     {
 1339              		.loc 1 126 17 discriminator 4 view .LVU410
 1340              	.LBB235:
 128:c:\dev\daisy_seed\libdaisy\src\daisy_seed.h ****     }
 1341              		.loc 1 128 23 is_stmt 0 discriminator 4 view .LVU411
 1342 0144 2246     		mov	r2, r4
 1343 0146 2848     		ldr	r0, .L93+48
 1344 0148 FFF7FEFF 		bl	_ZN5daisy6LoggerILNS_17LoggerDestinationE1EE9PrintLineEPKcz
 1345              	.LVL93:
 128:c:\dev\daisy_seed\libdaisy\src\daisy_seed.h ****     }
 1346              		.loc 1 128 23 discriminator 4 view .LVU412
 1347              	.LBE235:
 1348              	.LBE234:
 262:key_controlled_ocillators.cpp ****                 } 
 1349              		.loc 6 262 21 is_stmt 1 discriminator 4 view .LVU413
 1350              	.LBB236:
 1351              	.LBI236:
  76:c:\dev\daisy_seed\daisysp\source\synthesis\oscillator.h ****     /** Sets the waveform to be synthesized by the Process() function.
 1352              		.loc 8 76 17 discriminator 4 view .LVU414
 1353              	.LBB237:
  76:c:\dev\daisy_seed\daisysp\source\synthesis\oscillator.h ****     /** Sets the waveform to be synthesized by the Process() function.
 1354              		.loc 8 76 41 discriminator 4 view .LVU415
 1355              	.LBE237:
 1356              	.LBE236:
 262:key_controlled_ocillators.cpp ****                 } 
 1357              		.loc 6 262 25 is_stmt 0 discriminator 4 view .LVU416
 1358 014c BDF80230 		ldrh	r3, [sp, #2]
 1359              	.LBB239:
 1360              	.LBB238:
  76:c:\dev\daisy_seed\daisysp\source\synthesis\oscillator.h ****     /** Sets the waveform to be synthesized by the Process() function.
 1361              		.loc 8 76 46 discriminator 4 view .LVU417
 1362 0150 2C22     		movs	r2, #44
 1363 0152 02FB0353 		mla	r3, r2, r3, r5
 1364 0156 83ED018A 		vstr.32	s16, [r3, #4]
  76:c:\dev\daisy_seed\daisysp\source\synthesis\oscillator.h ****     /** Sets the waveform to be synthesized by the Process() function.
 1365              		.loc 8 76 51 discriminator 4 view .LVU418
 1366 015a B3E7     		b	.L73
 1367              	.LVL94:
ARM GAS  C:\Users\jpmaitre\AppData\Local\Temp\ccYI9wQo.s 			page 46


 1368              	.L91:
  76:c:\dev\daisy_seed\daisysp\source\synthesis\oscillator.h ****     /** Sets the waveform to be synthesized by the Process() function.
 1369              		.loc 8 76 51 discriminator 4 view .LVU419
 1370              	.LBE238:
 1371              	.LBE239:
 1372              	.LBB240:
 1373              	.LBB228:
 196:key_controlled_ocillators.cpp ****     {
 1374              		.loc 6 196 10 is_stmt 1 view .LVU420
 1375 015c DFED237A 		vldr.32	s15, .L93+52
 1376 0160 B4EEE77A 		vcmpe.f32	s14, s15
 1377 0164 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1378 0168 03D5     		bpl	.L92
 1379 016a 1023     		movs	r3, #16
 1380 016c 9FED208A 		vldr.32	s16, .L93+56
 1381 0170 E7E7     		b	.L76
 1382              	.L92:
 201:key_controlled_ocillators.cpp ****                                        
 1383              		.loc 6 201 5 view .LVU421
 201:key_controlled_ocillators.cpp ****                                        
 1384              		.loc 6 201 16 is_stmt 0 view .LVU422
 1385 0172 F1EE087A 		vmov.f32	s15, #6.0e+0
 1386              	.LBE228:
 1387              	.LBE240:
 260:key_controlled_ocillators.cpp **** 
 1388              		.loc 6 260 58 view .LVU423
 1389 0176 9FED146B 		vldr.64	d6, .L93+16
 1390              	.LBB241:
 1391              	.LBB229:
 201:key_controlled_ocillators.cpp ****                                        
 1392              		.loc 6 201 16 view .LVU424
 1393 017a 87EE278A 		vdiv.f32	s16, s14, s15
 1394              	.LVL95:
 203:key_controlled_ocillators.cpp **** }
 1395              		.loc 6 203 5 is_stmt 1 view .LVU425
 203:key_controlled_ocillators.cpp **** }
 1396              		.loc 6 203 5 is_stmt 0 view .LVU426
 1397              	.LBE229:
 1398              	.LBE241:
 260:key_controlled_ocillators.cpp **** 
 1399              		.loc 6 260 21 is_stmt 1 view .LVU427
 1400              	.LBB242:
 1401              	.LBB233:
 1402              		.loc 9 76 31 is_stmt 0 view .LVU428
 1403 017e F0EEC87A 		vabs.f32	s15, s16
 1404              	.LBE233:
 1405              	.LBE242:
 260:key_controlled_ocillators.cpp **** 
 1406              		.loc 6 260 33 view .LVU429
 1407 0182 B5EEC08A 		vcmpe.f32	s16, #0
 1408 0186 BDEEE77A 		vcvt.s32.f32	s14, s15
 1409 018a F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1410 018e 17EE104A 		vmov	r4, s14	@ int
 1411              	.LVL96:
 260:key_controlled_ocillators.cpp **** 
 1412              		.loc 6 260 58 view .LVU430
 1413 0192 B8EEC77A 		vcvt.f32.s32	s14, s14
ARM GAS  C:\Users\jpmaitre\AppData\Local\Temp\ccYI9wQo.s 			page 47


 260:key_controlled_ocillators.cpp **** 
 1414              		.loc 6 260 33 view .LVU431
 1415 0196 4CBF     		ite	mi
 1416 0198 2D21     		movmi	r1, #45
 1417 019a 2021     		movpl	r1, #32
 260:key_controlled_ocillators.cpp **** 
 1418              		.loc 6 260 58 view .LVU432
 1419 019c 37EEC77A 		vsub.f32	s14, s15, s14
 1420 01a0 B7EEC77A 		vcvt.f64.f32	d7, s14
 1421 01a4 27EE067B 		vmul.f64	d7, d7, d6
 260:key_controlled_ocillators.cpp **** 
 1422              		.loc 6 260 33 view .LVU433
 1423 01a8 FDEEC77B 		vcvt.s32.f64	s15, d7
 1424 01ac 17EE903A 		vmov	r3, s15	@ int
 1425 01b0 C8E7     		b	.L79
 1426              	.L94:
 1427 01b2 00BFAFF3 		.align	3
 1427      0080
 1428              	.L93:
 1429 01b8 4FCAA486 		.word	-2036020657
 1430 01bc 36001BBF 		.word	-1088749514
 1431 01c0 7B14AE47 		.word	1202590843
 1432 01c4 E17AF03F 		.word	1072724705
 1433 01c8 00000000 		.word	0
 1434 01cc 00408F40 		.word	1083129856
 1435 01d0 00000000 		.word	.LANCHOR2
 1436 01d4 00000000 		.word	.LANCHOR0
 1437 01d8 0000C842 		.word	1120403456
 1438 01dc 00000000 		.word	_ZL13AudioCallbackPKfPfj
 1439 01e0 00000000 		.word	.LC7
 1440 01e4 ABAA2A3E 		.word	1042983595
 1441 01e8 2C000000 		.word	.LC8
 1442 01ec CDCCCC3D 		.word	1036831949
 1443 01f0 8988883C 		.word	1015580809
 1444              		.cfi_endproc
 1445              	.LFE4687:
 1447              		.section	.text.startup._GLOBAL__sub_I__Z15initialize_uartPN5daisy11UartHandlerE,"ax",%progbits
 1448              		.align	1
 1449              		.p2align 2,,3
 1450              		.syntax unified
 1451              		.thumb
 1452              		.thumb_func
 1453              		.fpu fpv5-d16
 1455              	_GLOBAL__sub_I__Z15initialize_uartPN5daisy11UartHandlerE:
 1456              	.LFB5255:
 267:key_controlled_ocillators.cpp ****                 }
 268:key_controlled_ocillators.cpp ****             }
 269:key_controlled_ocillators.cpp ****         }
 270:key_controlled_ocillators.cpp ****     }
 271:key_controlled_ocillators.cpp **** }
 1457              		.loc 6 271 1 is_stmt 1 view -0
 1458              		.cfi_startproc
 1459              		@ args = 0, pretend = 0, frame = 0
 1460              		@ frame_needed = 0, uses_anonymous_args = 0
 1461              	.LBB265:
 1462              	.LBI265:
 1463              		.loc 6 271 1 view .LVU435
ARM GAS  C:\Users\jpmaitre\AppData\Local\Temp\ccYI9wQo.s 			page 48


 1464              	.LVL97:
 1465              	.LBB266:
 1466              	.LBB267:
 1467              	.LBI267:
  21:c:\dev\daisy_seed\libdaisy\src\daisy_seed.h ****     ~DaisySeed() {}
 1468              		.loc 1 21 5 view .LVU436
 1469              	.LBB268:
 1470              	.LBB269:
 1471              	.LBI269:
 1472              		.file 10 "c:\\dev\\daisy_seed\\libdaisy\\src\\per/qspi.h"
   1:c:\dev\daisy_seed\libdaisy\src\per\qspi.h **** #ifndef DSY_QSPI
   2:c:\dev\daisy_seed\libdaisy\src\per\qspi.h **** #define DSY_QSPI /**< Macro */
   3:c:\dev\daisy_seed\libdaisy\src\per\qspi.h **** 
   4:c:\dev\daisy_seed\libdaisy\src\per\qspi.h **** #ifndef UNIT_TEST // for unit tests, a dummy implementation
   5:c:\dev\daisy_seed\libdaisy\src\per\qspi.h **** 
   6:c:\dev\daisy_seed\libdaisy\src\per\qspi.h **** #include <cstdint>
   7:c:\dev\daisy_seed\libdaisy\src\per\qspi.h **** #include "daisy_core.h" // Added for dsy_gpio_pin typedef
   8:c:\dev\daisy_seed\libdaisy\src\per\qspi.h **** 
   9:c:\dev\daisy_seed\libdaisy\src\per\qspi.h **** #define DSY_QSPI_TEXT       \
  10:c:\dev\daisy_seed\libdaisy\src\per\qspi.h ****     __attribute__((section( \
  11:c:\dev\daisy_seed\libdaisy\src\per\qspi.h ****         ".qspiflash_text"))) /**< used for reading memory in memory_mapped mode. */
  12:c:\dev\daisy_seed\libdaisy\src\per\qspi.h **** #define DSY_QSPI_DATA       \
  13:c:\dev\daisy_seed\libdaisy\src\per\qspi.h ****     __attribute__((section( \
  14:c:\dev\daisy_seed\libdaisy\src\per\qspi.h ****         ".qspiflash_data"))) /**< used for reading memory in memory_mapped mode. */
  15:c:\dev\daisy_seed\libdaisy\src\per\qspi.h **** #define DSY_QSPI_BSS        \
  16:c:\dev\daisy_seed\libdaisy\src\per\qspi.h ****     __attribute__((section( \
  17:c:\dev\daisy_seed\libdaisy\src\per\qspi.h ****         ".qspiflash_bss"))) /**< used for reading memory in memory_mapped mode. */
  18:c:\dev\daisy_seed\libdaisy\src\per\qspi.h **** 
  19:c:\dev\daisy_seed\libdaisy\src\per\qspi.h **** namespace daisy
  20:c:\dev\daisy_seed\libdaisy\src\per\qspi.h **** {
  21:c:\dev\daisy_seed\libdaisy\src\per\qspi.h **** /** @addtogroup serial
  22:c:\dev\daisy_seed\libdaisy\src\per\qspi.h **** @{
  23:c:\dev\daisy_seed\libdaisy\src\per\qspi.h **** */
  24:c:\dev\daisy_seed\libdaisy\src\per\qspi.h **** 
  25:c:\dev\daisy_seed\libdaisy\src\per\qspi.h **** /** 
  26:c:\dev\daisy_seed\libdaisy\src\per\qspi.h ****  Driver for QSPI peripheral to interface with external flash memory. \n 
  27:c:\dev\daisy_seed\libdaisy\src\per\qspi.h ****     Currently supported QSPI Devices: \n 
  28:c:\dev\daisy_seed\libdaisy\src\per\qspi.h ****     * IS25LP080D
  29:c:\dev\daisy_seed\libdaisy\src\per\qspi.h **** */
  30:c:\dev\daisy_seed\libdaisy\src\per\qspi.h **** class QSPIHandle
  31:c:\dev\daisy_seed\libdaisy\src\per\qspi.h **** {
  32:c:\dev\daisy_seed\libdaisy\src\per\qspi.h ****   public:
  33:c:\dev\daisy_seed\libdaisy\src\per\qspi.h ****     enum Result
  34:c:\dev\daisy_seed\libdaisy\src\per\qspi.h ****     {
  35:c:\dev\daisy_seed\libdaisy\src\per\qspi.h ****         OK = 0,
  36:c:\dev\daisy_seed\libdaisy\src\per\qspi.h ****         ERR
  37:c:\dev\daisy_seed\libdaisy\src\per\qspi.h ****     };
  38:c:\dev\daisy_seed\libdaisy\src\per\qspi.h **** 
  39:c:\dev\daisy_seed\libdaisy\src\per\qspi.h ****     /** Indicates the current status of the module. 
  40:c:\dev\daisy_seed\libdaisy\src\per\qspi.h ****          *  Warnings are indicated by a leading W.
  41:c:\dev\daisy_seed\libdaisy\src\per\qspi.h ****          *  Errors are indicated by a leading E and cause an immediate exit.
  42:c:\dev\daisy_seed\libdaisy\src\per\qspi.h ****          * 
  43:c:\dev\daisy_seed\libdaisy\src\per\qspi.h ****          *  \param GOOD - No errors have been reported.
  44:c:\dev\daisy_seed\libdaisy\src\per\qspi.h ****          *  \param E_HAL_ERROR - HAL code did not return HAL_OK.
  45:c:\dev\daisy_seed\libdaisy\src\per\qspi.h ****          *  \param E_SWITCHING_MODES - An error was encountered while switching QSPI peripheral mod
  46:c:\dev\daisy_seed\libdaisy\src\per\qspi.h ****          *  \param E_INVALID_MODE - QSPI should not be written to while the program is executing fr
  47:c:\dev\daisy_seed\libdaisy\src\per\qspi.h ****          */
ARM GAS  C:\Users\jpmaitre\AppData\Local\Temp\ccYI9wQo.s 			page 49


  48:c:\dev\daisy_seed\libdaisy\src\per\qspi.h ****     enum Status
  49:c:\dev\daisy_seed\libdaisy\src\per\qspi.h ****     {
  50:c:\dev\daisy_seed\libdaisy\src\per\qspi.h ****         GOOD = 0,
  51:c:\dev\daisy_seed\libdaisy\src\per\qspi.h ****         E_HAL_ERROR,
  52:c:\dev\daisy_seed\libdaisy\src\per\qspi.h ****         E_SWITCHING_MODES,
  53:c:\dev\daisy_seed\libdaisy\src\per\qspi.h ****         E_INVALID_MODE,
  54:c:\dev\daisy_seed\libdaisy\src\per\qspi.h ****     };
  55:c:\dev\daisy_seed\libdaisy\src\per\qspi.h **** 
  56:c:\dev\daisy_seed\libdaisy\src\per\qspi.h ****     /** Configuration structure for interfacing with QSPI Driver */
  57:c:\dev\daisy_seed\libdaisy\src\per\qspi.h ****     struct Config
  58:c:\dev\daisy_seed\libdaisy\src\per\qspi.h ****     {
  59:c:\dev\daisy_seed\libdaisy\src\per\qspi.h ****         /** Flash Devices supported. (Both of these are more-or-less the same, just different sizes
  60:c:\dev\daisy_seed\libdaisy\src\per\qspi.h ****         enum Device
  61:c:\dev\daisy_seed\libdaisy\src\per\qspi.h ****         {
  62:c:\dev\daisy_seed\libdaisy\src\per\qspi.h ****             IS25LP080D,  /**< & */
  63:c:\dev\daisy_seed\libdaisy\src\per\qspi.h ****             IS25LP064A,  /**< & */
  64:c:\dev\daisy_seed\libdaisy\src\per\qspi.h ****             DEVICE_LAST, /**< & */
  65:c:\dev\daisy_seed\libdaisy\src\per\qspi.h ****         };
  66:c:\dev\daisy_seed\libdaisy\src\per\qspi.h **** 
  67:c:\dev\daisy_seed\libdaisy\src\per\qspi.h ****         /** 
  68:c:\dev\daisy_seed\libdaisy\src\per\qspi.h ****         Modes of operation.
  69:c:\dev\daisy_seed\libdaisy\src\per\qspi.h ****         Memory Mapped mode: QSPI configured so that the QSPI can be
  70:c:\dev\daisy_seed\libdaisy\src\per\qspi.h ****         read from starting address 0x90000000. Writing is not
  71:c:\dev\daisy_seed\libdaisy\src\per\qspi.h ****         possible in this mode. \n 
  72:c:\dev\daisy_seed\libdaisy\src\per\qspi.h ****         Indirect Polling mode: Device driver enabled. 
  73:c:\dev\daisy_seed\libdaisy\src\per\qspi.h ****         */
  74:c:\dev\daisy_seed\libdaisy\src\per\qspi.h ****         enum Mode
  75:c:\dev\daisy_seed\libdaisy\src\per\qspi.h ****         {
  76:c:\dev\daisy_seed\libdaisy\src\per\qspi.h ****             MEMORY_MAPPED,    /**< & */
  77:c:\dev\daisy_seed\libdaisy\src\per\qspi.h ****             INDIRECT_POLLING, /**< & */
  78:c:\dev\daisy_seed\libdaisy\src\per\qspi.h ****             MODE_LAST,
  79:c:\dev\daisy_seed\libdaisy\src\per\qspi.h ****         };
  80:c:\dev\daisy_seed\libdaisy\src\per\qspi.h **** 
  81:c:\dev\daisy_seed\libdaisy\src\per\qspi.h ****         //SCK,  CE# (active low)
  82:c:\dev\daisy_seed\libdaisy\src\per\qspi.h ****         struct
  83:c:\dev\daisy_seed\libdaisy\src\per\qspi.h ****         {
  84:c:\dev\daisy_seed\libdaisy\src\per\qspi.h ****             dsy_gpio_pin io0; /**< & */
  85:c:\dev\daisy_seed\libdaisy\src\per\qspi.h ****             dsy_gpio_pin io1; /**< & */
  86:c:\dev\daisy_seed\libdaisy\src\per\qspi.h ****             dsy_gpio_pin io2; /**< & */
  87:c:\dev\daisy_seed\libdaisy\src\per\qspi.h ****             dsy_gpio_pin io3; /**< & */
  88:c:\dev\daisy_seed\libdaisy\src\per\qspi.h ****             dsy_gpio_pin clk; /**< & */
  89:c:\dev\daisy_seed\libdaisy\src\per\qspi.h ****             dsy_gpio_pin ncs; /**< & */
  90:c:\dev\daisy_seed\libdaisy\src\per\qspi.h ****         } pin_config;
  91:c:\dev\daisy_seed\libdaisy\src\per\qspi.h **** 
  92:c:\dev\daisy_seed\libdaisy\src\per\qspi.h ****         Device device;
  93:c:\dev\daisy_seed\libdaisy\src\per\qspi.h ****         Mode   mode;
  94:c:\dev\daisy_seed\libdaisy\src\per\qspi.h ****     };
  95:c:\dev\daisy_seed\libdaisy\src\per\qspi.h **** 
  96:c:\dev\daisy_seed\libdaisy\src\per\qspi.h ****     /** 
  97:c:\dev\daisy_seed\libdaisy\src\per\qspi.h ****         Initializes QSPI peripheral, and Resets, and prepares memory for access.
  98:c:\dev\daisy_seed\libdaisy\src\per\qspi.h ****         \param config should be populated with the mode, device and pin_config before calling this 
  99:c:\dev\daisy_seed\libdaisy\src\per\qspi.h ****         \return Result::OK or Result::ERR
 100:c:\dev\daisy_seed\libdaisy\src\per\qspi.h ****         */
 101:c:\dev\daisy_seed\libdaisy\src\per\qspi.h ****     Result Init(const Config& config);
 102:c:\dev\daisy_seed\libdaisy\src\per\qspi.h **** 
 103:c:\dev\daisy_seed\libdaisy\src\per\qspi.h ****     /** Returns the current config. */
 104:c:\dev\daisy_seed\libdaisy\src\per\qspi.h ****     const Config& GetConfig() const;
ARM GAS  C:\Users\jpmaitre\AppData\Local\Temp\ccYI9wQo.s 			page 50


 105:c:\dev\daisy_seed\libdaisy\src\per\qspi.h **** 
 106:c:\dev\daisy_seed\libdaisy\src\per\qspi.h ****     // Couldn't this just be called before anything else in init? That
 107:c:\dev\daisy_seed\libdaisy\src\per\qspi.h ****     // would make manually calling it unnecessary.
 108:c:\dev\daisy_seed\libdaisy\src\per\qspi.h ****     /** 
 109:c:\dev\daisy_seed\libdaisy\src\per\qspi.h ****         Deinitializes the peripheral
 110:c:\dev\daisy_seed\libdaisy\src\per\qspi.h ****         This should be called before reinitializing QSPI in a different mode.
 111:c:\dev\daisy_seed\libdaisy\src\per\qspi.h ****         \return Result::OK or Result::ERR
 112:c:\dev\daisy_seed\libdaisy\src\per\qspi.h ****         */
 113:c:\dev\daisy_seed\libdaisy\src\per\qspi.h ****     Result DeInit();
 114:c:\dev\daisy_seed\libdaisy\src\per\qspi.h **** 
 115:c:\dev\daisy_seed\libdaisy\src\per\qspi.h ****     /** 
 116:c:\dev\daisy_seed\libdaisy\src\per\qspi.h ****         Writes a single page to to the specified address on the QSPI chip.
 117:c:\dev\daisy_seed\libdaisy\src\per\qspi.h ****         For IS25LP*, page size is 256 bytes.
 118:c:\dev\daisy_seed\libdaisy\src\per\qspi.h ****         \param address Address to write to
 119:c:\dev\daisy_seed\libdaisy\src\per\qspi.h ****         \param size Buffer size
 120:c:\dev\daisy_seed\libdaisy\src\per\qspi.h ****         \param buffer Buffer to write
 121:c:\dev\daisy_seed\libdaisy\src\per\qspi.h ****         \return Result::OK or Result::ERR
 122:c:\dev\daisy_seed\libdaisy\src\per\qspi.h ****         */
 123:c:\dev\daisy_seed\libdaisy\src\per\qspi.h ****     Result WritePage(uint32_t address, uint32_t size, uint8_t* buffer);
 124:c:\dev\daisy_seed\libdaisy\src\per\qspi.h **** 
 125:c:\dev\daisy_seed\libdaisy\src\per\qspi.h ****     /** 
 126:c:\dev\daisy_seed\libdaisy\src\per\qspi.h ****         Writes data in buffer to to the QSPI. Starting at address to address+size 
 127:c:\dev\daisy_seed\libdaisy\src\per\qspi.h ****         \param address Address to write to
 128:c:\dev\daisy_seed\libdaisy\src\per\qspi.h ****         \param size Buffer size
 129:c:\dev\daisy_seed\libdaisy\src\per\qspi.h ****         \param buffer Buffer to write
 130:c:\dev\daisy_seed\libdaisy\src\per\qspi.h ****         \return Result::OK or Result::ERR
 131:c:\dev\daisy_seed\libdaisy\src\per\qspi.h ****         */
 132:c:\dev\daisy_seed\libdaisy\src\per\qspi.h ****     Result Write(uint32_t address, uint32_t size, uint8_t* buffer);
 133:c:\dev\daisy_seed\libdaisy\src\per\qspi.h **** 
 134:c:\dev\daisy_seed\libdaisy\src\per\qspi.h ****     /** 
 135:c:\dev\daisy_seed\libdaisy\src\per\qspi.h ****         Erases the area specified on the chip.
 136:c:\dev\daisy_seed\libdaisy\src\per\qspi.h ****         Erasures will happen by 4K, 32K or 64K increments.
 137:c:\dev\daisy_seed\libdaisy\src\per\qspi.h ****         Smallest erase possible is 4kB at a time. (on IS25LP*)
 138:c:\dev\daisy_seed\libdaisy\src\per\qspi.h ****         \param start_addr Address to begin erasing from
 139:c:\dev\daisy_seed\libdaisy\src\per\qspi.h ****         \param end_addr  Address to stop erasing at
 140:c:\dev\daisy_seed\libdaisy\src\per\qspi.h ****         \return Result::OK or Result::ERR
 141:c:\dev\daisy_seed\libdaisy\src\per\qspi.h ****         */
 142:c:\dev\daisy_seed\libdaisy\src\per\qspi.h ****     Result Erase(uint32_t start_addr, uint32_t end_addr);
 143:c:\dev\daisy_seed\libdaisy\src\per\qspi.h **** 
 144:c:\dev\daisy_seed\libdaisy\src\per\qspi.h ****     /**  
 145:c:\dev\daisy_seed\libdaisy\src\per\qspi.h ****          Erases a single sector of the chip.  
 146:c:\dev\daisy_seed\libdaisy\src\per\qspi.h ****         TODO: Document the size of this function. 
 147:c:\dev\daisy_seed\libdaisy\src\per\qspi.h ****         \param address Address of sector to erase
 148:c:\dev\daisy_seed\libdaisy\src\per\qspi.h ****         \return Result::OK or Result::ERR
 149:c:\dev\daisy_seed\libdaisy\src\per\qspi.h ****         */
 150:c:\dev\daisy_seed\libdaisy\src\per\qspi.h ****     Result EraseSector(uint32_t address);
 151:c:\dev\daisy_seed\libdaisy\src\per\qspi.h **** 
 152:c:\dev\daisy_seed\libdaisy\src\per\qspi.h ****     /** Returns the current class status. Useful for debugging.
 153:c:\dev\daisy_seed\libdaisy\src\per\qspi.h ****      *  \returns Status
 154:c:\dev\daisy_seed\libdaisy\src\per\qspi.h ****      */
 155:c:\dev\daisy_seed\libdaisy\src\per\qspi.h ****     Status GetStatus();
 156:c:\dev\daisy_seed\libdaisy\src\per\qspi.h **** 
 157:c:\dev\daisy_seed\libdaisy\src\per\qspi.h ****     /** Returns a pointer to the actual memory used 
 158:c:\dev\daisy_seed\libdaisy\src\per\qspi.h ****      *  The memory at this address is read-only
 159:c:\dev\daisy_seed\libdaisy\src\per\qspi.h ****      *  to write to it use the Write function.
 160:c:\dev\daisy_seed\libdaisy\src\per\qspi.h ****      * 
 161:c:\dev\daisy_seed\libdaisy\src\per\qspi.h ****      *  \param offset returns the pointer starting this 
ARM GAS  C:\Users\jpmaitre\AppData\Local\Temp\ccYI9wQo.s 			page 51


 162:c:\dev\daisy_seed\libdaisy\src\per\qspi.h ****      *                many bytes into the memory
 163:c:\dev\daisy_seed\libdaisy\src\per\qspi.h ****     */
 164:c:\dev\daisy_seed\libdaisy\src\per\qspi.h ****     void* GetData(uint32_t offset = 0);
 165:c:\dev\daisy_seed\libdaisy\src\per\qspi.h **** 
 166:c:\dev\daisy_seed\libdaisy\src\per\qspi.h ****     QSPIHandle() : pimpl_(nullptr) {}
 1473              		.loc 10 166 5 view .LVU437
 1474              	.LBE269:
 1475              	.LBE268:
 1476              	.LBE267:
 1477              	.LBE266:
 1478              	.LBE265:
 1479              		.loc 6 271 1 is_stmt 0 view .LVU438
 1480 0000 10B5     		push	{r4, lr}
 1481              		.cfi_def_cfa_offset 8
 1482              		.cfi_offset 4, -8
 1483              		.cfi_offset 14, -4
 1484              	.LBB294:
 1485              	.LBB292:
 1486              	.LBB290:
 1487              	.LBB288:
 1488              	.LBB274:
 1489              	.LBB270:
 1490              	.LBB271:
 1491              		.loc 10 166 34 view .LVU439
 1492 0002 0848     		ldr	r0, .L97
 1493 0004 0024     		movs	r4, #0
 1494              	.LBE271:
 1495              	.LBE270:
 1496              	.LBE274:
 1497              	.LBE288:
 1498              	.LBE290:
  15:key_controlled_ocillators.cpp **** static Oscillator osc[NB_OSCILLATORS];
 1499              		.loc 6 15 19 view .LVU440
 1500 0006 084A     		ldr	r2, .L97+4
 1501 0008 0849     		ldr	r1, .L97+8
 1502              	.LBB291:
 1503              	.LBB289:
 1504              	.LBB275:
 1505              	.LBB273:
 1506              	.LBB272:
 1507              		.loc 10 166 34 view .LVU441
 1508 000a 0460     		str	r4, [r0]
 1509              	.LVL98:
 1510              		.loc 10 166 34 view .LVU442
 1511              	.LBE272:
 1512              	.LBE273:
 1513              	.LBE275:
 1514              	.LBB276:
 1515              	.LBI276:
  95:c:\dev\daisy_seed\libdaisy\src\hid\audio.h ****     ~AudioHandle() {}
 1516              		.loc 5 95 5 is_stmt 1 view .LVU443
 1517              	.LBB277:
 1518              	.LBB278:
  95:c:\dev\daisy_seed\libdaisy\src\hid\audio.h ****     ~AudioHandle() {}
 1519              		.loc 5 95 35 is_stmt 0 view .LVU444
 1520 000c 4461     		str	r4, [r0, #20]
 1521              	.LVL99:
ARM GAS  C:\Users\jpmaitre\AppData\Local\Temp\ccYI9wQo.s 			page 52


  95:c:\dev\daisy_seed\libdaisy\src\hid\audio.h ****     ~AudioHandle() {}
 1522              		.loc 5 95 35 view .LVU445
 1523              	.LBE278:
 1524              	.LBE277:
 1525              	.LBE276:
 1526              	.LBB279:
 1527              	.LBI279:
 109:c:\dev\daisy_seed\libdaisy\src\per\adc.h ****     ~AdcHandle() {}
 1528              		.loc 4 109 5 is_stmt 1 view .LVU446
 109:c:\dev\daisy_seed\libdaisy\src\per\adc.h ****     ~AdcHandle() {}
 1529              		.loc 4 109 5 is_stmt 0 view .LVU447
 1530              	.LBE279:
 1531              	.LBB280:
 1532              	.LBI280:
 1533              		.file 11 "c:\\dev\\daisy_seed\\libdaisy\\src\\per/dac.h"
   1:c:\dev\daisy_seed\libdaisy\src\per\dac.h **** #pragma once
   2:c:\dev\daisy_seed\libdaisy\src\per\dac.h **** #ifndef DSY_DAC_H
   3:c:\dev\daisy_seed\libdaisy\src\per\dac.h **** #define DSY_DAC_H
   4:c:\dev\daisy_seed\libdaisy\src\per\dac.h **** 
   5:c:\dev\daisy_seed\libdaisy\src\per\dac.h **** #include "daisy_core.h"
   6:c:\dev\daisy_seed\libdaisy\src\per\dac.h **** 
   7:c:\dev\daisy_seed\libdaisy\src\per\dac.h **** namespace daisy
   8:c:\dev\daisy_seed\libdaisy\src\per\dac.h **** {
   9:c:\dev\daisy_seed\libdaisy\src\per\dac.h **** /** @brief DAC handle for Built-in DAC Peripheral 
  10:c:\dev\daisy_seed\libdaisy\src\per\dac.h ****  *  @ingroup per_analog
  11:c:\dev\daisy_seed\libdaisy\src\per\dac.h ****  ** 
  12:c:\dev\daisy_seed\libdaisy\src\per\dac.h ****  ** For now only Normal Mode is supported,
  13:c:\dev\daisy_seed\libdaisy\src\per\dac.h ****  ** Sample and hold mode provides reduced power consumption, but requires a bit more setup.
  14:c:\dev\daisy_seed\libdaisy\src\per\dac.h ****  **
  15:c:\dev\daisy_seed\libdaisy\src\per\dac.h ****  ** For now connecting the DAC through other internal peripherals is also not supported.
  16:c:\dev\daisy_seed\libdaisy\src\per\dac.h ****  **
  17:c:\dev\daisy_seed\libdaisy\src\per\dac.h ****  ** Since the DAC channels have dedicated pins we don't need to pass in a pin config like with
  18:c:\dev\daisy_seed\libdaisy\src\per\dac.h ****  ** other modules. However, it is still important to not try to use the DAC pins for anything else.
  19:c:\dev\daisy_seed\libdaisy\src\per\dac.h ****  ** DAC Channel 1 is on PA4, and DAC Channel 2 is on PA5
  20:c:\dev\daisy_seed\libdaisy\src\per\dac.h ****  ***/
  21:c:\dev\daisy_seed\libdaisy\src\per\dac.h **** class DacHandle
  22:c:\dev\daisy_seed\libdaisy\src\per\dac.h **** {
  23:c:\dev\daisy_seed\libdaisy\src\per\dac.h ****   public:
  24:c:\dev\daisy_seed\libdaisy\src\per\dac.h ****     /** Return Values for the DacHandle class */
  25:c:\dev\daisy_seed\libdaisy\src\per\dac.h ****     enum class Result
  26:c:\dev\daisy_seed\libdaisy\src\per\dac.h ****     {
  27:c:\dev\daisy_seed\libdaisy\src\per\dac.h ****         OK,
  28:c:\dev\daisy_seed\libdaisy\src\per\dac.h ****         ERR,
  29:c:\dev\daisy_seed\libdaisy\src\per\dac.h ****     };
  30:c:\dev\daisy_seed\libdaisy\src\per\dac.h **** 
  31:c:\dev\daisy_seed\libdaisy\src\per\dac.h ****     /** Selects which channel(s) will be configured for use. */
  32:c:\dev\daisy_seed\libdaisy\src\per\dac.h ****     enum class Channel
  33:c:\dev\daisy_seed\libdaisy\src\per\dac.h ****     {
  34:c:\dev\daisy_seed\libdaisy\src\per\dac.h ****         ONE,
  35:c:\dev\daisy_seed\libdaisy\src\per\dac.h ****         TWO,
  36:c:\dev\daisy_seed\libdaisy\src\per\dac.h ****         BOTH,
  37:c:\dev\daisy_seed\libdaisy\src\per\dac.h ****     };
  38:c:\dev\daisy_seed\libdaisy\src\per\dac.h **** 
  39:c:\dev\daisy_seed\libdaisy\src\per\dac.h ****     /** Sets the Mode for the DAC channels.
  40:c:\dev\daisy_seed\libdaisy\src\per\dac.h ****      **
  41:c:\dev\daisy_seed\libdaisy\src\per\dac.h ****      ** Polling mode uses the blocking mode to transmit a single value at a time.
  42:c:\dev\daisy_seed\libdaisy\src\per\dac.h ****      **
ARM GAS  C:\Users\jpmaitre\AppData\Local\Temp\ccYI9wQo.s 			page 53


  43:c:\dev\daisy_seed\libdaisy\src\per\dac.h ****      ** DMA mode uses a buffer, and periodically transmits it triggering a 
  44:c:\dev\daisy_seed\libdaisy\src\per\dac.h ****      ** callback to fill the buffer when it is ready for more samples.
  45:c:\dev\daisy_seed\libdaisy\src\per\dac.h ****      ***/
  46:c:\dev\daisy_seed\libdaisy\src\per\dac.h ****     enum class Mode
  47:c:\dev\daisy_seed\libdaisy\src\per\dac.h ****     {
  48:c:\dev\daisy_seed\libdaisy\src\per\dac.h ****         POLLING,
  49:c:\dev\daisy_seed\libdaisy\src\per\dac.h ****         DMA,
  50:c:\dev\daisy_seed\libdaisy\src\per\dac.h ****     };
  51:c:\dev\daisy_seed\libdaisy\src\per\dac.h **** 
  52:c:\dev\daisy_seed\libdaisy\src\per\dac.h ****     /** Sets the number of bits per sample transmitted out of the DAC.
  53:c:\dev\daisy_seed\libdaisy\src\per\dac.h ****      ** The output range will be: 0V - VDDA
  54:c:\dev\daisy_seed\libdaisy\src\per\dac.h ****      ** The resolution will be roughly: bitdepth / (VDDA - 0V) 
  55:c:\dev\daisy_seed\libdaisy\src\per\dac.h ****      ***/
  56:c:\dev\daisy_seed\libdaisy\src\per\dac.h ****     enum class BitDepth
  57:c:\dev\daisy_seed\libdaisy\src\per\dac.h ****     {
  58:c:\dev\daisy_seed\libdaisy\src\per\dac.h ****         BITS_8,
  59:c:\dev\daisy_seed\libdaisy\src\per\dac.h ****         BITS_12
  60:c:\dev\daisy_seed\libdaisy\src\per\dac.h ****     };
  61:c:\dev\daisy_seed\libdaisy\src\per\dac.h **** 
  62:c:\dev\daisy_seed\libdaisy\src\per\dac.h ****     /** Sets whether the DAC output is buffered for higher drive ability. */
  63:c:\dev\daisy_seed\libdaisy\src\per\dac.h ****     enum class BufferState
  64:c:\dev\daisy_seed\libdaisy\src\per\dac.h ****     {
  65:c:\dev\daisy_seed\libdaisy\src\per\dac.h ****         ENABLED,
  66:c:\dev\daisy_seed\libdaisy\src\per\dac.h ****         DISABLED,
  67:c:\dev\daisy_seed\libdaisy\src\per\dac.h ****     };
  68:c:\dev\daisy_seed\libdaisy\src\per\dac.h **** 
  69:c:\dev\daisy_seed\libdaisy\src\per\dac.h ****     /** Configuration structure for initializing the DAC structure. */
  70:c:\dev\daisy_seed\libdaisy\src\per\dac.h ****     struct Config
  71:c:\dev\daisy_seed\libdaisy\src\per\dac.h ****     {
  72:c:\dev\daisy_seed\libdaisy\src\per\dac.h ****         /** Target Samplerate in Hz used to configure the internal 
  73:c:\dev\daisy_seed\libdaisy\src\per\dac.h ****          ** timebase for DMA mode. Does nothing in POLLING mode.
  74:c:\dev\daisy_seed\libdaisy\src\per\dac.h ****          ** If the value is 0 at Init time this will default to 48000Hz 
  75:c:\dev\daisy_seed\libdaisy\src\per\dac.h ****          ** otherwise the driver will attempt meet the target.*/
  76:c:\dev\daisy_seed\libdaisy\src\per\dac.h ****         uint32_t target_samplerate;
  77:c:\dev\daisy_seed\libdaisy\src\per\dac.h **** 
  78:c:\dev\daisy_seed\libdaisy\src\per\dac.h ****         Channel     chn;
  79:c:\dev\daisy_seed\libdaisy\src\per\dac.h ****         Mode        mode;
  80:c:\dev\daisy_seed\libdaisy\src\per\dac.h ****         BitDepth    bitdepth;
  81:c:\dev\daisy_seed\libdaisy\src\per\dac.h ****         BufferState buff_state;
  82:c:\dev\daisy_seed\libdaisy\src\per\dac.h ****     };
  83:c:\dev\daisy_seed\libdaisy\src\per\dac.h **** 
  84:c:\dev\daisy_seed\libdaisy\src\per\dac.h ****     DacHandle() : pimpl_(nullptr) {}
 1534              		.loc 11 84 5 is_stmt 1 view .LVU448
 1535              	.LBB281:
 1536              	.LBB282:
 1537              		.loc 11 84 33 is_stmt 0 view .LVU449
 1538 000e 0462     		str	r4, [r0, #32]
 1539              	.LVL100:
 1540              		.loc 11 84 33 view .LVU450
 1541              	.LBE282:
 1542              	.LBE281:
 1543              	.LBE280:
 1544              	.LBB283:
 1545              	.LBI283:
  40:c:\dev\daisy_seed\libdaisy\src\hid\usb.h **** 
 1546              		.loc 3 40 5 is_stmt 1 view .LVU451
  40:c:\dev\daisy_seed\libdaisy\src\hid\usb.h **** 
ARM GAS  C:\Users\jpmaitre\AppData\Local\Temp\ccYI9wQo.s 			page 54


 1547              		.loc 3 40 5 is_stmt 0 view .LVU452
 1548              	.LBE283:
 1549              	.LBB284:
 1550              	.LBI284:
  96:c:\dev\daisy_seed\libdaisy\src\sys\system.h ****     ~System() {}
 1551              		.loc 2 96 5 is_stmt 1 view .LVU453
  96:c:\dev\daisy_seed\libdaisy\src\sys\system.h ****     ~System() {}
 1552              		.loc 2 96 5 is_stmt 0 view .LVU454
 1553              	.LBE284:
 1554              	.LBB285:
 1555              	.LBI285:
 1556              		.file 12 "c:\\dev\\daisy_seed\\libdaisy\\src\\per\\sai.h"
   1:c:\dev\daisy_seed\libdaisy\src\per\sai.h **** #pragma once
   2:c:\dev\daisy_seed\libdaisy\src\per\sai.h **** #ifndef DSY_SAI_H
   3:c:\dev\daisy_seed\libdaisy\src\per\sai.h **** #define DSY_SAI_H
   4:c:\dev\daisy_seed\libdaisy\src\per\sai.h **** 
   5:c:\dev\daisy_seed\libdaisy\src\per\sai.h **** #include "daisy_core.h"
   6:c:\dev\daisy_seed\libdaisy\src\per\sai.h **** 
   7:c:\dev\daisy_seed\libdaisy\src\per\sai.h **** namespace daisy
   8:c:\dev\daisy_seed\libdaisy\src\per\sai.h **** {
   9:c:\dev\daisy_seed\libdaisy\src\per\sai.h **** /** 
  10:c:\dev\daisy_seed\libdaisy\src\per\sai.h ****  * Support for I2S Audio Protocol with different bit-depth, samplerate options
  11:c:\dev\daisy_seed\libdaisy\src\per\sai.h ****  * Allows for master or slave, as well as freedom of selecting direction, 
  12:c:\dev\daisy_seed\libdaisy\src\per\sai.h ****  * and other behavior for each peripheral, and block.
  13:c:\dev\daisy_seed\libdaisy\src\per\sai.h ****  * 
  14:c:\dev\daisy_seed\libdaisy\src\per\sai.h ****  * DMA Transfer commands must use buffers located within non-cached memory or use cache maintenance
  15:c:\dev\daisy_seed\libdaisy\src\per\sai.h ****  * To declare an unitialized global element in the DMA memory section:
  16:c:\dev\daisy_seed\libdaisy\src\per\sai.h ****  *    int32_t DSY_DMA_BUFFER_SECTOR my_buffer[96];
  17:c:\dev\daisy_seed\libdaisy\src\per\sai.h ****  *
  18:c:\dev\daisy_seed\libdaisy\src\per\sai.h ****  * Callback functions will be called once per half of the buffer. In the above example, 
  19:c:\dev\daisy_seed\libdaisy\src\per\sai.h ****  * the callback function would be called once for every 48 samples.
  20:c:\dev\daisy_seed\libdaisy\src\per\sai.h ****  * 
  21:c:\dev\daisy_seed\libdaisy\src\per\sai.h ****  * Use SAI Handle like this:
  22:c:\dev\daisy_seed\libdaisy\src\per\sai.h ****  * 
  23:c:\dev\daisy_seed\libdaisy\src\per\sai.h ****  *  SaiHandle::Config sai_config;
  24:c:\dev\daisy_seed\libdaisy\src\per\sai.h ****  *  sai_config.periph          = SaiHandle::Config::Peripheral::SAI_1;
  25:c:\dev\daisy_seed\libdaisy\src\per\sai.h ****  *  sai_config.sr              = SaiHandle::Config::SampleRate::SAI_48KHZ;
  26:c:\dev\daisy_seed\libdaisy\src\per\sai.h ****  *  sai_config.bit_depth       = SaiHandle::Config::BitDepth::SAI_24BIT;
  27:c:\dev\daisy_seed\libdaisy\src\per\sai.h ****  *  sai_config.a_sync          = SaiHandle::Config::Sync::MASTER;
  28:c:\dev\daisy_seed\libdaisy\src\per\sai.h ****  *  sai_config.b_sync          = SaiHandle::Config::Sync::SLAVE;
  29:c:\dev\daisy_seed\libdaisy\src\per\sai.h ****  *  sai_config.a_dir           = SaiHandle::Config::Direction::RECEIVE;
  30:c:\dev\daisy_seed\libdaisy\src\per\sai.h ****  *  sai_config.b_dir           = SaiHandle::Config::Direction::TRANSMIT;
  31:c:\dev\daisy_seed\libdaisy\src\per\sai.h ****  *  sai_config.pin_config.fs   = {DSY_GPIOE, 4};
  32:c:\dev\daisy_seed\libdaisy\src\per\sai.h ****  *  sai_config.pin_config.mclk = {DSY_GPIOE, 2};
  33:c:\dev\daisy_seed\libdaisy\src\per\sai.h ****  *  sai_config.pin_config.sck  = {DSY_GPIOE, 5};
  34:c:\dev\daisy_seed\libdaisy\src\per\sai.h ****  *  sai_config.pin_config.sa   = {DSY_GPIOE, 6};
  35:c:\dev\daisy_seed\libdaisy\src\per\sai.h ****  *  sai_config.pin_config.sb   = {DSY_GPIOE, 3};
  36:c:\dev\daisy_seed\libdaisy\src\per\sai.h ****  *  // Then Initialize
  37:c:\dev\daisy_seed\libdaisy\src\per\sai.h ****  *  SaiHandle sai;
  38:c:\dev\daisy_seed\libdaisy\src\per\sai.h ****  *  sai.Init(sai_config);
  39:c:\dev\daisy_seed\libdaisy\src\per\sai.h ****  *  // Now you can use it:
  40:c:\dev\daisy_seed\libdaisy\src\per\sai.h ****  *  sai.StartDma(. . .);
  41:c:\dev\daisy_seed\libdaisy\src\per\sai.h ****  */
  42:c:\dev\daisy_seed\libdaisy\src\per\sai.h **** class SaiHandle
  43:c:\dev\daisy_seed\libdaisy\src\per\sai.h **** {
  44:c:\dev\daisy_seed\libdaisy\src\per\sai.h ****   public:
  45:c:\dev\daisy_seed\libdaisy\src\per\sai.h ****     /** Contains settings for initialising an SAI Interface */
ARM GAS  C:\Users\jpmaitre\AppData\Local\Temp\ccYI9wQo.s 			page 55


  46:c:\dev\daisy_seed\libdaisy\src\per\sai.h ****     struct Config
  47:c:\dev\daisy_seed\libdaisy\src\per\sai.h ****     {
  48:c:\dev\daisy_seed\libdaisy\src\per\sai.h ****         /** Specifies the internal peripheral to use (mapped to different hardware pins) */
  49:c:\dev\daisy_seed\libdaisy\src\per\sai.h ****         enum class Peripheral
  50:c:\dev\daisy_seed\libdaisy\src\per\sai.h ****         {
  51:c:\dev\daisy_seed\libdaisy\src\per\sai.h ****             SAI_1,
  52:c:\dev\daisy_seed\libdaisy\src\per\sai.h ****             SAI_2,
  53:c:\dev\daisy_seed\libdaisy\src\per\sai.h ****         };
  54:c:\dev\daisy_seed\libdaisy\src\per\sai.h **** 
  55:c:\dev\daisy_seed\libdaisy\src\per\sai.h ****         /** Rate at which samples will be streaming to/from the device. */
  56:c:\dev\daisy_seed\libdaisy\src\per\sai.h ****         enum class SampleRate
  57:c:\dev\daisy_seed\libdaisy\src\per\sai.h ****         {
  58:c:\dev\daisy_seed\libdaisy\src\per\sai.h ****             SAI_8KHZ,
  59:c:\dev\daisy_seed\libdaisy\src\per\sai.h ****             SAI_16KHZ,
  60:c:\dev\daisy_seed\libdaisy\src\per\sai.h ****             SAI_32KHZ,
  61:c:\dev\daisy_seed\libdaisy\src\per\sai.h ****             SAI_48KHZ,
  62:c:\dev\daisy_seed\libdaisy\src\per\sai.h ****             SAI_96KHZ,
  63:c:\dev\daisy_seed\libdaisy\src\per\sai.h ****         };
  64:c:\dev\daisy_seed\libdaisy\src\per\sai.h **** 
  65:c:\dev\daisy_seed\libdaisy\src\per\sai.h ****         /** Bit Depth that the hardware expects to be transferred to/from the device. */
  66:c:\dev\daisy_seed\libdaisy\src\per\sai.h ****         enum class BitDepth
  67:c:\dev\daisy_seed\libdaisy\src\per\sai.h ****         {
  68:c:\dev\daisy_seed\libdaisy\src\per\sai.h ****             SAI_16BIT,
  69:c:\dev\daisy_seed\libdaisy\src\per\sai.h ****             SAI_24BIT,
  70:c:\dev\daisy_seed\libdaisy\src\per\sai.h ****             SAI_32BIT,
  71:c:\dev\daisy_seed\libdaisy\src\per\sai.h ****         };
  72:c:\dev\daisy_seed\libdaisy\src\per\sai.h **** 
  73:c:\dev\daisy_seed\libdaisy\src\per\sai.h ****         /** Specifies whether a particular block is the master or the slave 
  74:c:\dev\daisy_seed\libdaisy\src\per\sai.h ****          ** If both are set to slave, no MCLK signal will be used, and it is
  75:c:\dev\daisy_seed\libdaisy\src\per\sai.h ****          ** expected that the codec will have its own xtal.
  76:c:\dev\daisy_seed\libdaisy\src\per\sai.h ****          */
  77:c:\dev\daisy_seed\libdaisy\src\per\sai.h ****         enum class Sync
  78:c:\dev\daisy_seed\libdaisy\src\per\sai.h ****         {
  79:c:\dev\daisy_seed\libdaisy\src\per\sai.h ****             MASTER,
  80:c:\dev\daisy_seed\libdaisy\src\per\sai.h ****             SLAVE,
  81:c:\dev\daisy_seed\libdaisy\src\per\sai.h ****         };
  82:c:\dev\daisy_seed\libdaisy\src\per\sai.h **** 
  83:c:\dev\daisy_seed\libdaisy\src\per\sai.h ****         /** Specifies the direction for each peripheral block. */
  84:c:\dev\daisy_seed\libdaisy\src\per\sai.h ****         enum class Direction
  85:c:\dev\daisy_seed\libdaisy\src\per\sai.h ****         {
  86:c:\dev\daisy_seed\libdaisy\src\per\sai.h ****             TRANSMIT,
  87:c:\dev\daisy_seed\libdaisy\src\per\sai.h ****             RECEIVE,
  88:c:\dev\daisy_seed\libdaisy\src\per\sai.h ****         };
  89:c:\dev\daisy_seed\libdaisy\src\per\sai.h **** 
  90:c:\dev\daisy_seed\libdaisy\src\per\sai.h ****         Peripheral periph;
  91:c:\dev\daisy_seed\libdaisy\src\per\sai.h ****         struct
  92:c:\dev\daisy_seed\libdaisy\src\per\sai.h ****         {
  93:c:\dev\daisy_seed\libdaisy\src\per\sai.h ****             dsy_gpio_pin mclk, fs, sck, sa, sb;
  94:c:\dev\daisy_seed\libdaisy\src\per\sai.h ****         } pin_config;
  95:c:\dev\daisy_seed\libdaisy\src\per\sai.h ****         SampleRate sr;
  96:c:\dev\daisy_seed\libdaisy\src\per\sai.h ****         BitDepth   bit_depth;
  97:c:\dev\daisy_seed\libdaisy\src\per\sai.h ****         Sync       a_sync, b_sync;
  98:c:\dev\daisy_seed\libdaisy\src\per\sai.h ****         Direction  a_dir, b_dir;
  99:c:\dev\daisy_seed\libdaisy\src\per\sai.h ****     };
 100:c:\dev\daisy_seed\libdaisy\src\per\sai.h **** 
 101:c:\dev\daisy_seed\libdaisy\src\per\sai.h ****     /** Return values for SAI functions */
 102:c:\dev\daisy_seed\libdaisy\src\per\sai.h ****     enum class Result
ARM GAS  C:\Users\jpmaitre\AppData\Local\Temp\ccYI9wQo.s 			page 56


 103:c:\dev\daisy_seed\libdaisy\src\per\sai.h ****     {
 104:c:\dev\daisy_seed\libdaisy\src\per\sai.h ****         OK,
 105:c:\dev\daisy_seed\libdaisy\src\per\sai.h ****         ERR,
 106:c:\dev\daisy_seed\libdaisy\src\per\sai.h ****     };
 107:c:\dev\daisy_seed\libdaisy\src\per\sai.h **** 
 108:c:\dev\daisy_seed\libdaisy\src\per\sai.h ****     SaiHandle() : pimpl_(nullptr) {}
 1557              		.loc 12 108 5 is_stmt 1 view .LVU455
 1558              	.LBB286:
 1559              	.LBB287:
 1560              		.loc 12 108 33 is_stmt 0 view .LVU456
 1561 0010 C463     		str	r4, [r0, #60]
 1562              	.LVL101:
 1563              		.loc 12 108 33 view .LVU457
 1564              	.LBE287:
 1565              	.LBE286:
 1566              	.LBE285:
 1567              	.LBE289:
 1568              	.LBE291:
  15:key_controlled_ocillators.cpp **** static Oscillator osc[NB_OSCILLATORS];
 1569              		.loc 6 15 19 view .LVU458
 1570 0012 FFF7FEFF 		bl	__aeabi_atexit
 1571              	.LVL102:
  16:key_controlled_ocillators.cpp **** 
 1572              		.loc 6 16 37 is_stmt 1 view .LVU459
  16:key_controlled_ocillators.cpp **** 
 1573              		.loc 6 16 19 is_stmt 0 view .LVU460
 1574 0016 2046     		mov	r0, r4
 1575 0018 034A     		ldr	r2, .L97+4
 1576 001a 0549     		ldr	r1, .L97+12
 1577              	.LBE292:
 1578              	.LBE294:
 1579              		.loc 6 271 1 view .LVU461
 1580 001c BDE81040 		pop	{r4, lr}
 1581              		.cfi_restore 14
 1582              		.cfi_restore 4
 1583              		.cfi_def_cfa_offset 0
 1584              	.LBB295:
 1585              	.LBB293:
  16:key_controlled_ocillators.cpp **** 
 1586              		.loc 6 16 19 view .LVU462
 1587 0020 FFF7FEBF 		b	__aeabi_atexit
 1588              	.LVL103:
 1589              	.L98:
 1590              		.align	2
 1591              	.L97:
 1592 0024 00000000 		.word	.LANCHOR2
 1593 0028 00000000 		.word	__dso_handle
 1594 002c 00000000 		.word	_ZN5daisy9DaisySeedD1Ev
 1595 0030 00000000 		.word	__tcf_0
 1596              	.LBE293:
 1597              	.LBE295:
 1598              		.cfi_endproc
 1599              	.LFE5255:
 1601              		.section	.init_array,"aw",%init_array
 1602              		.align	2
 1603 0000 00000000 		.word	_GLOBAL__sub_I__Z15initialize_uartPN5daisy11UartHandlerE(target1)
 1604              		.section	.rodata
ARM GAS  C:\Users\jpmaitre\AppData\Local\Temp\ccYI9wQo.s 			page 57


 1605              		.align	2
 1606              		.set	.LANCHOR1,. + 0
 1607              	.LC0:
 1608 0000 01       		.byte	1
 1609 0001 07       		.byte	7
 1610 0002 0000     		.space	2
 1611              	.LC1:
 1612 0004 01       		.byte	1
 1613 0005 06       		.byte	6
 1614              		.section	.bss._ZL2hw,"aw",%nobits
 1615              		.align	2
 1616              		.set	.LANCHOR2,. + 0
 1619              	_ZL2hw:
 1620 0000 00000000 		.space	64
 1620      00000000 
 1620      00000000 
 1620      00000000 
 1620      00000000 
 1621              		.section	.bss._ZL3osc,"aw",%nobits
 1622              		.align	2
 1623              		.set	.LANCHOR0,. + 0
 1626              	_ZL3osc:
 1627 0000 00000000 		.space	264
 1627      00000000 
 1627      00000000 
 1627      00000000 
 1627      00000000 
 1628              		.text
 1629              	.Letext0:
 1630              		.file 13 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\machine\\_default_types.h"
 1631              		.file 14 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\sys\\_stdint.h"
 1632              		.file 15 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\stdint.h"
 1633              		.file 16 "c:\\program files\\daisytoolchain\\lib\\gcc\\arm-none-eabi\\10.2.1\\include\\stddef.h"
 1634              		.file 17 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\cmath"
 1635              		.file 18 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\cstdint"
 1636              		.file 19 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\cstdlib"
 1637              		.file 20 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\type_traits"
 1638              		.file 21 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\debug\\debug.h"
 1639              		.file 22 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\cwchar"
 1640              		.file 23 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\stl_pair.h
 1641              		.file 24 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\exception_
 1642              		.file 25 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\arm-none-eabi\\t
 1643              		.file 26 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\clocale"
 1644              		.file 27 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\cstdio"
 1645              		.file 28 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\basic_stri
 1646              		.file 29 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\charconv.h
 1647              		.file 30 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\algorithmf
 1648              		.file 31 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\cstring"
 1649              		.file 32 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\cstdarg"
 1650              		.file 33 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\predefined
 1651              		.file 34 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\sys\\_types.h"
 1652              		.file 35 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\sys\\reent.h"
 1653              		.file 36 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\sys\\lock.h"
 1654              		.file 37 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\math.h"
 1655              		.file 38 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\stdlib.h"
 1656              		.file 39 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\math.h"
 1657              		.file 40 "c:\\dev\\daisy_seed\\daisysp\\source\\Control/adenv.h"
ARM GAS  C:\Users\jpmaitre\AppData\Local\Temp\ccYI9wQo.s 			page 58


 1658              		.file 41 "c:\\dev\\daisy_seed\\daisysp\\source\\utility\\dsp.h"
 1659              		.file 42 "c:\\program files\\daisytoolchain\\lib\\gcc\\arm-none-eabi\\10.2.1\\include\\stdarg.h"
 1660              		.file 43 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\wchar.h"
 1661              		.file 44 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\locale.h"
 1662              		.file 45 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\stdio.h"
 1663              		.file 46 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\stdlib.h"
 1664              		.file 47 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\string.h"
 1665              		.file 48 "c:\\dev\\daisy_seed\\libdaisy\\src\\daisy_core.h"
 1666              		.file 49 "c:\\dev\\daisy_seed\\libdaisy\\src\\per\\tim.h"
 1667              		.file 50 "c:\\dev\\daisy_seed\\libdaisy\\src\\hid/logger_impl.h"
 1668              		.file 51 "c:\\dev\\daisy_seed\\libdaisy\\src\\util\\wav_format.h"
 1669              		.file 52 "c:\\dev\\daisy_seed\\libdaisy\\src\\dev/max11300.h"
 1670              		.file 53 "c:\\dev\\daisy_seed\\libdaisy\\src\\hid/logger.h"
 1671              		.file 54 "c:\\dev\\daisy_seed\\libdaisy\\src\\per/gpio.h"
 1672              		.file 55 "c:\\dev\\daisy_seed\\libdaisy\\src\\dev/sdram.h"
 1673              		.file 56 "c:\\dev\\daisy_seed\\libdaisy\\src\\dev/sr_595.h"
 1674              		.file 57 "<built-in>"
ARM GAS  C:\Users\jpmaitre\AppData\Local\Temp\ccYI9wQo.s 			page 59


DEFINED SYMBOLS
                            *ABS*:00000000 key_controlled_ocillators.cpp
C:\Users\jpmaitre\AppData\Local\Temp\ccYI9wQo.s:17     .text._ZN5daisy9DaisySeedD2Ev:00000000 $t
C:\Users\jpmaitre\AppData\Local\Temp\ccYI9wQo.s:26     .text._ZN5daisy9DaisySeedD2Ev:00000000 _ZN5daisy9DaisySeedD2Ev
C:\Users\jpmaitre\AppData\Local\Temp\ccYI9wQo.s:26     .text._ZN5daisy9DaisySeedD2Ev:00000000 _ZN5daisy9DaisySeedD1Ev
C:\Users\jpmaitre\AppData\Local\Temp\ccYI9wQo.s:67     .text.__tcf_0:00000000 $t
C:\Users\jpmaitre\AppData\Local\Temp\ccYI9wQo.s:74     .text.__tcf_0:00000000 __tcf_0
C:\Users\jpmaitre\AppData\Local\Temp\ccYI9wQo.s:88     .text._ZL13AudioCallbackPKfPfj:00000000 $t
C:\Users\jpmaitre\AppData\Local\Temp\ccYI9wQo.s:95     .text._ZL13AudioCallbackPKfPfj:00000000 _ZL13AudioCallbackPKfPfj
C:\Users\jpmaitre\AppData\Local\Temp\ccYI9wQo.s:206    .text._ZL13AudioCallbackPKfPfj:00000050 $d
C:\Users\jpmaitre\AppData\Local\Temp\ccYI9wQo.s:213    .text._Z15initialize_uartPN5daisy11UartHandlerE:00000000 $t
C:\Users\jpmaitre\AppData\Local\Temp\ccYI9wQo.s:221    .text._Z15initialize_uartPN5daisy11UartHandlerE:00000000 _Z15initialize_uartPN5daisy11UartHandlerE
C:\Users\jpmaitre\AppData\Local\Temp\ccYI9wQo.s:324    .text._Z15initialize_uartPN5daisy11UartHandlerE:00000034 $d
C:\Users\jpmaitre\AppData\Local\Temp\ccYI9wQo.s:329    .text._Z10flush_uartPN5daisy11UartHandlerE:00000000 $t
C:\Users\jpmaitre\AppData\Local\Temp\ccYI9wQo.s:337    .text._Z10flush_uartPN5daisy11UartHandlerE:00000000 _Z10flush_uartPN5daisy11UartHandlerE
C:\Users\jpmaitre\AppData\Local\Temp\ccYI9wQo.s:386    .text._Z19receive_msg_on_uartPN5daisy11UartHandlerEPc:00000000 $t
C:\Users\jpmaitre\AppData\Local\Temp\ccYI9wQo.s:394    .text._Z19receive_msg_on_uartPN5daisy11UartHandlerEPc:00000000 _Z19receive_msg_on_uartPN5daisy11UartHandlerEPc
C:\Users\jpmaitre\AppData\Local\Temp\ccYI9wQo.s:511    .rodata._Z20analyze_msg_receivedPcPtP10e_msg_typePm.str1.4:00000000 $d
C:\Users\jpmaitre\AppData\Local\Temp\ccYI9wQo.s:527    .text._Z20analyze_msg_receivedPcPtP10e_msg_typePm:00000000 $t
C:\Users\jpmaitre\AppData\Local\Temp\ccYI9wQo.s:535    .text._Z20analyze_msg_receivedPcPtP10e_msg_typePm:00000000 _Z20analyze_msg_receivedPcPtP10e_msg_typePm
C:\Users\jpmaitre\AppData\Local\Temp\ccYI9wQo.s:829    .text._Z20analyze_msg_receivedPcPtP10e_msg_typePm:000000e4 $d
C:\Users\jpmaitre\AppData\Local\Temp\ccYI9wQo.s:838    .text._Z21compute_amplificationm:00000000 $t
C:\Users\jpmaitre\AppData\Local\Temp\ccYI9wQo.s:846    .text._Z21compute_amplificationm:00000000 _Z21compute_amplificationm
C:\Users\jpmaitre\AppData\Local\Temp\ccYI9wQo.s:898    .text._Z21compute_amplificationm:00000050 $d
C:\Users\jpmaitre\AppData\Local\Temp\ccYI9wQo.s:909    .rodata.main.str1.4:00000000 $d
C:\Users\jpmaitre\AppData\Local\Temp\ccYI9wQo.s:916    .text.startup.main:00000000 $t
C:\Users\jpmaitre\AppData\Local\Temp\ccYI9wQo.s:924    .text.startup.main:00000000 main
C:\Users\jpmaitre\AppData\Local\Temp\ccYI9wQo.s:1429   .text.startup.main:000001b8 $d
C:\Users\jpmaitre\AppData\Local\Temp\ccYI9wQo.s:1448   .text.startup._GLOBAL__sub_I__Z15initialize_uartPN5daisy11UartHandlerE:00000000 $t
C:\Users\jpmaitre\AppData\Local\Temp\ccYI9wQo.s:1455   .text.startup._GLOBAL__sub_I__Z15initialize_uartPN5daisy11UartHandlerE:00000000 _GLOBAL__sub_I__Z15initialize_uartPN5daisy11UartHandlerE
C:\Users\jpmaitre\AppData\Local\Temp\ccYI9wQo.s:1592   .text.startup._GLOBAL__sub_I__Z15initialize_uartPN5daisy11UartHandlerE:00000024 $d
C:\Users\jpmaitre\AppData\Local\Temp\ccYI9wQo.s:1602   .init_array:00000000 $d
C:\Users\jpmaitre\AppData\Local\Temp\ccYI9wQo.s:1605   .rodata:00000000 $d
C:\Users\jpmaitre\AppData\Local\Temp\ccYI9wQo.s:1615   .bss._ZL2hw:00000000 $d
C:\Users\jpmaitre\AppData\Local\Temp\ccYI9wQo.s:1619   .bss._ZL2hw:00000000 _ZL2hw
C:\Users\jpmaitre\AppData\Local\Temp\ccYI9wQo.s:1622   .bss._ZL3osc:00000000 $d
C:\Users\jpmaitre\AppData\Local\Temp\ccYI9wQo.s:1626   .bss._ZL3osc:00000000 _ZL3osc
                           .group:00000000 _ZN5daisy9DaisySeedD5Ev

UNDEFINED SYMBOLS
_ZN7daisysp10Oscillator7ProcessEv
_ZN5daisy11UartHandler4InitERKNS0_6ConfigE
_ZN5daisy11UartHandler15BlockingReceiveEPhtm
strlen
strncpy
sscanf
_ZN5daisy6LoggerILNS_17LoggerDestinationE1EE9PrintLineEPKcz
_ZN5daisy9DaisySeed9ConfigureEv
_ZN5daisy9DaisySeed4InitEb
_ZN5daisy9DaisySeed17SetAudioBlockSizeEj
_ZN5daisy6LoggerILNS_17LoggerDestinationE1EE8StartLogEb
_ZN5daisy9DaisySeed15AudioSampleRateEv
_ZN7daisysp10Oscillator12CalcPhaseIncEf
_ZN5daisy9DaisySeed10StartAudioEPFvPKfPfjE
_ZN5daisy9DaisySeed6SetLedEb
__aeabi_atexit
__dso_handle
ARM GAS  C:\Users\jpmaitre\AppData\Local\Temp\ccYI9wQo.s 			page 60


